msgid ""
msgstr ""
"Project-Id-Version: ActiveLdap 3.1.0\n"
"POT-Creation-Date: 2011-11-20 22:17+0900\n"
"PO-Revision-Date: 2014-01-04 14:18+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../README.textile:1
msgid "h1. ActiveLdap"
msgstr ""

#: ../../README.textile:3
msgid "A ruby library for object-oriented LDAP interface."
msgstr "Ruby用オブジェクト指向LDAPインターフェイス。"

#: ../../README.textile:5
msgid ""
"* Copyright (C) 2004-2006 Will Drewry _<will@alum.bu.edu>_\n"
"* Copyright (C) 2006-2013 Kouhei Sutou _<kou@clear-code.com>_"
msgstr ""

#: ../../README.textile:8
msgid "h2. Description"
msgstr "h2. 説明"

#: ../../README.textile:10
msgid ""
"'ActiveLdap' is a ruby library which provides a clean\n"
"objected oriented interface to LDAP library.  It was\n"
"inspired by ActiveRecord. This is not nearly as clean or as\n"
"flexible as ActiveRecord, but it is still trivial to define\n"
"new objects and manipulate them with minimal difficulty."
msgstr ""
"'ActiveLdap'はLDAPライブラリをきれいなオブジェクト指向APIで利用するためのライブラリです。ActiveRecordにインスパイアされていま"
"す。ActiveRecordほどきれいさや柔軟性がないかもしれませんが、ほとんど同じように新しいオブジェクトを作ったり操作したりできます。"

#: ../../README.textile:16
msgid ""
"For example and usage - read the\n"
"\"document\":http://ruby-activeldap.rubyforge.org/."
msgstr ""

#: ../../README.textile:19
msgid "h2. Prerequisites"
msgstr "h2. 必要なもの"

#: ../../README.textile:21
msgid ""
"- Ruby intepreter :=\n"
"One of them:\n"
"* \"Ruby\":http://www.ruby-lang.org (1.9.3 or 2.0.x)\n"
"* \"JRuby\":http://www.jruby.org/"
msgstr ""

#: ../../README.textile:26
#, fuzzy
msgid ""
"See the above links for installation.\n"
"=:\n"
"- LDAP client :=\n"
"JRuby doesn't need to install new library because JRuby\n"
"has builtin LDAP support. Ruby users need one of them:"
msgstr ""
"JRubyは組み込みで<placeholder-1/>をサポートしているので、ライブラリを追加インストールする必要はありません。Rubyを使う場合は以下のい"
"ずれかが必要です:"

#: ../../README.textile:32
msgid ""
"* \"Ruby/LDAP\":http://rubyforge.org/projects/ruby-ldap/\n"
"* \"Net::LDAP\":http://rubyforge.org/projects/net-ldap/"
msgstr ""

#: ../../README.textile:35
#, fuzzy
msgid ""
"See the above links for installation.\n"
"=:\n"
"- ActiveModel :=\n"
"A toolkit for building modeling frameworks like Active\n"
"Record and Active Resource.\n"
"=:"
msgstr "Active RecordやActive Resoruceなどモデルフレームワークを作るためのツールキット。"

#: ../../README.textile:42
msgid "h2. Notes"
msgstr "h2. 注意"

#: ../../README.textile:44
msgid "* Only GSSAPI SASL support exists due to Ruby/LDAP limitations"
msgstr ""

#: ../../README.textile:46
msgid "h2. Rails"
msgstr ""

#: ../../README.textile:48
msgid ""
"See \"Rails\":file.rails.html (\"doc/text/rails.textile\":doc/text/rails.textile\n"
"in the repository and on GitHub) page for Rails integration."
msgstr ""

#: ../../README.textile:51
msgid "h2. Licence"
msgstr "h2. ライセンス"

#: ../../README.textile:53
msgid ""
"This program is free software; you can redistribute it and/or modify it.  It i"
"s\n"
"dual licensed under Ruby's license and under the terms of the GNU General\n"
"Public License as published by the Free Software Foundation; either version 2,"
"\n"
"or (at your option) any later version."
msgstr ""

#: ../../README.textile:57
#, fuzzy
msgid "Please see the file LICENSE for the terms of the licence."
msgstr "ライセンス条項については<placeholder-1/>ファイルを見てください。"

#: ../../README.textile:59
#, fuzzy
msgid "h2. Thanks"
msgstr "感謝"

#: ../../README.textile:61
#, fuzzy
msgid ""
"This list may not be correct. If you notice mistakes of this\n"
"list, please point out."
msgstr "このリストには抜けがあるかもしれません。もし、このリストの間違いに気付いたら教えてください。"

#: ../../README.textile:65
msgid ""
"* Dick Davies\n"
"* Nathan Kinder\n"
"* Patrick Cole\n"
"* Google Inc.\n"
"* Nobody: Bug reports and API improveent ideas.\n"
"* James Hughes: Bug reports and advices and documentations.\n"
"* Buzz Chopra: Documentations.\n"
"* Christoph Lipp:\n"
"** Bug reports.\n"
"** Tell us character escape syntax.\n"
"* Jeff Hall: Bug reports.\n"
"* Ernie Miller: Bug reports and advices.\n"
"* Daniel Pfile: Patches.\n"
"* Jacob Wilkins: Bug reports.\n"
"* Ace Suares:\n"
"** Bug reports.\n"
"** Nederlands translations.\n"
"* Iain Pople: Bug reports and API improvement ideas.\n"
"* Kevin McCarthy: Patches.\n"
"* Perry Smith: Patches, bug reports and indications.\n"
"* Marc Dequènes: API suggestions.\n"
"* Jeremy Pruitt: Bug reports.\n"
"* Bodaniel Jeanes:\n"
"** A suggestion for behavior on simple bind with empty password.\n"
"** Bug reports.\n"
"* Naoto Morishima: Bug reports.\n"
"* David Morton:\n"
"** An API improvement idea.\n"
"** Bug reports.\n"
"* Lennon Day-Reynolds: Bug reports.\n"
"* Tilo: A bug report.\n"
"* Matt Mencel: Bug reports.\n"
"* CultureSpy:\n"
"** Bug reports.\n"
"** Bug fixes.\n"
"* gwarf12: A bug report.\n"
"* Baptiste Grenier: API improvement ideas.\n"
"* Richard 3 Nicholas: API improvement ideas.\n"
"* Kazuhiro NISHIYAMA: A bug report.\n"
"* Grzegorz Marszałek: A bug report.\n"
"* しまさわらさん: A suggesetion.\n"
"* Ted Lepich: A suggestion.\n"
"* danger1986: A suggestion.\n"
"* michael.j.konopka: Bug reports.\n"
"* ingersoll: A suggestion.\n"
"* Alexey.Chebotar: Bug reports.\n"
"* ery.lee: A bug report.\n"
"* id:dicdak: A bug report.\n"
"* Raiko Mitsu: A bug report.\n"
"* Kazuaki Takase: Documents in Japanese.\n"
"* Tim Hermans: A bug report.\n"
"* Joe Francis: A suggestion.\n"
"* Tiago Fernandes: Bug reports.\n"
"* achemze: A suggestion.\n"
"* George Montana Harkin: A suggestion.\n"
"* Marc Dequènes: Bug reports.\n"
"* brad@lucky-dip.net: A bug report.\n"
"* Hideyuki Yasuda: Bug reports.\n"
"* zachwily: A bug report.\n"
"* syrius.ml@no-log.org: A bug report.\n"
"* Tim Hermans: A bug report.\n"
"* Anthony M. Martinez: Helped SASL options support\n"
"* ilusi0n.x: A bug report.\n"
"* projekttabla: A suggestion.\n"
"* christian.pennaforte: A bug report.\n"
"* planetmcd: A bug report.\n"
"* spoidar: Rails 3 support.\n"
"* Kris Wehner: Rails 2.3.8 support.\n"
"* Ryan Tandy:\n"
"** A test bug fix.\n"
"** Rails 3 support.\n"
"* rbq: A bug report.\n"
"* Narihiro Nakamura: Rails 3 support.\n"
"* Hidetoshi Yoshimoto: Rails 3 support.\n"
"* warden: A bug report.\n"
"* bklier: A bug fix.\n"
"* Craig White: Bug reports."
msgstr ""

#: ../../doc/text/development.textile:1
#, fuzzy
msgid "h1. Development"
msgstr "開発"

#: ../../doc/text/development.textile:3
msgid "Here is information for developers."
msgstr "開発者向け情報です。"

#: ../../doc/text/development.textile:5
#, fuzzy
msgid "h2. Repository"
msgstr "リポジトリ"

#: ../../doc/text/development.textile:7
#, fuzzy
msgid ""
"ActiveLdap uses [\"git repository on\n"
"GitHub\":https://github.com/activeldap]. Here is a\n"
"list to get each source code."
msgstr "ActiveLdapは<placeholder-1/>を利用しています。ソースコードは以下のように取得できます。"

#: ../../doc/text/development.textile:11
msgid ""
"- \"activeldap\":https://github.com/activeldap/activeldap :=\n"
"<pre class=\"command\">\n"
"% git clone https://github.com/activeldap/activeldap.git\n"
"</pre>\n"
"=:\n"
"- \"al-admin\":https://github.com/activeldap/al-admin :=\n"
"<pre class=\"command\">\n"
"% git clone https://github.com/activeldap/al-admin.git\n"
"</pre>\n"
"=:"
msgstr ""

#: ../../doc/text/development.textile:22
#, fuzzy
msgid "h2. Issues"
msgstr "不具合・要望"

#: ../../doc/text/development.textile:24
#, fuzzy
msgid ""
"ActiveLdap uses \"Issues on\n"
"GitHub\":https://github.com/activeldap/activeldap/issues for\n"
"issue tracking. Please submit a issue when you find an\n"
"issue."
msgstr "ActiveLdapは不具合・要望の管理に<placeholder-1/>を利用しています。もし、なにか気付いたことがあったらここに登録してください。"

#: ../../doc/text/development.textile:29
#, fuzzy
msgid "h2. Rails 3 support"
msgstr "Rails 3対応"

#: ../../doc/text/development.textile:31
msgid "Here is design about Rails 3 support."
msgstr "Rails 3対応に関する設計です。"

#: ../../doc/text/development.textile:33
msgid "h3. must"
msgstr ""

#: ../../doc/text/development.textile:35
msgid ""
"* We add active_ldap/test_help.rb to support ActiveLdap fixture.\n"
"We don't write same codes into test_helper.rb like\n"
"http://ruby-activeldap.rubyforge.org/activeldap-fabrication/en/#Install"
msgstr ""

#: ../../doc/text/development.textile:39
msgid "h3. may"
msgstr ""

#: ../../doc/text/development.textile:41
msgid ""
"* We support Warden.\n"
"* We support Devise\n"
"* We support OmniAuth. (instead of Warden)"
msgstr ""

#: ../../doc/text/development.textile:45
msgid "h3. DONE"
msgstr ""

#: ../../doc/text/development.textile:47
msgid ""
"* We don't support Rails 3.0.x.\n"
"* We provide active_ldap/railtie to initialize ActiveLdap.\n"
"* We remove ActiveRecord dependency.\n"
"* We depend on ActiveModel instead of ActiveRecord.\n"
"* We target to Rails 3.1.0. (Yes, it's not released yet\n"
"  but it will be released before we support Rails 3.x.)\n"
"* We update the documentation and ensure that the procedure\n"
"  for including ActiveLdap in a Rails 3 project is correct."
msgstr ""

#: ../../doc/text/news.textile:1
msgid "h1. News"
msgstr "h1. おしらせ"

#: ../../doc/text/news.textile:3
msgid "h2(#4-0-2). 4.0.2: 2014-01-04"
msgstr ""

#: ../../doc/text/news.textile:5 ../../doc/text/news.textile:41
#: ../../doc/text/news.textile:67
msgid "h3. Improvements"
msgstr "h3. 改良"

#: ../../doc/text/news.textile:7
msgid ""
"* Supported sub-tree moving by all adapters.\n"
"* Used YARD style link in documentation. [Reported by Fraser McCrossan]\n"
"* Supported Object-Security-Descriptor (OID: 1.2.840.113556.1.4.907)\n"
"  [GitHub:#66] [Reported by Nowhere Man]\n"
"* Made JEPG syntax binary.\n"
"* Supported binary encoding for values in a container.\n"
"  [GitHub:#66] [Reported by Nowhere Man]\n"
"* Added documentation about @:filter@ option of {ActiveLdap::Base.find}\n"
"  into tutorial.\n"
"  [GitHub:#72] [Patch by Fernando Martinez]\n"
"* Migrated to gettext gem from gettext_i18n_rails gem because ActiveLdap\n"
"  dosen't use any gettext_i18n_rails gem features..\n"
"  [activeldap-discuss] [Reported by Christian Nennemann]\n"
"* Supported retry on timeout on JNDI adapter.\n"
"  [GitHub:#77] [Patch by Ryosuke Yamazaki]"
msgstr ""

#: ../../doc/text/news.textile:21 ../../doc/text/news.textile:64
#: ../../doc/text/news.textile:85 ../../doc/text/news.textile:94
#: ../../doc/text/news.textile:122 ../../doc/text/news.textile:144
#: ../../doc/text/news.textile:178
msgid "h3. Thanks"
msgstr "h3. 感謝"

#: ../../doc/text/news.textile:23 ../../doc/text/news.textile:52
msgid "h3. Fixes"
msgstr "h3. 修正"

#: ../../doc/text/news.textile:25
msgid ""
"* Removed needless newlines generated by @pack(\"m\")@.\n"
"  [GitHub:#75] [GitHub:#76] [Patch by Ryosuke Yamazaki]\n"
"* Fixed a bug that @after_initialize@ isn't run.\n"
"  [GitHub:#79] [Patch by Nobutaka OSHIRO]"
msgstr ""

#: ../../doc/text/news.textile:32
msgid ""
"* Fraser McCrossan\n"
"* Nowhere Man\n"
"* Fernando Martinez\n"
"* Christian Nennemann\n"
"* Ryosuke Yamazaki\n"
"* Nobutaka OSHIRO"
msgstr ""

#: ../../doc/text/news.textile:39
msgid "h2(#4-0-1). 4.0.1: 2013-08-29"
msgstr ""

#: ../../doc/text/news.textile:43
msgid ""
"* Added ActiveLdap::EntryAttribute#exist?.\n"
"* [GitHub:#66] Improved Active Directory support.\n"
"  Binary data can be validated correctly. [Reported by Nowhere Man]\n"
"* [GitHub:#6][GitHub:#69] Improved setup description in tutorial.\n"
"  [Reported by Radosław Antoniuk] [Patch by Francisco Miguel Biete]\n"
"* [GitHub:#56] Supported moving sub-tree. It requires Ruby/LDAP 0.9.13 or late"
"r,\n"
"  JRuby or net-ldap 0.5.0 or later. (net-ldap 0.5.0 isn't released yet.)\n"
"  [Reported by Jean-François Rioux]"
msgstr ""

#: ../../doc/text/news.textile:54
msgid ""
"* [GitHub:#65] Removed removed attributes values by removing\n"
"  objectClasses. [Reported by mbab]"
msgstr ""

#: ../../doc/text/news.textile:59
msgid ""
"* mbab\n"
"* Nowhere Man\n"
"* Radosław Antoniuk\n"
"* Francisco Miguel Biete\n"
"* Jean-François Rioux"
msgstr ""

#: ../../doc/text/news.textile:65
msgid "h2(#4-0-0). 4.0.0: 2013-07-13"
msgstr ""

#: ../../doc/text/news.textile:69
msgid ""
"* [activeldap-discuss] Added {ActiveLdap::Entry} for convenient.\n"
"  [Suggested by Craig White]\n"
"* [GitHub:#45] Ensured that {ActiveLdap::Persistence#save!} returns\n"
"  true on success. But you should use {ActiveLdap::Persistence#save}\n"
"  to determine success or failure by return value.\n"
"  [Reported by Suggested by Erik M Jacobs]\n"
"* [GitHub:#52] Improved binary data handling on Ruby 1.9.3.\n"
"  [Patch by Carl P. Corliss]\n"
"* [GitHub:#53] Supported lower case hashed password.\n"
"  [Patch by jpiotro3]\n"
"* [GitHub:#51] Supported implicit railtie load by\n"
"  @require \"active_ldap\"@.\n"
"  [Patch by mperrando]\n"
"* [GitHub:#62] Improved JNDI communication error handling.\n"
"  [Patch by Ryosuke Yamazaki]\n"
"* [GitHub:#61] Supported Rails 4. Dropped Rails 3 support.\n"
"  [Patch by superscott]\n"
"* [GitHub:#63] Handled Errno::ECONNRESET as connection in\n"
"  net-ldap adapter [Patch by mpoornima]\n"
"h3. Fixes"
msgstr ""

#: ../../doc/text/news.textile:81
msgid ""
"* Supported entry creation by direct ActiveLdap::Base use.\n"
"  [Reported by Craig White]\n"
"* Started to use Travis CI."
msgstr ""
"* 直接ActiveLdap::Baseを使ったエントリ作成をサポート。 [Craig Whiteさんが報告]\n"
"* Travis CIの使用を開始。"

#: ../../doc/text/news.textile:87 ../../doc/text/news.textile:96
msgid "* Craig White"
msgstr "* Craig Whiteさん"

#: ../../doc/text/news.textile:90
msgid ""
"* [GitHub:#44] Fixed a typo in document.\n"
"  [Patch by Vaucher Philippe]\n"
"* [GitHub:#50] Fixed a stack overflow during SASL bind to a\n"
"  unresponsive LDAP server.\n"
"  [Patch by pwillred]\n"
"* [GitHub:#54] Fixed a link in document.\n"
"  [Patch by marco]\n"
"* [GitHub:#57] Fixed a wrong blank value detection for \"false\".\n"
"  [Reported by Robin Doer]"
msgstr ""

#: ../../doc/text/news.textile:91
msgid ""
"* Fixed a bug that ActiveLdap::Base#delete doesn't work.\n"
"  [Reported by Craig White]"
msgstr "* ActiveLdap::Base#deleteが動かない問題を修正。 [Craig Whiteさんが報告]"

#: ../../doc/text/news.textile:102
msgid ""
"* Craig White\n"
"* Vaucher Philippe\n"
"* Erik M Jacobs\n"
"* pwillred\n"
"* Carl P. Corliss\n"
"* jpiotro3\n"
"* marco\n"
"* mperrando\n"
"* Robin Doer\n"
"* Ryosuke Yamazaki\n"
"* superscott\n"
"* mpoornima"
msgstr ""

#: ../../doc/text/news.textile:115
msgid "h2(#3-2-2). 3.2.2: 2012-09-01"
msgstr ""

#: ../../doc/text/news.textile:125
msgid "h2(#3-2-1). 3.2.1: 2012-08-31"
msgstr ""

#: ../../doc/text/news.textile:134
msgid "h2(#3-2-0). 3.2.0: 2012-08-29"
msgstr ""

#: ../../doc/text/news.textile:136
msgid ""
"* [GitHub:#39] Supported Rails 3.2.8. [Reported by Ben Langfeld]\n"
"* [GitHub:#13] Don't use deprecated Gem.available?. [Patch by sailesh]\n"
"* [GitHub:#19] Supported new entry by @ha_many :wrap@. [Patch by Alex Tomlins]"
"\n"
"* Supported @:only@ option in XML output.\n"
"* [GitHub:#14] Supported nil as single value. [Reported by n3llyb0y]\n"
"* [GitHub:#20] Supported ActiveModel::MassAssignmentSecurity.\n"
"  [Reported by mihu]\n"
"* [GitHub:#24] Supported Ruby 1.9 style Hash syntax in generator.\n"
"  [Patch by ursm]\n"
"* [GitHub:#25][GitHub:#39] Supported ActiveModel::Dirty.\n"
"  [Patch by mihu][Reported by Ben Langfeld]\n"
"* [GitHub:#26] Improved speed for dirty. [Patch by mihu]\n"
"* [GitHub:#28] Improved speed for initialization. [Patch by mihu]\n"
"* [GitHub:#29] Added .gemspec. [Suggested by mklappstuhl]\n"
"* [GitHub:#34] Removed an unused method. [Patch by mihu]\n"
"* [GitHub:#37] Improved will_paginate support. [Patch by Craig White]\n"
"* [GitHub:#40] Added missing test files to .gemspec. [Reported by Vít Ondruch]"
"\n"
"* [GitHub:#41] Improved speed for find. [Patch by unixmechanic]\n"
"* Changed i18n backend to gettext from fast_gettext again.\n"
"* [GitHub:#42] Fixed a bug that optional second is required for GeneralizedTim"
"e.\n"
"  [Reported by masche842]"
msgstr ""

#: ../../doc/text/news.textile:160
msgid ""
"* sailesh\n"
"* Alex Tomlins\n"
"* n3llyb0y\n"
"* mihu\n"
"* ursm\n"
"* Ben Langfeld\n"
"* mklappstuhl\n"
"* Craig White\n"
"* Vít Ondruch\n"
"* unixmechanic\n"
"* masche842"
msgstr ""

#: ../../doc/text/news.textile:172
msgid "h2(#3-1-1). 3.1.1: 2011-11-03"
msgstr ""

#: ../../doc/text/news.textile:174
msgid ""
"* Supported Rails 3.1.1.\n"
"* [GitHub:#9] Fixed a typo in document. [warden]\n"
"* [GitHub:#11] Added persisted?. [bklier]\n"
"* [GitHub:#16] Supported 4 or more bytes salt for SSHA and SMD5.\n"
"  [Alex Tomlins]"
msgstr ""

#: ../../doc/text/news.textile:182
msgid ""
"* warden\n"
"* bklier\n"
"* Alex Tomlins"
msgstr ""

#: ../../doc/text/news.textile:186
msgid "h2(#3-1-0). 3.1.0: 2011-07-09"
msgstr ""

#: ../../doc/text/news.textile:188
msgid ""
"* Supported Rails 3.1.0.rc4.\n"
"  [Ryan Tandy, Narihiro Nakamura, Hidetoshi Yoshimoto]\n"
"* Removed ActiveRecord dependency and added ActiveModel dependency.\n"
"* Used YARD instead of RDoc as documentation sysytem."
msgstr ""

#: ../../doc/text/news.textile:193
msgid "h2. 1.2.4: 2011-05-13"
msgstr ""

#: ../../doc/text/news.textile:195
msgid ""
"* Splited AL-Admin into other repository: https://github.com/activeldap/al-adm"
"in\n"
"* [GitHub:#2] Fixed \"path po cound not be found\" error by fast_gettext.\n"
"  [rbq]"
msgstr ""

#: ../../doc/text/news.textile:199
msgid "h2. 1.2.3: 2011-04-30"
msgstr ""

#: ../../doc/text/news.textile:201
msgid ""
"* [#40] Ignored nil value attribute.\n"
"  [christian.pennafort]\n"
"* [#48] Escaped \":\" in filter value.\n"
"  [planetmcd]\n"
"* Added missing rubygems require.\n"
"  [spoidar]\n"
"* Used fast_gettext instead of gettext.\n"
"  [Peter Fern]\n"
"* Supported Rails 2.3.11.\n"
"  [Kris Wehner]\n"
"* Fixed wrong assertion in test.\n"
"  [Ryan Tandy]"
msgstr ""

#: ../../doc/text/news.textile:216
msgid ""
"* christian.pennafort\n"
"* planetmcd\n"
"* spoidar\n"
"* Peter Fern\n"
"* Kris Wehner\n"
"* Ryan Tandy"
msgstr ""

#: ../../doc/text/news.textile:223
msgid "h2. 1.2.2: 2010-07-04"
msgstr ""

#: ../../doc/text/news.textile:225
msgid ""
"* Supported ActiveRecord 2.3.8 and Rails 2.3.8.\n"
"* [#37] Fixed gem dependencies in Rakefile. [zachwily]\n"
"* Fixed a bug that setting 'false' but 'nil' is returned. [Hideyuki Yasuda]\n"
"* Supported non-String attribute value as LDIF value. [Matt Mencel]\n"
"* Worked with a LDAP server that uses 'objectclass' not 'objectClass' as\n"
"  objectClass attribute name. [Tim Hermans]\n"
"* [#41] Provide SASL-option support, primarily for authzid\n"
"  [Anthony M. Martinez]\n"
"* [#43] Error with to_xml [ilusi0n.x]\n"
"* [#44] Accept '0' and '1' as boolean value [projekttabla]\n"
"* [#27429] Fixed inverted validatation by validate_excluded_classes\n"
"  [Marc Dequènes]\n"
"* Supported DN attribute value for assosiation replacement.\n"
"  [Jörg Herzinger]"
msgstr ""

#: ../../doc/text/news.textile:240
msgid "h2. 1.2.1: 2009-12-15"
msgstr ""

#: ../../doc/text/news.textile:242
msgid ""
"* Supported ActiveRecord 2.3.5 and Rails 2.3.5.\n"
"* Supported GetText 2.1.0 and Locale 2.0.5.\n"
"* belongs_to(:many) support DN attribute.\n"
"* [#31] ActiveLdap::Base#attributes returns data that reflects\n"
"  schema definition. [Alexey.Chebotar]\n"
"* blocks DN attribute change by mass assignment with :id => ....\n"
"* [#35] fix has_many association is broken. [culturespy]\n"
"* Supported nested attribute options. [Hideyuki Yasuda]"
msgstr ""

#: ../../doc/text/news.textile:251
msgid "h2. 1.2.0: 2009-09-22"
msgstr ""

#: ../../doc/text/news.textile:253
msgid ""
"* Supported ActiveRecord 2.3.4 and Rails 2.3.4.\n"
"* [IMCOMPATIBLE]\n"
"  [#23932] Inconsistant DN handling in object attributes [Marc Dequènes]\n"
"  (ActiveLdap::Base#dn and ActiveLdap::Base#base return\n"
"  ActiveLdap::DN not String)\n"
"* [#26824] support operational attributes detection [Marc Dequènes]\n"
"  (added ActiveLdap::Schema::Attribute#directory_operation?)\n"
"* [#27] Error saving an ActiveLDAP user [brad@lucky-dip.net]\n"
"* [#29] Raised on modify_rdn_entry when rdn already exists [Alexey.Chebotar]\n"
"* Added ActiveLdap::DN.parent.\n"
"* Supported renaming an entry. Renaming other DTI is only supported by\n"
"  JNDI backend."
msgstr ""

#: ../../doc/text/news.textile:266
msgid "h2. 1.1.0: 2009-07-18"
msgstr ""

#: ../../doc/text/news.textile:268
msgid ""
"* Improved tutorial. [Kazuaki Takase]\n"
"* Improvements:\n"
"** API:\n"
"*** [#26] Supported to_xml for associations. [achemze]\n"
"*** ActiveLdap::Base.delete_all(filter=nil, options={}) ->\n"
"    ActiveLdap::Base.delete_all(filter_or_options={}).\n"
"    Sure, old method signature is also still supported.\n"
"*** belongs_to(:many) with :foreign_key is deprecated.\n"
"    Use :primary_key instead of :foreign_key. [Kazuaki Takase]\n"
"*** Means of has_many's :primary_key and :foreign_key are inverted.\n"
"    [Kazuaki Takase]\n"
"*** [experimental] Added ldap_field ActionView helper to\n"
"    generate form fileds for a LDAP entry.\n"
"** Suppressed needless attributes updating.\n"
"* Dependencies:\n"
"** Re-supported GetText.\n"
"** ActiveRecord 2.3.2 is only supported."
msgstr ""

#: ../../doc/text/news.textile:286
msgid "h2. 1.0.9"
msgstr ""

#: ../../doc/text/news.textile:288
msgid ""
"* Added documents in Japanese. [Kazuaki Takase]\n"
"* Supported Ruby 1.9.1.\n"
"** [#20] [Ruby 1.9 Support] :: Running Tests [Alexey.Chebotar]\n"
"* Supported Rails 2.3.2.\n"
"** [#18] [Rails 2.3 Support] :: Running WEBrick Hangs [Alexey.Chebotar]\n"
"* Bug fixes:\n"
"** Fixed blank values detection. [David Morton]\n"
"** [#22] Ruby 1.8.6 p287 :: Undefined methods [Alexey.Chebotar]\n"
"** Fixed gem loading. [Tiago Fernandes]\n"
"** Fixed DN change via #base=. [David Morton]\n"
"** Fixed infinite retry on timeout.\n"
"** Fixed needless reconnection.\n"
"* API improvements:\n"
"** Removed needless instance methods: #prefix=,\n"
"   #dn_attribute=, #sort_by=, #order=, #required_classes=,\n"
"   #recommended_classes= and #excluded_classes. [David Morton]\n"
"** Removed obsolete scafoold_al generator.\n"
"** Reduced default :retry_limit.\n"
"** Supported association as parameter. [Joe Francis]\n"
"** Normalized schema attribute name. [Tim Hermans]\n"
"** Suppressed AuthenticationError -> ConnectionError\n"
"   conversion on reconnection. [Kazuaki Takase]\n"
"** Added ActiveLdap::Schema#dump.\n"
"** ActiveLdap::Base.establish_connection ->\n"
"   ActiveLdap::Base.setup_connection.\n"
"** Supported ActiveLdap::Base.find(:last).\n"
"** Added convenient methods:\n"
"*** ActiveLdap::Base.first\n"
"*** ActiveLdap::Base.last\n"
"*** ActiveLdap::Base.all"
msgstr ""

#: ../../doc/text/news.textile:319
msgid "h2. 1.0.2"
msgstr ""

#: ../../doc/text/news.textile:321
msgid ""
"* Removed Base64 module use.\n"
"* Improved LDIF parser.\n"
"* Improved scheme parser.\n"
"* Supported Base64 in XML serialization.\n"
"* Supported TLS options.\n"
"* Supported ActiveRecord 2.2.2.\n"
"* Supported Ruby on Rails 2.2.2.\n"
"* Used rails/init.rb and rails_generators/ directory structure convention\n"
"  for Rails and gem. rails/ directory will be removed after 1.0.2 is released."
"\n"
"* AL-Admin migrated to Ruby on Rails 2.2.2 form 2.0.2.\n"
"* Improved ActiveDirectory integration.\n"
"* Accepted :class_name for belong_to and has_many option.\n"
"* Improved default port guess.\n"
"* Bug fixes:\n"
"** [#4] ModifyRecord#load doesn't operate atomic. [gwarf12]\n"
"** [#5] to_xml supports :except option. [baptiste.grenier]\n"
"** [#6] to_xml uses ActiveResource format. [baptiste.grenier]\n"
"** Out of ranged GeneralizedTime uses Time.at(0) as fallback value.\n"
"   [Richard Nicholas]\n"
"** ActiveLdap::Base#to_s uses #to_ldif. [Kazuhiro NISHIYAMA]\n"
"** Fixed excess prefix extraction. [Grzegorz Marszałek]\n"
"** Skiped read only attribute validation. [しまさわらさん]\n"
"** Treated \"\" as empty value. [Ted Lepich]\n"
"** [#9][#16] Reduced raising when DN value is invalid.\n"
"   [danger1986][Alexey.Chebotar]\n"
"** [#10][#12] Fixed needless ',' is appeared. [michael.j.konopka]\n"
"** [#11] Required missing 'active_ldap/user_password'. [michael.j.konopka]\n"
"** [#13] Returned entries if has_many :wrap has nonexistent entry.\n"
"   [ingersoll]\n"
"** [#15] Fixed type error on computing DN. [ery.lee]\n"
"** \">=\" filter operator doesn't work. [id:dicdak]\n"
"** [#17] ActiveLdap::Base.create doesn't raise exception. [Alexey.Chebotar]"
msgstr ""

#: ../../doc/text/news.textile:354
msgid "h2. 1.0.1"
msgstr ""

#: ../../doc/text/news.textile:356
msgid ""
"* Fixed GetText integration.\n"
"* Fixed ActiveLdap::Base.find with ActiveLdap::DN. (Reported by Jeremy Pruitt)"
"\n"
"* Fixed associated bugs. (Reported by CultureSpy)\n"
"* Supported ActiveLdap::Base#attribute_present? with nonexistence attribute.\n"
"  (Reported by Matt Mencel)\n"
"* Added ActiveLdap::Base#.to_ldif_record.\n"
"* Improved inspect.\n"
"* Supported ActiveSupport 2.1.0."
msgstr ""

#: ../../doc/text/news.textile:365
msgid "h2. 1.0.0"
msgstr ""

#: ../../doc/text/news.textile:367
msgid ""
"* Fixed GSSAPI auth failure. [#18764] (Reported by Lennon Day-Reynolds)\n"
"* Supported Symbol as :dn_attribute_value. [#18921] (Requested by Nobody)\n"
"* Improved DN attribute detection. (Reported by Iain Pople)\n"
"* Avoided unnecesally modify operation. (Reported by Tilo)"
msgstr ""

#: ../../doc/text/news.textile:372
msgid "h2. 0.10.0"
msgstr ""

#: ../../doc/text/news.textile:374
msgid ""
"* Implemented LDIF parser.\n"
"* Improved validation:\n"
"** Added some validations.\n"
"** Fixed SINGLE-VALUE validation. [#17763]\n"
"   (Reported by Naoto Morishima)\n"
"* Supported JNDI as backend.\n"
"* Improved auto reconnection.\n"
"* Supported Rails 2.0.2.\n"
"* Improved performance. (4x)\n"
"* [API CHANGE]: removed \"'binary' =>\" from getter result."
msgstr ""

#: ../../doc/text/news.textile:385
msgid ""
"  <pre>\n"
"  !!!plain\n"
"  e.g.:\n"
"    before:\n"
"        user.user_certificate # => {\"binary\" => \"...\"}\n"
"       now:\n"
"        user.user_certificate # => \"...\"\n"
"  </pre>"
msgstr ""

#: ../../doc/text/news.textile:394
msgid ""
"* Added :excluded_classed ldap_mapping option.\n"
"* Logged operation time used for LDAP operation.\n"
"* Improved API:\n"
"** Accepted non String value for find(:value => XXX).\n"
"   (Suggested by Marc Dequèn)\n"
"** Accepted DN as ActiveLdap::Base.new(XXX).\n"
"   (Reported by Jeremy Pruitt)\n"
"** Treated empty password for smiple bind as anonymous bind.\n"
"   (Suggested by Bodaniel Jeans)\n"
"** Ensured adding \"objectClass\" for find's :attribute value. [#16946]\n"
"   (Suggested by Nobody)\n"
"** Fixed a GeneralizedTime type casting bug.\n"
"   (Reported by Bodaniel Jeanes)\n"
"** Supported :base and :prefix search/find option value escaping.\n"
"   (Suggested by David Morton)"
msgstr ""

#: ../../doc/text/news.textile:410
msgid "h2. 0.9.0"
msgstr ""

#: ../../doc/text/news.textile:412
msgid ""
"* Improved DN handling.\n"
"* Supported attribute value validation by LDAP schema.\n"
"* Changed RubyGems name: ruby-activeldap -> activeldap.\n"
"* Removed Log4r dependency.\n"
"* Supported lazy connection establishing.\n"
"** [API CHANGE]: establish_connection doesn't connect LDAP server.\n"
"* [API CHANGE]: Removed ActiveLdap::Base#establish_connection.\n"
"* Added ActiveLdap::Base#bind. (use this instead of #establish_connection)\n"
"* Supported implicit acts_as_tree.\n"
"* [API CHANGE]: Supported type casting.\n"
"* Supported :uri option in configuration.\n"
"* Improved Rails integration:\n"
"** Followed Rails 2.0 changes.\n"
"** AL-Admin:\n"
"*** Supported lang parameter in URL.\n"
"*** Improved design a bit. (Please someone help us!)\n"
"*** Supported schema inspection.\n"
"*** Supported objectClass modifiation.\n"
"** Rails plugin:\n"
"*** Added ActiveLdap::VERSION check.\n"
"*** Added model_active_ldap generator.\n"
"*** Renamed scaffold_al generator to scaffold_active_ldap."
msgstr ""

#: ../../doc/text/news.textile:435
msgid "h2. 0.8.3"
msgstr ""

#: ../../doc/text/news.textile:437
msgid ""
"* Added AL-Admin Sample Rails app\n"
"* Added Ruby-GetText-Package support\n"
"* Added a Rails plugin\n"
"* Improved schema handling\n"
"* Improved performance\n"
"* Many bug fixes"
msgstr ""

#: ../../doc/text/news.textile:444
msgid "h2. 0.8.2"
msgstr ""

#: ../../doc/text/news.textile:446
msgid ""
"* Added Net::LDAP support!\n"
"** supported SASL Digest-MD5 authentication with Net::LDAP.\n"
"* improved LDAP server support:\n"
"** improved Sun DS support.\n"
"** improved ActiveDirectory support. Thanks to Ernie Miller!\n"
"** improved Fedora-DS support. Thanks to Daniel Pfile!\n"
"* improved existing functions:\n"
"** improved DN handling. Thanks to James Hughes!\n"
"** improved SASL bind.\n"
"** improved old API check.\n"
"** improved schema handling. Thanks to Christoph Lipp!\n"
"** improved filter notification.\n"
"* updated documents:\n"
"** updated Rails realted documenation. Thanks to James Hughes!\n"
"** updated documentation for the changes between 0.7.1 and 0.8.0.\n"
"   Thanks to Buzz Chopra!\n"
"* added new features:\n"
"** added scaffold_al generator for Rails.\n"
"** added required_classes to default filter value. Thanks to Jeff Hall!\n"
"** added :recommended_classes option to ldap_mapping.\n"
"** added :sort_by and :order options to find.\n"
"** added ActiveLdap::Base#to_param for ActionController.\n"
"* fixed some bugs:\n"
"** fixed rake install/uninstall.\n"
"** fixed typos. Thanks to Nobody!\n"
"** fixed required_classes initialization. Thanks to James Hughes!"
msgstr ""

#: ../../doc/text/news.textile:473
msgid "h2. 0.8.1"
msgstr ""

#: ../../doc/text/news.textile:475
msgid ""
"* used Dependencies.load_paths.\n"
"* check whether attribute name is available or not.\n"
"* added test for find(:first, :attribute => 'xxx', :value => 'yyy').\n"
"* supported ActiveSupport 1.4.0.\n"
"* make the dual licensing of ruby-activeldap clear in the README.\n"
"* followed edge Rails: don't use Reloadable::Subclasses if doesn't need.\n"
"* added examples/.\n"
"* removed debug code.\n"
"* normalized attribute name to support wrong attribute names in MUST/MAY.\n"
"* supported getting dn value by Base#[].\n"
"* test/test_userls.rb: followed userls changes.\n"
"* update the doc href.\n"
"* provide a dumb example of how to use the old association(return_objects) sty"
"le API with the new awesome API.\n"
"* followed new API.\n"
"* removed a finished task: support Reloadable::Subclasses."
msgstr ""

#: ../../doc/text/news.textile:491
msgid "h2. 0.8.0"
msgstr ""

#: ../../doc/text/news.textile:493
msgid ""
"* Makefile/gemspec system replaced with Rakefile + Hoe\n"
"* Bugfix: Allow base to be empty\n"
"* Add support for Date, DateTime, and Time objects (patch from Patrick Cole)\n"
"* Add support for a :filter argument to override the default attr=val LDAP sea"
"rch filter in find_all() and find() (patch from Patrick Cole)\n"
"* Add Base#update_attributes(hash) method which does bulk updates to attribute"
"s (patch from Patrick Cole) and saves immediately\n"
"* API CHANGE: #attributes now returns a Hash of attribute_name => clone(attrib"
"ute_val)\n"
"* API CHANGE: #attribute_names now returns an alphabetically sorted list of at"
"tribute names\n"
"* API CHANGE;\n"
"* Added attributes=() as the implementation for update_attributes(hash) (witho"
"ut autosave)\n"
"* API TRANSITION: Base#write is now deprecated. Please use Base#save\n"
"* API TRANSITION: Added SaveError exception (which is a subclass of WriteError"
" for now)\n"
"* API TRANSITION: Base.connect() is now deprecated. Please use Base.establish_"
"connection()\n"
"* API TRANSITION: Base.close() is now deprecated. Please use Base.remove_conne"
"ction()\n"
"* API TRANSITION: :bind_format and :user of Base.establish_connection() are no"
"w deprecated. Please use :bind_dn\n"
"* Added update_attribute(name, value) to update one attribute and save immedia"
"tely\n"
"* #delete -> #destroy\n"
"* Base.destroy_all\n"
"* Base.delete(id) & Base.delete_all(filter)\n"
"* add Base.exists?(dnattr_val)\n"
"* attr_protected\n"
"* Base.update(dnattr_val, attributes_hash) - instantiate, update, save, return"
"\n"
"* Base.update_all(updates_hash, filter)\n"
"* attribute_present?(attribute) - if not empty/nil\n"
"* has_attribute?(attr_name)  - if in hash\n"
"* reload() (refetch from LDAP)\n"
"* make save() return false on fail\n"
"* make save!() raise EntryNotSaved exception\n"
"* to_xml()\n"
"* clear_active_connections!() -- Conn per class\n"
"** make @@active_connections and name them by\n"
"* base_class() (just return the ancestor)\n"
"* Separate ObjectClass changes to live in ActiveLDAP::ObjectClass\n"
"** add_objectclass\n"
"** remove_objectclass\n"
"** replace_objectclass\n"
"** disallow direct objectclass access?\n"
"* support ActiveRecord::Validations.\n"
"* support ActiveRecord::Callbacks.\n"
"* rename to ActiveLdap from ActiveLDAP to integrate RoR easily and enforce\n"
"  many API changes."
msgstr ""

#: ../../doc/text/news.textile:534
msgid "h2. 0.7.4"
msgstr ""

#: ../../doc/text/news.textile:536
msgid ""
"* Bugfix: do not base LDAP::PrettyError on RuntimeError due to rescue evaluati"
"on.\n"
"* Bugfix: :return_objects was overriding :objects in find and find_all\n"
"* Rollup exception code into smaller space reusing similar code."
msgstr ""

#: ../../doc/text/news.textile:540
msgid "h2. 0.7.3"
msgstr ""

#: ../../doc/text/news.textile:542
msgid ""
"* Made has_many and belongs_to use :return_objects value\n"
"* Force generation of LDAP constants on import - currently broken"
msgstr ""

#: ../../doc/text/news.textile:545
msgid "h2. 0.7.2"
msgstr ""

#: ../../doc/text/news.textile:547
msgid ""
"* Stopped overriding Conn.schema in ldap/schema - now use schema2\n"
"* Fix attributes being deleted when changing between objectclasses with shared"
" attributes\n"
"* Added schema attribute case insensitivity\n"
"* Added case insensitivity to the attribute methods.\n"
"* Added LDAP scope override support to ldap_mapping via :scope argument. (ldap"
"_mapping :scope => LDAP::LDAP_SCOPE_SUBTREE, ...)\n"
"* Fixed the bug where Klass.find() return nil (default arg for find/find_all n"
"ow '*')\n"
"* Added :return_objects to Base.connect()/configuration.rb -- When true, sets "
"the default behavior in Base.find/find_all to return objects instead of just t"
"he dnattr string.\n"
"* Hid away several exposed private class methods (do_bind, etc)\n"
"* Undefined dnattr for a class now raises a ConfigurationError\n"
"* Centralized all connection management code where possible\n"
"* Added Base.can_reconnect? which returns true if never connected or below the"
" :retries limit\n"
"* Added block support to Base.connection to ensure \"safe\" connection usage. Th"
"is is not just for internal library use. If you need to do something fancy wit"
"h the connection object, use Base.connection do |conn| ...\n"
"* Fixed object instantiation in Base#initialize when using full DNs\n"
"* Added :parent_class option to ldap_mapping which allows for object.parent() "
"to return an instantiated object using the parent DN. (ldap_mapping :parent_cl"
"ass => String, ...)\n"
"* Fixed reconnect bug in Base#initialize (didn't respect infinite retries)\n"
"* Added(*) :timeout argument to allow timeouts on hanging LDAP connections\n"
"* Added(*) :retry_on_timeout boolean option to allow disabling retries on time"
"outs\n"
"* Added TimeoutError\n"
"* Added(*) a forking timeout using SIGALRM to interrupt handling.\n"
"* (*) Only works when RUBY_PLATFORM has \"linux\" in it"
msgstr ""

#: ../../doc/text/news.textile:568
msgid "h2. 0.7.1"
msgstr ""

#: ../../doc/text/news.textile:570
msgid ""
"* Fix broken -W0 arg in activeldap.rb\n"
"* attribute_method=: '' and nil converted to ldap-pleasing [] values\n"
"* Added checks in write and search for connection down (to reconnect)\n"
"* Fixed broken idea of LDAP::err2string exceptions. Instead took errcodes from"
" ldap.c in Ruby/LDAP."
msgstr ""

#: ../../doc/text/news.textile:575
msgid "h2. 0.7.0"
msgstr ""

#: ../../doc/text/news.textile:577
msgid ""
"* ConnectionError thrown from #initialize when there is no connection and retr"
"y limit was exceeded\n"
"* ConnectionError thrown when retries exceeded when no connection was created\n"
"* Separated connection types: SSL, TLS, and plain using :method\n"
"* Localized reconnect logic into Base.reconnect(force=false)\n"
"* Fixed password_block evaluation bug in do_bind() which broke SIMPLE re-binds"
" and broke reconnect\n"
"* Add support for config[:sasl_quiet] in Base.connect\n"
"* (Delayed a case sensitivity patch for object classes and attributes due to w"
"eird errors)\n"
"* Add :retry_wait to Base.connect to determine the timeout before retrying a c"
"onnection\n"
"* Fixed ActiveLDAP::Base.create_object() - classes were enclosed in quotes\n"
"* Added :ldap_scope Base.connect() argument to allow risk-seeking users to cha"
"nge the LDAP scope to something other than ONELEVEL.\n"
"* Cleaned up Configuration.rb to supply all default values for ActiveLDAP::Bas"
"e.connect() and to use a constant instead of overriding class variables for no"
" good reason.\n"
"* Added scrubbing for :base argument into Base.connect() to make sure a ' does"
"n't get evaluated.\n"
"* Refactored Base.connect(). It is now much cleaner and easier to follow.\n"
"* Moved schema retrieval to after bind in case a server requires privileges to"
" access it.\n"
"* Reworked the bind process to be a little prettier. A lot of work to do here "
"still.\n"
"* Added LDAP::err2exception(errno) which is the groundwork of a coming overhau"
"l in user friendly error handling.\n"
"* Added support for Base::connect(.., :password => String, ...) to avoid stupi"
"d Proc.new {'foo'} crap\n"
"* Add :store_password option. When this is set, :password is not cleared and :"
"password_block is not re-evaluated on each rebind."
msgstr ""

#: ../../doc/text/news.textile:596
msgid "h2. 0.6.0"
msgstr ""

#: ../../doc/text/news.textile:598
msgid ""
"* Disallow blank DN attribute values on initialization\n"
"* Fix bug reported by Maik Schmidt regarding object creation\n"
"* Added error checking to disallow DN attribute value changes\n"
"* Added AttributeAssignmentError (for above)\n"
"* Import() and initialize() no longer call attribute_method=()\n"
"* Added error condition if connection fails inside initialize()\n"
"* Changes examples and tests to use \"dc=localdomain\"\n"
"* has_many() entries no longer return nil when empty"
msgstr ""

#: ../../doc/text/news.textile:607
msgid "h2. 0.5.9"
msgstr ""

#: ../../doc/text/news.textile:609
msgid ""
"* Change default base to dc=localdomain (as per Debian default).\n"
"* schema2.rb:attr() now returns [] instead of '' when empty.\n"
"* Lookup of new objects does not put dnattr()=value into the Base on lookup.\n"
"* Scope is now use ONELEVEL instead of SUBTREE as it broke object boundaries.\n"
"* Fixed @max_retries misuse.\n"
"* Added do_connect retries.\n"
"* Fixed find and find_all for the case - find_all('*').\n"
"* Fixed broken creation of objects from anonymous classes.\n"
"* Fixed broken use of ldap_mapping with anonymous classes."
msgstr ""

#: ../../doc/text/news.textile:619
msgid "h2. 0.5.8: Bugfix galore"
msgstr ""

#: ../../doc/text/news.textile:621
msgid ""
"* Allow nil \"prefix\"\n"
"* Fixed the dup bug with Anonymous patch.\n"
"* (maybe) Fixed stale connection problems by attempting reconn/bind.\n"
"* Hiding redefine warnings (for now)"
msgstr ""

#: ../../doc/text/news.textile:626
msgid "h2. 0.5.7"
msgstr ""

#: ../../doc/text/news.textile:628
msgid ""
"* Fixed the @data.default = [] bug that daniel@nightrunner.com pointed out\n"
"  (and partially patched)."
msgstr ""

#: ../../doc/text/news.textile:631
msgid "h2. 0.5.6"
msgstr ""

#: ../../doc/text/news.textile:633
msgid "* Added support for foreign_key => 'dn' in has_many."
msgstr ""

#: ../../doc/text/news.textile:635
msgid "h2. 0.5.5"
msgstr ""

#: ../../doc/text/news.textile:637
msgid ""
"* Remove @@logger.debug entries during build\n"
"* Building -debug and regular gems and tarballs"
msgstr ""

#: ../../doc/text/news.textile:640
msgid "h2. 0.5.4"
msgstr ""

#: ../../doc/text/news.textile:642
msgid ""
"* Added Base#import to streamline the Base.find and Base.find_all methods\n"
"** Speeds up find and find_all by not accessing LDAP multiple times\n"
"   for data we already have.\n"
"* Added tests/benchmark which is a slightly modified version of excellent\n"
"  benchmarking code contributed by\n"
"  Ollivier Robert <roberto -_-AT-_- keltia.freenix.fr>."
msgstr ""

#: ../../doc/text/news.textile:649
msgid "h2. 0.5.3"
msgstr ""

#: ../../doc/text/news.textile:651
msgid ""
"* Changed attribute_method to send in associations\n"
"** fixes belongs_to (with local_kay) and inheritance around that"
msgstr ""

#: ../../doc/text/news.textile:654
msgid "h2. 0.5.2"
msgstr ""

#: ../../doc/text/news.textile:656
msgid "* Make sure values are .dup'd when they come from LDAP"
msgstr ""

#: ../../doc/text/news.textile:658
msgid "h2. 0.5.1"
msgstr ""

#: ../../doc/text/news.textile:660
msgid ""
"* Changed Schema2#class_attributes to return @{:must => [], :may => []}@\n"
"* Fixed Base#must and Base#may to return with full SUPerclass requirements"
msgstr ""

#: ../../doc/text/news.textile:663
msgid "h2. 0.5.0"
msgstr ""

#: ../../doc/text/news.textile:665
msgid ""
"* API CHANGE (as with all 0.x.0 changes) (towards ActiveRecord duck typing)\n"
"** Base#ldapattribute now always returns an array\n"
"** Base#ldapattribute(true) now returns a dup of an array, string, etc \n"
"   when appropriate (old default) - This is just for convenience\n"
"** Base#ldapattribute returns the stored value, not just a .dup\n"
"** Associations methods return objects by default instead of just names.\n"
"   Group.new('foo').members(false) will return names only.\n"
"** Base.connect returns true as one might expect\n"
"* Value validation and changing (binary, etc) occur prior to write, and\n"
"  not immediately on attribute_method=(value).\n"
"* Attribute method validity is now determined /on-the-fly/.\n"
"* Default log level set to OFF speeds up 'speedtest' by 3 seconds! \n"
"  (counters last point which added some slowness :)\n"
"* Added Schema2#class_attributes which caches and fully supertype expands\n"
"  attribute lists.\n"
"* Integrated Schema2#class_attributes with apply_objectclass which automagical"
"ly\n"
"  does SUP traversal and automagically updates available methods on calls to\n"
"  #attributes, #method_missing, #validate, and #write\n"
"* Added 'attributes' to 'methods' allowing for irb autocompletion and other\n"
"  normal rubyisms\n"
"* Moved almost all validation to Base#validate to avoid unexpected exceptions\n"
"  being raised in seemingly unrelated method calls. This means that invalid \n"
"  objectClasses may be specified. This will only be caught on #write or \n"
"  a pre-emptive #validate. This goes for all attribute errors though.\n"
"  This also makes it possible to \"break\" objects by removing the 'top'\n"
"  objectclass and therefore the #objectClass method..."
msgstr ""

#: ../../doc/text/news.textile:692
msgid "h2. 0.4.4"
msgstr ""

#: ../../doc/text/news.textile:694
msgid ""
"* Fixed binary subtype forcing:\n"
"** was setting data as subtype ;binary even when not required\n"
"* Added first set of unit tests.\n"
"** These will be cleaned up in later releases as more tests are added.\n"
"* Fixed subtype clobber non-subtype (unittest!)\n"
"** cn and cn;lang-blah: the last loaded won\n"
"* Fixed multivalued subtypes from being shoved into a string (unittest!)\n"
"** an error with attribute_input_value"
msgstr ""

#: ../../doc/text/news.textile:703
msgid "h2. 0.4.3"
msgstr ""

#: ../../doc/text/news.textile:705
msgid ""
"* Fixed write (add) bugs introduced with last change\n"
"** only bug fixes until unittests are in place"
msgstr ""

#: ../../doc/text/news.textile:708
msgid "h2. 0.4.2"
msgstr ""

#: ../../doc/text/news.textile:710
msgid ""
"* Added ruby-activeldap.gemspec\n"
"* Integrated building a gem of 'ruby-activeldap' into Makefile.package\n"
"* Added attr parsing cache to speed up repetitive calls: approx 13x speedup\n"
"** 100 usermod-binary-add calls"
msgstr ""

#: ../../doc/text/news.textile:715
msgid ""
"   <pre>\n"
"   !!!plain\n"
"   Without attr parsing cache:\n"
"     real    13m53.129s\n"
"     user    13m11.350s\n"
"     sys     0m7.030s\n"
"   With attr parsing cache:\n"
"     real    1m0.416s\n"
"     user    0m28.390s\n"
"     sys     0m2.380s\n"
"   </pre>"
msgstr ""

#: ../../doc/text/news.textile:727
msgid "h2. 0.4.1:"
msgstr ""

#: ../../doc/text/news.textile:729
msgid ""
"* Schema2 was not correctly parsing objectClass entries.\n"
"** This is fixed for now but must be revisited."
msgstr ""

#: ../../doc/text/news.textile:732
msgid "h2. 0.4.0"
msgstr ""

#: ../../doc/text/news.textile:734
msgid ""
"* Added #<attribute>(arrays) argument which when true\n"
"  always returns arrays. e.g."
msgstr ""

#: ../../doc/text/news.textile:737
msgid ""
"  <pre>\n"
"  !!!plain\n"
"  irb> user.cn(true)\n"
"  => ['My Common Name']\n"
"  </pre>"
msgstr ""

#: ../../doc/text/news.textile:743
msgid ""
"  This makes things easier for larger programming tasks.\n"
"* Added subtype support:\n"
"** Uses Hash objects to specify the subtype\n"
"   e.g. @user.userCertificate = {'binary' => File.read('mycert.der')}@\n"
"** Added recursive type enforcement along with the subtype handling\n"
"** This required overhauling the #write method.\n"
"*** Please report any problems ASAP! :^)\n"
"* Added automagic binary support\n"
"** subtype wrapping done automatically\n"
"** relies on X-NOT-HUMAN-READABLE flag\n"
"* Added LDAP::Schema2 which is an extension of Ruby/LDAP::Schema\n"
"** made Schema#attr generic for easy type dereferencing\n"
"* Updated rdoc in activeldap.rb\n"
"* Updated examples (poorly) to reflect new functionality\n"
"* Added several private helper functions"
msgstr ""

#: ../../doc/text/news.textile:759
msgid "h2. 0.3.6"
msgstr ""

#: ../../doc/text/news.textile:761
msgid ""
"* Fixed dn attribute value extraction on find and find_all\n"
"** these may have grabbed the wrong value if a DN attr has\n"
"   multiple values.\n"
"* Fixed Base.search to return all values as arrays and update\n"
"  multivalued ones correctly\n"
"* Lowered the amount of default logging to FATAL only"
msgstr ""

#: ../../doc/text/news.textile:768
msgid "h2. 0.3.5"
msgstr ""

#: ../../doc/text/news.textile:770
msgid "* Moved to rubyforge.org!"
msgstr ""

#: ../../doc/text/news.textile:772
msgid "h2. 0.3.4"
msgstr ""

#: ../../doc/text/news.textile:774
msgid "* Changed license to Ruby's"
msgstr ""

#: ../../doc/text/news.textile:776
msgid "h2. 0.3.3"
msgstr ""

#: ../../doc/text/news.textile:778
msgid ""
"* Changed Base.search to return an array instead of a hash of hashes\n"
"* Change Base.search to take in a hash as its arguments"
msgstr ""

#: ../../doc/text/news.textile:781
msgid "h2. 0.3.2"
msgstr ""

#: ../../doc/text/news.textile:783
msgid "* Bug fix - fixed support for module'd extension classes (again!)"
msgstr ""

#: ../../doc/text/news.textile:785
msgid "h2. 0.3.1"
msgstr ""

#: ../../doc/text/news.textile:787
msgid ""
"* Updated the documentation\n"
"* Fixed ignoring of attrs argument in Base.search\n"
"* Fixed mistake in groupls (using dnattr directly)\n"
"* Fixed a mistake with overzealous dup'ing"
msgstr ""

#: ../../doc/text/news.textile:792
msgid "h2. 0.3.0"
msgstr ""

#: ../../doc/text/news.textile:794
msgid ""
"* MORE API CHANGES (configuration.rb, etc)\n"
"* Major overhaul to the internals!\n"
"** removed @@BLAH[@klass] in lieu of defining\n"
"   class methods which contain the required values. This\n"
"   allows for clean inheritance of Base subclasses! Whew!\n"
"** Added @@config to store the options currently in use\n"
"   after a Base.connect\n"
"** Now cache passwords for doing reconnects\n"
"** dnattr now accessible to the outside as a class method only\n"
"* Added Base.search to wrap normal LDAP search for convenience.\n"
"** This returns a hash of hashes with the results indexed first by\n"
"   full dn, then by attribute."
msgstr ""

#: ../../doc/text/news.textile:807
msgid "h2. 0.2.0"
msgstr ""

#: ../../doc/text/news.textile:809
msgid ""
"* API CHANGES:\n"
"** Extension classes must be defined using map_to_ldap instead of setting\n"
"   random values in initialize\n"
"** Base#find is now Base.find_all and is a class method\n"
"** Base.find returns the first match a la Array#find\n"
"** force_reload is gone in belongs_to and has_many created methods\n"
"** hiding Base.new, Base.find, and Base.find_all from direct access\n"
"* added uniq to setting objectClass to avoid stupid errors\n"
"* fixed new object creation bug where attributes were added before the\n"
"  objectclass resulting in a violation (Base#write)\n"
"* fixed attribute dereferencing in Base#write\n"
"* fixed bug with .dup on Fixnums\n"
"* methods created by has_many/belongs_to  and find and find_all now take an\n"
"  optional argument dnattr_only which will return the value of dnattr for\n"
"  each result instead of a full object.\n"
"* Base.connection=(conn) added for multiplexing connections\n"
"* Added a manual to activeldap.rb which covers most usage of Ruby/ActiveLDAP\n"
"* Base.connect(:try_sasl => true) should now work with GSSAPI if you are\n"
"  using OpenLDAP >= 2.1.29"
msgstr ""

#: ../../doc/text/news.textile:829
msgid "h2. 0.1.8"
msgstr ""

#: ../../doc/text/news.textile:831
msgid ""
"* .dup all returned attribute values to avoid weirdness\n"
"* .dup all assigned values to avoid weirdness\n"
"* Changed default configuration.rb to use example.com"
msgstr ""

#: ../../doc/text/news.textile:835
msgid "h2. 0.1.7"
msgstr ""

#: ../../doc/text/news.textile:837
msgid ""
"* Added support for non-unique DN attributes\n"
"* Added authoritative DN retrieval with 'object.dn'"
msgstr ""

#: ../../doc/text/news.textile:840
msgid "h2. 0.1.6"
msgstr ""

#: ../../doc/text/news.textile:842
msgid ""
"* Added Base.close method for clearing the existing connection (despite Ruby/L"
"DAP's lack of .close)"
msgstr ""

#: ../../doc/text/news.textile:844
msgid "h2. 0.1.5"
msgstr ""

#: ../../doc/text/news.textile:846
msgid "* Fixed incorrect usage of @klass in .find (should .find be a class method?)"
msgstr ""

#: ../../doc/text/news.textile:848
msgid "h2. 0.1.4"
msgstr ""

#: ../../doc/text/news.textile:850
msgid "* Change WARN to INFO in associations.rb for has_many"
msgstr ""

#: ../../doc/text/news.textile:852
msgid "h2. 0.1.3"
msgstr ""

#: ../../doc/text/news.textile:854
msgid ""
"* Fixed class name mangling\n"
"* Added support for classes to take DNs as the initialization value"
msgstr ""

#: ../../doc/text/news.textile:857
msgid "h2. 0.1.2"
msgstr ""

#: ../../doc/text/news.textile:859
msgid ""
"* Patch from Dick Davies: Try SSL before TLS\n"
"* Log4r support\n"
"* Better packaging (automated)\n"
"* Work-around for SSL stupidity\n"
"** SSLConn doesn't check if the port it connected to is really using SSL!"
msgstr ""

#: ../../doc/text/news.textile:865
msgid "h2. 0.1.1"
msgstr ""

#: ../../doc/text/news.textile:867
msgid ""
"* Dynamic table class creation\n"
"* SASL/GSSAPI disabled by default - doesn't work consistently"
msgstr ""

#: ../../doc/text/news.textile:870
msgid "h2. 0.1.0"
msgstr ""

#: ../../doc/text/news.textile:872
msgid ""
"* Added foreign_key to has_many\n"
"* Added local_key to belongs_to\n"
"* Added primary_members to Group example\n"
"* Added \"nil\" filtering to has_many\n"
"* Packaged up with setup.rb\n"
"* Added RDocs and better comments"
msgstr ""

#: ../../doc/text/news.textile:879
msgid "h2. 0.0.9"
msgstr ""

#: ../../doc/text/news.textile:881
msgid ""
"* Separated extension classes from ActiveLDAP module\n"
"* Cleaned up examples with new requires"
msgstr ""

#: ../../doc/text/news.textile:884
msgid "h2. 0.0.8"
msgstr ""

#: ../../doc/text/news.textile:886
msgid ""
"* Added user and group scripting examples\n"
"** usermod, userls, useradd, userdel\n"
"** groupmod, groupls"
msgstr ""

#: ../../doc/text/news.textile:890
msgid "h2. 0.0.7"
msgstr ""

#: ../../doc/text/news.textile:892
msgid ""
"* Cleaner authentication loop:\n"
"** SASL (GSSAPI only), simple, anonymous\n"
"* Added allow_anonymous option added (default: false)"
msgstr ""

#: ../../doc/text/news.textile:896
msgid "h2. 0.0.6"
msgstr ""

#: ../../doc/text/news.textile:898
msgid ""
"* Write support cleaned up\n"
"* Exception classes added"
msgstr ""

#: ../../doc/text/news.textile:901
msgid "h2. 0.0.5"
msgstr ""

#: ../../doc/text/news.textile:903
msgid "* LDAP write support added"
msgstr ""

#: ../../doc/text/news.textile:905
msgid "h2. 0.0.4"
msgstr ""

#: ../../doc/text/news.textile:907
msgid "* MUST and MAY data validation against schema using objectClasses"
msgstr ""

#: ../../doc/text/news.textile:909
msgid "h2. 0.0.3"
msgstr ""

#: ../../doc/text/news.textile:911
msgid "* LDAP attributes alias resolution and data mapping"
msgstr ""

#: ../../doc/text/news.textile:913
msgid "h2. 0.0.2"
msgstr ""

#: ../../doc/text/news.textile:915
msgid "* Associations: has_many and belongs_to Class methods added for Base"
msgstr ""

#: ../../doc/text/news.textile:917
msgid "h2. 0.0.1"
msgstr ""

#: ../../doc/text/news.textile:919
msgid "* Extension approach in place with example User and Group classes"
msgstr ""

#: ../../doc/text/news.textile:921
msgid "h2. 0.0.0"
msgstr ""

#: ../../doc/text/news.textile:923
msgid "* Basic LDAP read support in place with hard-coded OUs"
msgstr ""

#: ../../doc/text/rails.textile:1
msgid "h1. Rails"
msgstr ""

#: ../../doc/text/rails.textile:3
msgid "ActiveLdap supports Rails 3.1."
msgstr "ActiveLdapはRails 3.1に対応しています。"

#: ../../doc/text/rails.textile:5
#, fuzzy
msgid "h2. Install"
msgstr "インストール"

#: ../../doc/text/rails.textile:7
msgid "To install, simply add the following code to your Gemfile:"
msgstr "Gemfileに以下のようなコードを追加するとインストールできます:"

#: ../../doc/text/rails.textile:9
msgid ""
"<pre>\n"
"gem 'activeldap', :require => 'active_ldap/railtie'\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:13
#, fuzzy
msgid ""
"You should also depend on an LDAP adapter such as Net::LDAP\n"
"or Ruby/LDAP. The following example uses Ruby/LDAP:"
msgstr ""
"Net::<placeholder-2/>またはRuby/<placeholder-3/>など<placeholder-1/>アダプタもインストールしなけれ"
"ばいけません。以下の例ではRuby/<placeholder-4/>を使っています:"

#: ../../doc/text/rails.textile:16
msgid ""
"<pre>\n"
"gem 'ruby-ldap'\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:20
#, fuzzy
msgid ""
"Bundler will install the gems automatically when you run\n"
"'bundle install'."
msgstr "‘bundle install’を実行するとBundlerが自動的にgemをインストールします。"

#: ../../doc/text/rails.textile:23
msgid "h2. Configuration"
msgstr ""

#: ../../doc/text/rails.textile:25
#, fuzzy
msgid ""
"You can use a LDAP configuration per environment. They are in\n"
"a file named 'ldap.yml' in the config directory of your\n"
"rails app. This file has a similar function to the\n"
"'database.yml' file that allows you to set your database\n"
"connection configurations per environment. Similarly, the\n"
"ldap.yml file allows configurations to be set for\n"
"development, test, and production environments."
msgstr ""
"環境毎に異なる<placeholder-1/>の設定を利用できます。設定はRailsアプリケーションの設定ディレクトリ内の‘ldap.yml’というファイル"
"に保存します。このファイルは環境毎のデータベース接続設定を保存する‘database.yml’ファイルと似た役割です。database.ymlと同様にlda"
"p.ymlファイルにはdevelopment, test, production環境用の設定を保存します。"

#: ../../doc/text/rails.textile:33
#, fuzzy
msgid "You can generate 'config/ldap.yml' by the follwoing command:"
msgstr "以下のコマンドで‘config/ldap.yml’を生成できます:"

#: ../../doc/text/rails.textile:35
msgid ""
"<pre class=\"command\">\n"
"% script/rails generate active_ldap:scaffold\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:39
#, fuzzy
msgid ""
"You need to modify 'config/ldap.yml' generated by\n"
"active_ldap:scaffold. For instance, the development entry\n"
"would look something like the following:"
msgstr ""
"active_ldap:scaffoldで生成された‘config/ldap.yml’を編集する必要があります。例えば、development環境の設定は以"
"下のようになるでしょう:"

#: ../../doc/text/rails.textile:43
msgid ""
"<pre>\n"
"!!!plain\n"
"development:\n"
"  host: 127.0.0.1\n"
"  port: 389\n"
"  base: dc=localhost\n"
"  bind_dn: cn=admin,dc=localhost\n"
"  password: secret\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:53
#, fuzzy
msgid ""
"When your application starts up,\n"
"ActiveLdap::Base.setup_connection will be called with the\n"
"parameters specified for your current environment."
msgstr "アプリケーション起動時、現在の環境のパラメータを使ってActiveLdap::Base.setup_connectionが自動的に実行されます。"

#: ../../doc/text/rails.textile:57
msgid "h2. Model"
msgstr ""

#: ../../doc/text/rails.textile:59
#, fuzzy
msgid ""
"You can generate a User model that represents entries under\n"
"ou=Users by the following command:"
msgstr "ou=Users以下のエントリを表現するUserモデルを以下のコマンドで生成できます:"

#: ../../doc/text/rails.textile:62
msgid ""
"<pre class=\"command\">\n"
"% script/rails generate model User --dn-attribute uid --classes person PosixAc"
"count\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:66
msgid "It generates the following app/model/user.rb:"
msgstr "以下のようなapp/model/user.rbが生成されます:"

#: ../../doc/text/rails.textile:68
msgid ""
"<pre>\n"
"class User < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => \"uid\",\n"
"               :prefix => \"ou=Users\",\n"
"               :classes => [\"person\", \"PosixAccount\"]\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:76
msgid "You can add relationships by modifying app/model/user.rb:"
msgstr "app/model/user.rbを編集して関係設定を追加できます:"

#: ../../doc/text/rails.textile:78
msgid ""
"<pre>\n"
"class User < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => 'uid',\n"
"               :prefix => \"ou=Users\",\n"
"               :classes => ['person', 'posixAccount']\n"
"  belongs_to :primary_group,\n"
"             :class_name => \"Group\",\n"
"             :foreign_key => \"gidNumber\",\n"
"             :primary_key => \"gidNumber\"\n"
"  belongs_to :groups,\n"
"             :many => 'memberUid'\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:92
msgid "You can also generate a Group model by the following command:"
msgstr "以下のコマンドでGroupモデルも生成できます:"

#: ../../doc/text/rails.textile:94
msgid ""
"<pre class=\"command\">\n"
"% script/rails generate model Group --classes PosixGroup\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:98
msgid "app/model/group.rb:"
msgstr ""

#: ../../doc/text/rails.textile:100
msgid ""
"<pre>\n"
"class Group < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => \"cn\",\n"
"               :prefix => \"ou=Groups\",\n"
"               :classes => [\"PosixGroup\"]\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:108
msgid "You can add relationships by modifying app/model/group.rb:"
msgstr "app/model/group.rbを編集して関連設定を追加できます:"

#: ../../doc/text/rails.textile:110
msgid ""
"<pre>\n"
"class Group < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => \"cn\",\n"
"               :prefix => \"ou=Groups\",\n"
"               :classes => [\"PosixGroup\"]\n"
"  has_many :members,\n"
"           :class_name => \"User\",\n"
"           :wrap => \"memberUid\"\n"
"  has_many :primary_members,\n"
"           :class_name => \"Group\",\n"
"           :foreign_key => \"gidNumber\",\n"
"           :primary_key => \"gidNumber\"\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:125
msgid "You can also generate a Ou model by the following command:"
msgstr "以下のコマンドでOuモデルも生成できます:"

#: ../../doc/text/rails.textile:127
msgid ""
"<pre class=\"command\">\n"
"% script/rails generate model Ou --prefix '' --classes organizationalUnit\n"
"</pre>"
msgstr ""

#: ../../doc/text/rails.textile:131
msgid ""
"<pre>\n"
"class Ou < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => \"cn\",\n"
"               :prefix => \"\",\n"
"               :classes => [\"organizationalUnit\"]\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:1
#, fuzzy
msgid "h1. Tutorial"
msgstr "チュートリアル"

#: ../../doc/text/tutorial.textile:3
#, fuzzy
msgid "h2. Introduction"
msgstr "はじめに"

#: ../../doc/text/tutorial.textile:5
#, fuzzy
msgid ""
"ActiveLdap is a novel way of interacting with LDAP.  Most interaction with\n"
"LDAP is done using clunky LDIFs, web interfaces, or with painful APIs that\n"
"required a thick reference manual nearby. ActiveLdap aims to fix that.\n"
"Inspired by \"ActiveRecord\":http://activerecord.rubyonrails.org, ActiveLdap pro"
"vides an\n"
"object oriented interface to LDAP entries."
msgstr ""
"ActiveLdap は <placeholder-1/> を操作する今までにない方法です。大半の<placeholder-2/>操作は難しいLDIFを扱う"
"か、ウェブインターフェースを利用するか、説明の省かれたリファレンスマニュアルを参照しながら、難解なAPIを利用しなければなりませんでした。\n"
"\n"
"ActiveLdap はこの解決を目指します。<placeholder-3/> によって着想した ActiveLdap は、<placeholder-4/>"
" エントリに対するオブジェクト指向のインターフェースを提供します。"

#: ../../doc/text/tutorial.textile:11
#, fuzzy
msgid ""
"The target audience is system administrators and LDAP users everywhere that\n"
"need quick, clean access to LDAP in Ruby."
msgstr "対象読者はシステム管理者やLDAPユーザであって、手軽かつきれいなLDAPアクセスの方法を求めるすべての人です。"

#: ../../doc/text/tutorial.textile:14
msgid "h3. What's LDAP?"
msgstr ""

#: ../../doc/text/tutorial.textile:16
#, fuzzy
msgid ""
"LDAP stands for \"Lightweight Directory Access Protocol.\" Basically this means\n"
"that it is the protocol used for accessing LDAP servers.  LDAP servers\n"
"lightweight directories.  An LDAP server can contain anything from a simple\n"
"digital phonebook to user accounts for computer systems.  More and more\n"
"frequently, it is being used for the latter.  My examples in this text will\n"
"assume some familiarity with using LDAP as a centralized authentication and\n"
"authorization server for Unix systems. (Unfortunately, I've yet to try this\n"
"against Microsoft's ActiveDirectory, despite what the name implies.)"
msgstr ""
"<placeholder-1/> は”軽量ディレクトリアクセスプロトコル”のことです。これは基本的に<placeholder-2/>サーバと対話するためのプ"
"ロトコルを意味します。<placeholder-3/>サーバは軽量のディレクトリサーバです。<placeholder-4/>サーバはシンプルな電話帳からコン"
"ピュータ上のユーザアカウントのリストまで、幅広い情報を格納することができますが、大抵の場合後者のために使われます。\n"
"\n"
"このテキストでの各例は、読者が <placeholder-5/> サーバを Unix 系システムのための中央認証・認可サーバとして利用することを熟知している"
"ものと仮定して記載しています。（残念なことに、私はまだMicrsoft ActiveDirectoryに対して ActiveLdap を試していません。名前"
"に \"Directory\" が含まれていはいるのですが。）"

#: ../../doc/text/tutorial.textile:25
msgid ""
"Further reading:\n"
"* \"RFC1777\":http://www.faqs.org/rfcs/rfc1777.html - Lightweight Directory Acce"
"ss Protocol\n"
"* \"OpenLDAP\":http://www.openldap.org"
msgstr ""

#: ../../doc/text/tutorial.textile:29
#, fuzzy
msgid "h3. So why use ActiveLdap?"
msgstr "では何故 ActiveLdap なのか？"

#: ../../doc/text/tutorial.textile:31
#, fuzzy
msgid ""
"Using LDAP directly (even with the excellent Ruby/LDAP), leaves you bound to\n"
"the world of the predefined LDAP API.  While this API is important for many\n"
"reasons, having to extract code out of LDAP search blocks and create huge\n"
"arrays of LDAP.mod entries make code harder to read, less intuitive, and just\n"
"less fun to write.  Hopefully, ActiveLdap will remedy all of these\n"
"problems!"
msgstr ""
"<placeholder-2/>を直接扱うさいには（たとえ素晴らしい Ruby/<placeholder-2/> ライブラリを用いても）、既存の <plac"
"eholder-3/> <placeholder-4/> に拘束されることになります。この<placeholder-5/>は巨大な配列を生成し、コードを読み"
"づらく、また楽しくないものにしてしまいます。もしあなたがあなたのコードに<placeholder-6/>を統合するためのきれいな方法を欲するなら、Activ"
"eLdap を使う理由になるでしょう。"

#: ../../doc/text/tutorial.textile:38
#, fuzzy
msgid "h2. Getting Started"
msgstr "利用準備"

#: ../../doc/text/tutorial.textile:40
#, fuzzy
msgid "h3. Requirements"
msgstr "動作条件"

#: ../../doc/text/tutorial.textile:42
msgid ""
"* A Ruby implementation: \"Ruby\":http://www.ruby-lang.org 1.8.x, 1.9.1 or \"JRub"
"y\":http://jruby.codehaus.org/\n"
"* A LDAP library: \"Ruby/LDAP\":http://code.google.com/p/ruby-activeldap/wiki/Ru"
"byLDAP (for Ruby), \"Net::LDAP\":http://rubyforge.org/projects/net-ldap/ (for Ru"
"by or JRuby) or JNDI (for JRuby)\n"
"* A LDAP server: \"OpenLDAP\":http://www.openldap.org, etc\n"
"** Your LDAP server must allow root_dse queries to allow for schema queries"
msgstr ""

#: ../../doc/text/tutorial.textile:47
#, fuzzy
msgid "h3. Installation"
msgstr "インストール"

#: ../../doc/text/tutorial.textile:49
msgid "Assuming all the requirements are installed, you can install by gem."
msgstr "インストールは gem で行えます。"

#: ../../doc/text/tutorial.textile:51
msgid ""
"<pre>\n"
"!!!plain\n"
"# gem install activeldap\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:56
msgid "Now as a quick test, you can run:"
msgstr "インストールされたか確認するには、irb を利用できます。以下のように require して、true が返ってくればインストール成功です。"

#: ../../doc/text/tutorial.textile:58
msgid ""
"<pre>\n"
"$ irb -rubygems\n"
"irb> require 'active_ldap'\n"
"=> true\n"
"irb> exit\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:65
#, fuzzy
msgid ""
"If the require returns false or an exception is raised, there has been a\n"
"problem with the installation.  You may need to customize what setup.rb does o"
"n\n"
"install."
msgstr "もし require が false を返したり例外を発生させたら、インストールに失敗しています。動作条件を満たしているかなどを確認してみてください。"

#: ../../doc/text/tutorial.textile:69
#, fuzzy
msgid "h2. Usage"
msgstr "利用方法"

#: ../../doc/text/tutorial.textile:71
#, fuzzy
msgid ""
"This section covers using ActiveLdap from writing extension classes to\n"
"writing applications that use them."
msgstr "この章では ActiveLdap 拡張クラスをコーディングし、アプリケーションを記述し、それらを利用するまでを記載します。"

#: ../../doc/text/tutorial.textile:74
#, fuzzy
msgid "Just to give a taste of what's to come, here is a quick example using irb:"
msgstr "何を得られるかざっくりつかむために、irb を利用して簡単な例を紹介しましょう。まずActiveLdap を require します。"

#: ../../doc/text/tutorial.textile:76
msgid ""
"<pre>\n"
"irb> require 'active_ldap'\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:80
#, fuzzy
msgid ""
"Call setup_connection method  for connect to LDAP server. In this case, LDAP s"
"erver\n"
"is localhost, and base of LDAP tree is \"dc=dataspill,dc=org\"."
msgstr ""
"<placeholder-1/> サーバとの接続を確立します。ここでは最も基本的なメソッドであるsetup_connection を利用します。サンプルとし"
"て、接続先は localhost、base を \"dc=dataspill,dc=org\" とします。"

#: ../../doc/text/tutorial.textile:83
msgid ""
"<pre>\n"
"irb> ActiveLdap::Base.setup_connection :host => 'localhost', :base => 'dc=data"
"spill,dc=org'\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:87
#, fuzzy
msgid "Here's an extension class that maps to the LDAP Group objects:"
msgstr ""
"次に、ActiveLdap::Base のサブクラスを作成します。これを拡張クラスと呼びます。この拡張クラスを、 base 以下に存在する <placeho"
"lder-1/> の Group オブジェクト群とマッピングしてみましょう。"

#: ../../doc/text/tutorial.textile:89
msgid ""
"<pre>\n"
"irb> class Group < ActiveLdap::Base\n"
"irb*   ldap_mapping\n"
"irb* end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:95
#, fuzzy
msgid ""
"In the above code, Group class handles sub tree of ou=Groups\n"
"tha is :base value specified by setup_connection. A instance\n"
"of Group class represents a LDAP object under ou=Gruops."
msgstr ""
"簡単に説明しましょう。上記のコードでは Group クラスが setup_connection でした:base 以下の ou=Groups 以下のオブジェ"
"クト群全体を取り扱うようになります。Groupクラスのインスタンスは、ou=Groups 以下にある個々の <placeholder-1/> オブジェクトを"
"表現します。"

#: ../../doc/text/tutorial.textile:99
msgid "Here is the Group class in use:"
msgstr "これで、グループクラスは以下のように利用できます"

#: ../../doc/text/tutorial.textile:101
msgid ""
"<pre>\n"
"# Get all group names\n"
"irb> all_groups = Group.find(:all, '*').collect {|group| group.cn}\n"
"=> [\"root\", \"daemon\", \"bin\", \"sys\", \"adm\", \"tty\", ..., \"develop\"]"
msgstr ""

#: ../../doc/text/tutorial.textile:106
msgid ""
"# Get LDAP objects in develop group\n"
"irb> group = Group.find(\"develop\")\n"
"=> #<Group objectClass:<...> ...>"
msgstr ""

#: ../../doc/text/tutorial.textile:110
msgid ""
"# Get cn of the develop group\n"
"irb> group.cn\n"
"=> \"develop\""
msgstr ""

#: ../../doc/text/tutorial.textile:114
msgid ""
"# Get gid_number of the develop group\n"
"irb> group.gid_number\n"
"=> \"1003\"\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:119
#, fuzzy
msgid "That's it! No let's get back in to it."
msgstr "ほら！ もう元には戻れないでしょう？"

#: ../../doc/text/tutorial.textile:121
#, fuzzy
msgid "h3. Extension Classes"
msgstr "ActiveLdap 拡張クラス"

#: ../../doc/text/tutorial.textile:123
#, fuzzy
msgid ""
"Extension classes are classes that are subclassed from ActiveLdap::Base.  They"
"\n"
"are used to represent objects in your LDAP server abstractly."
msgstr ""
"ActiveLdap 拡張クラスは ActiveLdap::Base のサブクラスです。これらは <placeholder-1/> サーバ内のオブジェクトを"
"抽象的に表現するために使われます。"

#: ../../doc/text/tutorial.textile:126
#, fuzzy
msgid "h4. Why do I need them?"
msgstr "どうしてこれが必要なのか？"

#: ../../doc/text/tutorial.textile:128
#, fuzzy
msgid ""
"Extension classes are what make ActiveLdap \"active\"! They do all the\n"
"background work to make easy-to-use objects by mapping the LDAP object's\n"
"attributes on to a Ruby class."
msgstr ""
"拡張クラスは <placeholder-1/> オブジェクト群の属性情報を Ruby クラスに自動的にマッピングすることで、オブジェクトの取り扱いを容易かつ"
"便利にします。"

#: ../../doc/text/tutorial.textile:133
#, fuzzy
msgid "h4. Special Methods"
msgstr "拡張クラス定義用メソッド"

#: ../../doc/text/tutorial.textile:135
#, fuzzy
msgid ""
"I will briefly talk about each of the methods you can use when defining an\n"
"extension class.  In the above example, I only made one special method call\n"
"inside the Group class. More than likely, you will want to more than that."
msgstr ""
"LDAP オブジェクトが正しく Ruby オブジェクトにマッピングされるために、ActiveLdapのクラスメソッドを利用してマッピングのための情報を定義し"
"ます。上記の例ではそれらのうち、Group クラスを定義する中で ldap_mapping だけを利用していました。必要に応じて更に多くのメソッドを利用する"
"ことができます。"

#: ../../doc/text/tutorial.textile:139
msgid "h5. ldap_mapping"
msgstr ""

#: ../../doc/text/tutorial.textile:141
#, fuzzy
msgid ""
"ldap_mapping is the only required method to setup an extension class for use\n"
"with ActiveLdap. It must be called inside of a subclass as shown above."
msgstr "ldap_mapping は ActiveLdap とともに拡張クラスを利用するにあたって必須とされる唯一のメソッドです。"

#: ../../doc/text/tutorial.textile:144
msgid "Below is a much more realistic Group class:"
msgstr "以下は ldap_mapping を更に詳細に記述した Group クラスです"

#: ../../doc/text/tutorial.textile:146
msgid ""
"<pre>\n"
"class Group < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => 'cn',\n"
"               :prefix => 'ou=Groups', :classes => ['top', 'posixGroup'],\n"
"               :scope => :one\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:154
#, fuzzy
msgid ""
"As you can see, this method is used for defining how this class maps in to LDA"
"P.  Let's say that\n"
"my LDAP tree looks something like this:"
msgstr ""
"Group クラスをどのようにして <placeholder-1/> とマッピングとするかを定義するために、ldap_mapping メソッドが使われている"
"ことが見てとれるでしょう。\n"
"\n"
"私たちが扱う <placeholder-1/> ツリーが以下のようなものであるとします。"

#: ../../doc/text/tutorial.textile:157
msgid ""
"<pre>\n"
"!!!plain\n"
"* dc=dataspill,dc=org\n"
"|- ou=People,dc=dataspill,dc=org\n"
"|+ ou=Groups,dc=dataspill,dc=org\n"
"  \\\n"
"   |- cn=develop,ou=Groups,dc=dataspill,dc=org\n"
"   |- cn=root,ou=Groups,dc=dataspill,dc=org\n"
"   |- ...\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:168
#, fuzzy
msgid ""
"Under ou=People I store user objects, and under ou=Groups, I store group\n"
"objects.  What |ldap_mapping| has done is mapped the class in to the LDAP tree"
"\n"
"abstractly. With the given :dn_attributes and :prefix, it will only work for\n"
"entries under ou=Groups,dc=dataspill,dc=org using the primary attribute 'cn'\n"
"as the beginning of the distinguished name."
msgstr ""
"ou=People 以下にはユーザオブジェクトを格納し、ou=Groups 以下にはグループオブジェクトを格納するものとします。\n"
"\n"
"ldap_mapping は <placeholder-1/> ツリーを抽象化して拡張クラスにマッピングします。以下では、先の Group クラスの例をとっ"
"て説明します。\n"
"\n"
":prefix によって、このクラスはou=Groups,dc=dataspill,dc=org 以下のみを扱うようになっています。\n"
"\n"
":dn_attributeにより 'cn' がこのクラスにとってのプライマリ属性となります。つまり、Group クラスが取り扱う LDAPオブジェクト(ou"
"=Groups,dc=dataspill,dc=org 以下のLDAPオブジェクト)について、DN はcn から始まるものとして扱われます。"

#: ../../doc/text/tutorial.textile:174
#, fuzzy
msgid "Just for clarity, here's how the arguments map out:"
msgstr "より理解をはっきりさせるために、図にしてみましょう。各引数は図のようにマッピングされます。"

#: ../../doc/text/tutorial.textile:176
msgid ""
"<pre>\n"
"!!!plain\n"
" cn=develop,ou=Groups,dc=dataspill,dc=org\n"
" ^^         ^^^^^^^^^ ^^^^^^^^^^^^^^^^^^^\n"
":dn_attribute |         |\n"
"            :prefix     |\n"
"              :base from setup_connection\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:185
#, fuzzy
msgid ""
":scope tells ActiveLdap to only search under ou=Groups, and not to look deeper"
"\n"
"for dn_attribute matches.\n"
"(e.g. cn=develop,ou=DevGroups,ou=Groups,dc=dataspill,dc=org)\n"
"You can choose value from between :sub, :one and :base."
msgstr ""
"他にも :scope, :classes, :dn_attribute といったオプションの引数があります。:scope は ou=Groups 以下の検索"
"について、より深い階層までを検索するかどうかを指示します（cn=develop,ou=DevGroups,ou=Groups,dc=dataspill,dc"
"=org のような LDAP オブジェクトのこと）。"

#: ../../doc/text/tutorial.textile:190
#, fuzzy
msgid ""
"Something's missing: :classes.  :classes is used to tell ActiveLdap what\n"
"the minimum requirement is when creating a new object. LDAP uses objectClasses"
"\n"
"to define what attributes a LDAP object may have. ActiveLdap needs to know\n"
"what classes are required when creating a new object.  Of course, you can leav"
"e\n"
"that field out to default to ['top'] only.  Then you can let each application\n"
"choose what objectClasses their objects should have by calling the method e.g."
"\n"
"Group#add_class(*values)."
msgstr ""
":classes は ActiveLdap に対して、新しいオブジェクトを生成するのに必要な最低条件を指定します。<placeholder-1/> はオブジ"
"ェクトクラスを利用して、<placeholder-2/>オブジェクトがどのような属性を持ち得るかを定義します。ActiveLdap はこれを :classe"
"s 引数によって知ることになります。デフォルトは 'top' のみです。このままにすることもできますし、add_class メソッドなどによって追加すること"
"も可能です。"

#: ../../doc/text/tutorial.textile:198
#, fuzzy
msgid ""
"Note that is can be very important to define the default :classes value. Due t"
"o\n"
"implementation choices with most LDAP servers, once an object is created, its\n"
"structural objectclasses may not be removed (or replaced).  Setting a sane def"
"ault\n"
"may help avoid programmer error later."
msgstr ""
"デフォルトの :classes の値はとても重要です。ほとんどの <placeholder-1/> サーバは一度オブジェクトが造られると structual"
" な objectClass は削除（または変更）されることはないでしょう。健全なデフォルトを設定しておくことは、後々バグを作り込むことを回避する助けになる"
"かもしれません。"

#: ../../doc/text/tutorial.textile:203
#, fuzzy
msgid ""
":classes isn't the only optional argument.  If :dn_attribute is left off,\n"
"it defaults to super class's value or 'cn'.  If :prefix is left off,\n"
"it will default to 'ou=PluralizedClassName'. In this\n"
"case, it would be 'ou=Groups'."
msgstr ""
":classes だけがオプションの引数ではありません。:dn_attribute が無い場合、このデフォルトはスーパークラスと同じ値か、cn に設定されま"
"す。\n"
"\n"
":prefixが無い場合、このデフォルトは'ou=クラス名の複数形’に設定されます。この場合は'ou=Groups'になります。"

#: ../../doc/text/tutorial.textile:208
#, fuzzy
msgid ""
":classes should be an Array. :dn_attribute should be a String and so should\n"
":prefix."
msgstr ":classes は配列でなくてはなりません。:dn_attribute と :prefix は文字列である必要があります。"

#: ../../doc/text/tutorial.textile:212
msgid "h5. belongs_to"
msgstr ""

#: ../../doc/text/tutorial.textile:214
#, fuzzy
msgid ""
"This method allows an extension class to make use of other extension classes\n"
"tying objects together across the LDAP tree. Often, user objects will be\n"
"members of, or belong_to, Group objects."
msgstr ""
"このメソッドはLDAPツリーを横断して他の拡張クラスとの関連付けを行い、所属の表現を行います。しばしば User オブジェクトは Group オブジェクトの"
"メンバになったり、所属したりします。"

#: ../../doc/text/tutorial.textile:218
msgid ""
"<pre>\n"
"!!!plain\n"
"* dc=dataspill,dc=org\n"
"|+ ou=People,dc=dataspill,dc=org\n"
" \\\n"
" |- uid=drewry,ou=People,dc=dataspill,dc=org\n"
"|- ou=Groups,dc=dataspill,dc=org\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:228
#, fuzzy
msgid ""
"In the above tree, one such example would be user 'drewry' who is a part of th"
"e\n"
"group 'develop'. You can see this by looking at the 'memberUid' field of 'deve"
"lop'."
msgstr ""
"上記のようなLDAPツリーでは、'drewry'ユーザは　'develop' グループの一員であるとします。この場合、'develop' グループの 'me"
"mberUid' フィールドを見ることで、それを確認できます。"

#: ../../doc/text/tutorial.textile:231
msgid ""
"<pre>\n"
"irb> develop = Group.find('develop')\n"
"=> ...\n"
"irb> develop.memberUid\n"
"=> ['drewry', 'builder']\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:238
#, fuzzy
msgid ""
"If we look at the LDAP entry for 'drewry', we do not see any references to\n"
"group 'develop'. In order to remedy that, we can use belongs_to"
msgstr ""
"しかし、'drewry' のエントリを見た時に 'develop' グループと関連している事は判らないでしょう。これを解決するために belongs_to "
"を利用します。"

#: ../../doc/text/tutorial.textile:241
msgid ""
"<pre>\n"
"irb> class User < ActiveLdap::Base\n"
"irb*   ldap_mapping :dn_attribute => 'uid', :prefix => 'ou=People', :classes ="
"> ['top','account']\n"
"irb*   belongs_to :groups, :class_name => 'Group', :many => 'memberUid', :fore"
"ign_key => 'uid'\n"
"irb* end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:248
#, fuzzy
msgid ""
"Now, class User will have a method called 'groups' which will retrieve all\n"
"Group objects that a user is in."
msgstr ""
"これで User クラスは 'groups' メソッドを利用できるようになります。このメソッドはユーザが所属するすべての Group オブジェクトを取得する"
"ことができます。"

#: ../../doc/text/tutorial.textile:251
msgid ""
"<pre>\n"
"irb> me = User.find('drewry')\n"
"irb> me.groups\n"
"=>  #<ActiveLdap::Association::BelongsToMany...>    # Enumerable object\n"
"irb> me.groups.each { |group| p group.cn };nil\n"
"\"cdrom\"\n"
"\"audio\"\n"
"\"develop\"\n"
"=> nil\n"
"(Note: nil is just there to make the output cleaner...)\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:263
#, fuzzy
msgid ""
"TIP: If you weren't sure what the distinguished name attribute was for Group,\n"
"you could also do the following:"
msgstr ""
"<placeholder-1/>: 上記では Group の Distinguished name が cn であると仮定しています。もしGroup の D"
"istinguished name の属性名を知らなければ、以下のようにすれば（Distinguished name がなんであれ）Distinguishe"
"d name の属性を取得できます。"

#: ../../doc/text/tutorial.textile:266
msgid ""
"<pre>\n"
"irb> me.groups.each { |group| p group.id };nil\n"
"\"cdrom\"\n"
"\"audio\"\n"
"\"develop\"\n"
"=> nil\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:274
#, fuzzy
msgid ""
"Now let's talk about the arguments of belongs_to. We use the following code th"
"at extends Group group a bit for explain:"
msgstr "belongs_to の引数について説明します。理解の助けのため、先ほどの Group クラスを少し拡張した以下のコードを例にとって説明します。"

#: ../../doc/text/tutorial.textile:276
msgid ""
"<pre>\n"
"class User < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => 'uid', :prefix => 'People', :classes => ['top'"
",'account']"
msgstr ""

#: ../../doc/text/tutorial.textile:280
msgid ""
"  # Associate with primary belonged group\n"
"  belongs_to :primary_group, :foreign_key => 'gidNumber',\n"
"               :class_name => 'Group', :primary_key => 'gidNumber'"
msgstr ""

#: ../../doc/text/tutorial.textile:284
msgid ""
"  # Associate with all belonged groups\n"
"  belongs_to :groups,  :foreign_key => 'uid',\n"
"               :class_name => 'Group', :many => 'memberUid',\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:290
msgid ""
"The first argument is the name of the method you wish to create. In this case,"
" we created a method called primary_group and groups using the symbol :primary"
"_group and :groups. The next collection of arguments are actually a Hash (as w"
"ith ldap_mapping)."
msgstr ""
"belongs_to の最初の引数は作りたいメソッドの名前を Symbol で指定します。ここでは、primary_group メソッドと groups メ"
"ソッドを作成しています。次以降の引数は実際にはHashです（ldap_mapping のように）。"

#: ../../doc/text/tutorial.textile:292
#, fuzzy
msgid ""
":foreign_key tells belongs_to what attribute Group objects have that match the"
" related object's attribute. If :foreign_key is left off of the argument list,"
" it is assumed to be the dn_attribute."
msgstr ""
":foreign_key には、関連のキー値を持つ、自身の属性名を指定します。:foreign_keyに何も設定しないと、自動的に ldap_mapping"
" で指定した :dn_attribute の属性名が利用されます。"

#: ../../doc/text/tutorial.textile:294
msgid "In the example, uid is used for :foreign_key. It may confuse you."
msgstr "例では :foreign_key に uid を指定していますが、これに違和感を覚えたかもしれません。"

#: ../../doc/text/tutorial.textile:296
#, fuzzy
msgid ""
"ActiveLdap uses :foreign_key as \"own attribute name\". So it\n"
"may not be \"foreign key\". You can consider :foreign_key just\n"
"as a relation key."
msgstr ""
"ActiveLdapでの :foreign_key には \"自身の属性名を指定する”という規約があります。このため、必ずしも名前通りの”外部キー”とはならな"
"い場合があります。belongs_toにおける :foreign_key は、単に所属の関連性を示すためのキーにすぎないと考えた方が良いかも知れません。"

#: ../../doc/text/tutorial.textile:300
#, fuzzy
msgid ""
":primary_key is treated as \"related object's attribute name\"\n"
"as we discussed later."
msgstr "後述する :primary_key も同様に”相手先の属性名を指定する”という規約が適用されています。"

#: ../../doc/text/tutorial.textile:303
#, fuzzy
msgid ""
":class_name should be a string that has the name of a class\n"
"you've already included. If your class is inside of a module,\n"
"be sure to put the whole name, e.g.\n"
"@:class_name => \"MyLdapModule::Group\"@."
msgstr ""
":class_name キーには、所属先となるオブジェクトの拡張クラス名を、 String で指定します。もし拡張クラスがモジュールやクラスの中に定義されて"
"いる場合、<placeholder-1/>.のようにトップレベルから全ての名前を記載してください。この例では \"Group\" クラスを指定しています。"

#: ../../doc/text/tutorial.textile:308
msgid ""
":many and :primary_key are similar. Both of them specifies attribute name of r"
"elated object specified by :foreign_key. Those values are attribute name that "
"can be used by object of class specified by :class_name."
msgstr ""
":many と :primary_key は両方とも似た意味を持ちます。どちらも、:foreign_key の参照先属性名を指定します。指定する属性名は :"
"class_name で指定した拡張クラスのインスタンスで利用できる属性名です。"

#: ../../doc/text/tutorial.textile:310
#, fuzzy
msgid ""
"Relation is resolved by searching entries of :class_name class with :foreign_k"
"ey attribute value. Search target attribute for it is :primary_key or :many. p"
"rimary_group method in the above example searches Group objects with User obje"
"ct's gidNumber value as Group object's gidNumber value. Matched Group objects "
"are belonged objects."
msgstr ""
"所属の関連付けは、:foreign_key に指定した属性の値を用い、 :class_name に指定の拡張クラス配下のオブジェクト群を検索することによって"
"行われます。この際の検索対象属性が :primary_key または :many に指定の属性です。例で定義した parimary_group メソッドで言"
"えば、User オブジェクトの gidNumber の値で、 Groupオブジェクト群の属性gidNumber を検索します。マッチした Group オブジ"
"ェクトが所属先となります。"

#: ../../doc/text/tutorial.textile:312
msgid ""
":parimary_key is used for an object just belongs to an object. The first match"
"ed object is treated as beloned object."
msgstr ":parimary_key は所属先がただ一つの場合に利用します。検索の結果、最初にマッチしたもののみが所属先として扱われます。"

#: ../../doc/text/tutorial.textile:314
msgid ""
":many is used for an object belongs to many objects. All of matched objects ar"
"e treated as belonged objects."
msgstr ":many は所属先が複数の場合に利用します。検索の結果マッチしたすべてのオブジェクトが所属先として扱われます。"

#: ../../doc/text/tutorial.textile:316
msgid "In addition, you can do simple membership tests by doing the following:"
msgstr "尚、:many を利用していると、メンバーシップテストも下記のように行えます。"

#: ../../doc/text/tutorial.textile:318
msgid ""
"<pre>\n"
"irb> me.groups.member? 'root'\n"
"=> false\n"
"irb> me.groups.member? 'develop'\n"
"=> true\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:325
msgid "h5. has_many"
msgstr ""

#: ../../doc/text/tutorial.textile:327
#, fuzzy
msgid ""
"This method is the opposite of belongs_to. Instead of checking other objects i"
"n\n"
"other parts of the LDAP tree to see if you belong to them, you have multiple\n"
"objects from other trees listed in your object. To show this, we can just\n"
"invert the example from above:"
msgstr ""
"このメソッドは belongs_to と対のものです。特定のオブジェクトに所属しているエントリを、所属されているオブジェクトからリスト可能にします。これを行"
"うにはbelongs_toとは逆のことをします。"

#: ../../doc/text/tutorial.textile:332
msgid ""
"<pre>\n"
"class Group < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => 'cn', :prefix => 'ou=Groups', :classes => ['to"
"p', 'posixGroup']"
msgstr ""

#: ../../doc/text/tutorial.textile:336
msgid ""
"  # Associate with primary belonged users\n"
"  has_many :primary_members, :foreign_key => 'gidNumber',\n"
"           :class_name => \"User\", :primary_key => 'gidNumber'"
msgstr ""

#: ../../doc/text/tutorial.textile:340
msgid ""
"  # Associate with all belonged users\n"
"  has_many :members,  :wrap => \"memberUid\",\n"
"           :class_name => \"User\",  :primary_key => 'uid'\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:346
#, fuzzy
msgid ""
"Now we can see that group develop has user 'drewry' as a member, and it can\n"
"even return all responses in object form just like belongs_to methods."
msgstr ""
"これで develop グループが 'drewry' ユーザをメンバーとして見ることができます。belongs_to のように、メンバーのリストを memb"
"ers メソッドによって取得することができます。"

#: ../../doc/text/tutorial.textile:349
msgid ""
"<pre>\n"
"irb> develop = Group.find('develop')\n"
"=> ...\n"
"irb> develop.members\n"
"=> #<ActiveLdap::Association::HasManyWrap:..> # Enumerable object\n"
"irb> develop.members.map{|member| member.id}\n"
"=> [\"drewry\", \"builder\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:358
#, fuzzy
msgid ""
"The arguments for has_many follow the exact same idea that belongs_to's\n"
"arguments followed. :wrap's contents are used to search for matching\n"
":primary_key content.  If :primary_key is not specified, it defaults to the\n"
"dn_attribute of the specified :class_name."
msgstr ""
"has_many の引数は belongs_to とまったく同じ形式をとります。つまり第一引数に実装するメソッド名を Symbol で渡し、続く引数は Ha"
"sh です。\n"
"\n"
":class_name、:parimary_key の意味合いも belongs_to と同様で、相手先の拡張クラス名と参照先の属性名を指定します。相手先が"
"所有先になるだけです。尚、 has_many に:many キーはありません。\n"
"\n"
"belonsg_to と違う点は、自身の関連性のキー属性を指定するオプションが二つあることです。:foreign_key か :wrap のいずれかで指定し"
"ます。\n"
"\n"
":foreign_key で属性名を指定した場合、has_many は単純に :class_name のクラスに対して検索を行い、マッチしたオブジェクト群を"
"所有オブジェクト群として扱います。\n"
"\n"
":wrap で指定した場合は挙動が変わります。:wrap の概念は”:wrap に指定した属性に保持する値をオブジェクト化する”ことです。\n"
"\n"
":wrap に指定する属性は、memberUid のように一つ以上の値を持つことを想定しています。この属性に保持する全ての値で検索し、マッチする全てのオブジ"
"ェクトを返します。マッチしない値がある場合、:class_name に指定の拡張クラスで new され、所有対象のリストに含まれます。"

#: ../../doc/text/tutorial.textile:363
#, fuzzy
msgid "h3. Using these new classes"
msgstr "拡張クラスの利用法"

#: ../../doc/text/tutorial.textile:365
#, fuzzy
msgid ""
"These new classes have many method calls. Many of them are automatically\n"
"generated to provide access to the LDAP object's attributes. Other were define"
"d\n"
"during class creation by special methods like belongs_to. There are a few othe"
"r\n"
"methods that do not fall in to these categories."
msgstr ""
"作成した拡張クラスは多くのメソッドコールを持ちます。それらのうちの多数は LDAPオブジェクトに対するアクセスを提供するために自動的に作成されています。他の"
"メソッドはクラス定義時、belongs_to のような特別なメソッドによって作成されます。以下ではそれら以外のメソッドについて記載します。"

#: ../../doc/text/tutorial.textile:370
msgid "h4. .find"
msgstr ""

#: ../../doc/text/tutorial.textile:372
#, fuzzy
msgid ""
".find is a class method that is accessible from\n"
"any subclass of Base that has 'ldap_mapping' called. When\n"
"called .first(:first) returns the first match of the given class."
msgstr ".find は ldap_mapping をコール済みの拡張クラスのクラスメソッドです。ActiveRecordのようにLDAPオブジェクトを検索可能です。"

#: ../../doc/text/tutorial.textile:376
msgid ""
"<pre>\n"
"irb> Group.find(:first, 'deve*\").cn\n"
"=> \"develop\"\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:381
#, fuzzy
msgid ""
"In this simple example, Group.find took the search string of 'deve*' and\n"
"searched for the first match in Group where the dn_attribute matched the\n"
"query. This is the simplest example of .find."
msgstr "文字列を与えると、dn_attribute をキーにして最初にマッチするオブジェクトを返します。"

#: ../../doc/text/tutorial.textile:385
msgid ""
"<pre>\n"
"irb> Group.find(:all).collect {|group| group.cn}\n"
"=> [\"root\", \"daemon\", \"bin\", \"sys\", \"adm\", \"tty\", ..., \"develop\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:390
#, fuzzy
msgid ""
"Here .find(:all) returns all matches to the same query.  Both .find(:first) an"
"d\n"
".find(:all) also can take more expressive arguments:"
msgstr "最初のキーに :all を与えると全てのオブジェクトを返します。"

#: ../../doc/text/tutorial.textile:393
msgid ""
"<pre>\n"
"irb> Group.find(:all, :attribute => 'gidNumber', :value => '1003').collect {|g"
"roup| group.cn}\n"
"=> [\"develop\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:398
#, fuzzy
msgid ""
"So it is pretty clear what :attribute and :value do - they are used to query a"
"s\n"
":attribute=:value."
msgstr ":attribute と :value によって特定のキーについて検索することも可能です。"

#: ../../doc/text/tutorial.textile:401
msgid "If :attribute is unspecified, it defaults to the dn_attribute."
msgstr ":attribute が指定されない場合、:dn_attribute が利用されます。"

#: ../../doc/text/tutorial.textile:403
#, fuzzy
msgid ""
"It is also possible to override :attribute and :value by specifying :filter. T"
"his\n"
"argument allows the direct specification of a LDAP filter to retrieve objects "
"by."
msgstr ":filter によって<placeholder-1/>フィルタを直接指定することも可能です。"

#: ../../doc/text/tutorial.textile:406
msgid "h5. Using the :filter option"
msgstr ""

#: ../../doc/text/tutorial.textile:408
msgid ""
"The filter option lets you pass in an LDAP query string.\n"
"For example retrieving all groups with cn which starts with @'dev'@ and has @g"
"uid@ == 1:"
msgstr ""

#: ../../doc/text/tutorial.textile:408
#, fuzzy
msgid ""
".search is a class method that is accessible from any subclass of Base, and Ba"
"se.\n"
"It lets the user perform an arbitrary search against the current LDAP connecti"
"on\n"
"irrespetive of LDAP mapping data.  This is meant to be useful as a utility met"
"hod\n"
"to cover 80% of the cases where a user would want to use Base.connection direc"
"tly."
msgstr ""
".search は ActiveLdap::Base か、そのサブクラスから呼び出し可能なクラスメソッドです。拡張クラスと LDAPツリーとのマッピングを無"
"視して検索することができます。直接Base.connection を利用してもよいですが、このメソッドを利用すれば8割の目的は達成できるでしょう。"

#: ../../doc/text/tutorial.textile:411
msgid ""
"<pre>\n"
"irb> Group.find(:all, :filter => '(&(cn=dev*)(guid=1))').collect {|group| grou"
"p.cn}\n"
"=> [\"develop\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:416
msgid ""
"It also allows a hash like sintax (sparing you the need to write the query by "
"hand ):"
msgstr ""

#: ../../doc/text/tutorial.textile:418
msgid ""
"<pre>\n"
"irb> Group.find(:all, :filter => {:cn => 'dev*', :guid => 1 }).collect {|group"
"| group.cn}\n"
"=> [\"develop\", \"developers\", \"sys\", \"sysadmin\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:423
msgid ""
"You can build complex queries combining the hash syntax with arrays and @:or@ "
"and @:and@ operators retrieving all users whose name contains 'john' or cn end"
"s with 'smith' or contains 'liz'"
msgstr ""

#: ../../doc/text/tutorial.textile:425
msgid ""
"<pre>\n"
"irb> User.find(:all, filter: [:or, [:or, { :cn => '*smith', :name => '*john*'}"
" ], { cn: '*liz*' }]).collect(&:cn)\n"
"=> ['john.smith', 'jane.smith', 'john tha ripper', 'liz.taylor', ...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:427
#, fuzzy
msgid ""
"valid? is a method that verifies that all attributes that are required by the\n"
"objects current objectClasses are populated."
msgstr "valid? はインスタンスメソッドです。オブジェクトクラスで必要とされる属性が備わっているか検査します。真偽値を返します。"

#: ../../doc/text/tutorial.textile:430
msgid "h4. .search"
msgstr ""

#: ../../doc/text/tutorial.textile:432
#, fuzzy
msgid ""
"save is a method that writes any changes to an object back to the LDAP server."
"\n"
"It automatically handles the addition of new objects, and the modification of\n"
"existing ones."
msgstr ""
"save は <placeholder-1/> オブジェクトの変更を保存するためのインスタンスメソッドです。実行すると、レシーバのオブジェクトに加えられてい"
"た変更が LDAP サーバに反映されます。新しいオブジェクトか、既存のオブジェクトかを自動判別し、新規オブジェクトならLDAPサーバに追加します。既存のもの"
"ならば更新します。"

#: ../../doc/text/tutorial.textile:437
msgid ""
"<pre>\n"
"irb> Base.search(:base => 'dc=example,dc=com', :filter => '(uid=roo*)',\n"
"                 :scope => :sub, :attributes => ['uid', 'cn'])\n"
"=>  [[\"uid=root,ou=People,dc=dataspill,dc=org\",{\"cn\"=>[\"root\"], \"uidNumber\"=>["
"\"0\"]}]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:438
#, fuzzy
msgid ""
"exists? is a simple method which returns true is the current object exists in\n"
"LDAP, or false if it does not."
msgstr "exists? はシンプルなクラスメソッドです。ある :dn_attribute を持つオブジェクトが存在するか検査したい時に利用します。"

#: ../../doc/text/tutorial.textile:443
msgid ""
"You can specify the :filter, :base, :scope, and :attributes, but they all have"
" defaults --\n"
"* :filter defaults to objectClass=* - usually this isn't what you want\n"
"* :base defaults to the base of the class this is executed from (as set in lda"
"p_mapping)\n"
"* :scope defaults to :sub. Usually you won't need to change it (You can choose"
" value also from between :one and :base)\n"
"* :attributes defaults to [] and is the list of attributes you want back. Empt"
"y means all of them."
msgstr ""

#: ../../doc/text/tutorial.textile:449
msgid "h4. #valid?"
msgstr ""

#: ../../doc/text/tutorial.textile:449
#, fuzzy
msgid ""
"ActiveLdap::Base has come up a number of times in the examples above.  Every\n"
"time, it was being used as the super class for the wrapper objects. While this"
"\n"
"is it's main purpose, it also handles quite a bit more in the background."
msgstr ""
"ActiveLdap::Base はこれまでの例の中で何回か登場してきました。主な目的としてLDAPオブジェクトをラップするために拡張クラスのスーパークラス"
"として活用しましたが、もう少しその背景を記載します。"

#: ../../doc/text/tutorial.textile:453
#, fuzzy
msgid "h4. What is it?"
msgstr "これは何か"

#: ../../doc/text/tutorial.textile:454
msgid "h4. #save"
msgstr ""

#: ../../doc/text/tutorial.textile:455
#, fuzzy
msgid ""
"ActiveLdap::Base is the heart of ActiveLdap.  It does all the schema\n"
"parsing for validation and attribute-to-method mangling as well as manage the\n"
"connection to LDAP."
msgstr ""
"ActiveLdap::Base は ActiveLdap の心臓部です。属性を setter/getter にマッピングしたり、バリデーションを行うための"
"スキーマ解析を行います。同時に、LDAPサーバとの接続の管理も行います。"

#: ../../doc/text/tutorial.textile:460
msgid "h4. .exists?"
msgstr ""

#: ../../doc/text/tutorial.textile:461
#, fuzzy
msgid ""
"Base.setup_connection takes many (optional) arguments and is used to\n"
"connect to the LDAP server. Sometimes you will want to connect anonymously\n"
"and other times over TLS with user credentials. Base.setup_connection is\n"
"here to do all of that for you."
msgstr ""
"Base.setup_connection は <placeholder-1/> サーバとの接続のために多くの引数をとります。多くはオプションの引数です。時"
"に匿名接続を行いたいでしょうし、時にはユーザ証明とともにTLSを利用した接続をしたいでしょう。Base.setup_connection はそれらを実現しま"
"す。"

#: ../../doc/text/tutorial.textile:465
msgid ""
"<pre>\n"
"irb> User.exists?(\"dshadsadsa\")\n"
"=> false\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:467
#, fuzzy
msgid ""
"By default, if you call any subclass of Base, such as Group, it will call\n"
"Base.setup_connection() if these is no active LDAP connection. If your\n"
"server allows anonymous binding, and you only want to access data in a\n"
"read-only fashion, you won't need to call Base.setup_connection. Here\n"
"is a fully parameterized call:"
msgstr ""
"Group のような、Base を親に持つサブクラスをコールした際、まだ接続が確立していなければ、Base.setup_connection で設定した情報"
"をもとに接続しようと試みます。あなたのサーバが匿名バインドを許していて、かつ読み取り専用でのアクセスを行いたいのなら、多くを設定する必要はないでしょう。以下"
"にパラメータつきの setup_connection の例を示します。"

#: ../../doc/text/tutorial.textile:471
msgid "h3. ActiveLdap::Base"
msgstr ""

#: ../../doc/text/tutorial.textile:483
msgid "h5. setup_connection"
msgstr ""

#: ../../doc/text/tutorial.textile:497
msgid ""
"<pre>\n"
"Base.setup_connection(\n"
"  :host => 'ldap.dataspill.org',\n"
"  :port => 389,\n"
"  :base => 'dc=dataspill,dc=org',\n"
"  :logger => logger_object,\n"
"  :bind_dn => \"uid=drewry,ou=People,dc=dataspill,dc=org\",\n"
"  :password_block => Proc.new { 'password12345' },\n"
"  :allow_anonymous => false,\n"
"  :try_sasl => false\n"
")\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:510
msgid ""
"There are quite a few arguments, but luckily many of them have safe defaults:\n"
"* :host defaults to \"127.0.0.1\".\n"
"* :port defaults to nil. 389 is applied if not specified. \n"
"* :bind_dn defaults to nil. anonymous binding is applied if not specified.\n"
"* :logger defaults to a Logger object that prints fatal messages to stderr\n"
"* :password_block defaults to nil\n"
"* :allow_anonymous defaults to true\n"
"* :try_sasl defaults to false - see Advanced Topics for more on this one."
msgstr ""

#: ../../doc/text/tutorial.textile:520
msgid ""
"Most of these are obvious, but I'll step through them for completeness:\n"
"* :host defines the LDAP server hostname to connect to.\n"
"* :port defines the LDAP server port to connect to.\n"
"* :method defines the type of connection - :tls, :ssl, :plain\n"
"* :base specifies the LDAP search base to use with the prefixes defined in all"
"\n"
"  subclasses.\n"
"* :bind_dn specifies what your server expects when attempting to bind with\n"
"  credentials.\n"
"* :logger accepts a custom logger object to integrate with any other logging\n"
"  your application uses.\n"
"* :password_block, if defined, give the Proc block for acquiring the password\n"
"* :password, if defined, give the user's password as a String\n"
"* :store_password indicates whether the password should be stored, or if used\n"
"  whether the :password_block should be called on each reconnect.\n"
"* :allow_anonymous determines whether anonymous binding is allowed if other\n"
"  bind methods fail\n"
"* :try_sasl, when true, tells ActiveLdap to attempt a SASL-GSSAPI bind\n"
"* :sasl_quiet, when true, tells the SASL libraries to not spew messages to STD"
"OUT\n"
"* :sasl_options, if defined, should be a hash of options to pass through. This"
" currently only works with the ruby-ldap adapter, which currently only support"
"s :realm, :authcid, and :authzid.\n"
"* :retry_limit - indicates the number of attempts to reconnect that will be un"
"dertaken when a stale connection occurs. -1 means infinite.\n"
"* :retry_wait - seconds to wait before retrying a connection\n"
"* :scope - dictates how to find objects. (Default: :one)\n"
"* :timeout - time in seconds - defaults to disabled. This CAN interrupt search"
"() requests. Be warned.\n"
"* :retry_on_timeout - whether to reconnect when timeouts occur. Defaults to tr"
"ue\n"
"See lib/configuration.rb(ActiveLdap::Configuration::DEFAULT_CONFIG) for defaul"
"ts for each option"
msgstr ""

#: ../../doc/text/tutorial.textile:522
#, fuzzy
msgid ""
"Base.setup_connection just setups connection\n"
"configuration. A connection is connected and bound when it\n"
"is needed. It follows roughly the following approach:"
msgstr ""
"Base.setup_connection は接続の設定のみを行います。実際にLDAPサーバに接続しバインドするプロセスは必要になったときに一度に実施されま"
"す。だいたい、以下のようなアプローチを取ります"

#: ../../doc/text/tutorial.textile:526
#, fuzzy
msgid "* Connect to host:port using :method"
msgstr "host:port にたいして、:method での接続を行います"

#: ../../doc/text/tutorial.textile:533
#, fuzzy
msgid ""
"On connect, the configuration options passed in are stored\n"
"in an internal class variable which is used to cache the\n"
"information without ditching the defaults passed in from\n"
"configuration.rb"
msgstr "接続の際、渡された設定オプションはクラス変数の中に格納されます。このさい、指定されていないオプションはデフォルト値が適用されます。"

#: ../../doc/text/tutorial.textile:542
#, fuzzy
msgid "h3. Exceptions"
msgstr "例外クラス"

#: ../../doc/text/tutorial.textile:548
#, fuzzy
msgid ""
"This exception is raised when #delete fails. It will include LDAP error\n"
"information that was passed up during the error."
msgstr "LDAPオブジェクトの削除に失敗した際、この例外が発生します。エラー発生時の <placeholder-1/> エラーメッセージが含まれます。"

#: ../../doc/text/tutorial.textile:552
msgid ""
"* If bind_dn and password_block/password, attempt to bind with credentials.\n"
"* If that fails or no password_block and anonymous allowed, attempt to bind\n"
"  anonymously.\n"
"* If that fails, error out."
msgstr ""

#: ../../doc/text/tutorial.textile:553
#, fuzzy
msgid ""
"This exception is raised when there is a problem in #save updating or creating"
"\n"
"an LDAP entry.  Often the error messages are cryptic. Looking at the server\n"
"logs or doing an \"Wireshark\":http://www.wireshark.org dump of the connection w"
"ill\n"
"often provide better insight."
msgstr ""
"<placeholder-1/> オブジェクトの追加または更新に問題があった場合に発生する例外です。LDAPサーバのログや <placeholder-2/>"
" などによる通信解析によってより詳しい情報が得られるかもしれません。"

#: ../../doc/text/tutorial.textile:560
#, fuzzy
msgid ""
"This exception is raised during Base.setup_connection if no valid authenticati"
"on methods\n"
"succeeded."
msgstr "この例外は setup_connection で :method による指定された認証が成功しなかった場合に発生します。"

#: ../../doc/text/tutorial.textile:562
msgid "h5. connection"
msgstr ""

#: ../../doc/text/tutorial.textile:564
msgid "Base.connection returns the ActiveLdap::Connection object."
msgstr "Base.connection は ActiveLdasp::Connection オブジェクトを返します"

#: ../../doc/text/tutorial.textile:565
#, fuzzy
msgid ""
"This exception is raised during Base.setup_connection if no valid\n"
"connection to the LDAP server could be created. Check you \n"
"Base.setup_connection arguments, and network connectivity! Also check\n"
"your LDAP server logs to see if it ever saw the request."
msgstr ""
"この例外は setup_connection で指定された接続が確立できなかった場合に発生します。setup_connection のパラメータや、ネットワ"
"ークの導通を確認してみてください。ちゃんとリクエストが投げられている場合、<placeholder-2/>サーバのログも確認してみてください。"

#: ../../doc/text/tutorial.textile:568
msgid "There are a few custom exceptions used in ActiveLdap. They are detailed below."
msgstr "ActiveLdap は幾つかのカスタマイズした例外クラスを扱います。以下にそれを示します。"

#: ../../doc/text/tutorial.textile:570
msgid "h4. DeleteError"
msgstr ""

#: ../../doc/text/tutorial.textile:572
#, fuzzy
msgid ""
"This exception is raised when an object class is used that is not defined\n"
"in the schema."
msgstr "この例外は、LDAPサーバのスキーマ上で定義されていないオブジェクトクラスを利用した場合に発生します。"

#: ../../doc/text/tutorial.textile:575
#, fuzzy
msgid "h3. Others"
msgstr "その他"

#: ../../doc/text/tutorial.textile:575
msgid "h4. SaveError"
msgstr ""

#: ../../doc/text/tutorial.textile:577
#, fuzzy
msgid ""
"Other exceptions may be raised by the Ruby/LDAP module, or by other subsystems"
".\n"
"If you get one of these exceptions and think it should be wrapped, write me an"
"\n"
"email and let me know where it is and what you expected. For faster results,\n"
"email a patch!"
msgstr ""
"その他の例外は Ruby/<placeholder-1/> モジュールか、さらに別のサブシステムから発生します。もしあなたがそれらの例外を受け取り、Acti"
"veLdap の例外によりラップされるべきだと考えたら、あなたが何を期待しているかをメールで教えてください。早く結果を出したい場合、メールにパッチを添付して"
"ください。"

#: ../../doc/text/tutorial.textile:582
#, fuzzy
msgid "h3. Putting it all together"
msgstr "実際に動作するサンプルコード"

#: ../../doc/text/tutorial.textile:582
msgid "h4. AuthenticationError"
msgstr ""

#: ../../doc/text/tutorial.textile:584
#, fuzzy
msgid ""
"Now that all of the components of ActiveLdap have been covered, it's time\n"
"to put it all together! The rest of this section will show the steps to setup\n"
"example user and group management scripts for use with the LDAP tree described"
"\n"
"above."
msgstr ""
"ここまでで ActiveLdap のすべてのコンポーネントについて記述しました。さあ、実際に動作するコードを配置するときです！ 以降では、いままで例に挙げて"
"きた <placeholder-1/> ツリー上の、ユーザとグループを管理するためのスクリプトを順番にセットアップしてきます。"

#: ../../doc/text/tutorial.textile:587
msgid "h4. ConnectionError"
msgstr ""

#: ../../doc/text/tutorial.textile:589
#, fuzzy
msgid "All of the scripts here are in the package's examples/ directory."
msgstr "以下に示すサンプルコードは、ActiveLdap ライブラリの examples/ ディレクトリにも配置されています。"

#: ../../doc/text/tutorial.textile:591
#, fuzzy
msgid "h4. Setting up"
msgstr "準備"

#: ../../doc/text/tutorial.textile:594
msgid "h4. ObjectClassError"
msgstr ""

#: ../../doc/text/tutorial.textile:617
msgid "Create directory for scripts."
msgstr "まず必要なディレクトリを作成します"

#: ../../doc/text/tutorial.textile:619
msgid ""
"<pre>\n"
"!!!plain\n"
"% mkdir -p ldapadmin/objects\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:624
msgid "In ldapadmin/objects/ create the file user.rb:"
msgstr "次に、ldapadin/objects/user.rb を作成します。コードは以下のようにしてください。"

#: ../../doc/text/tutorial.textile:625
#, fuzzy
msgid "Now let's create a really dumb script for adding users - ldapadmin/useradd:"
msgstr "早速ユーザを追加するための ldapadmin/useradd スクリプトを作成しましょう。"

#: ../../doc/text/tutorial.textile:626
msgid ""
"<pre>\n"
"require 'objects/group'"
msgstr ""

#: ../../doc/text/tutorial.textile:629
msgid ""
"class User < ActiveLdap::Base\n"
"  ldap_mapping :dn_attribute => 'uid', :prefix => 'ou=People', :classes => ['p"
"erson', 'posixAccount']\n"
"  belongs_to :groups, :class_name => 'Group', :many => 'memberUid'\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:635
msgid "In ldapadmin/objects/ create the file group.rb:"
msgstr "同様に、ldapadmin/objects/group.rb を作成します。"

#: ../../doc/text/tutorial.textile:637
msgid ""
"<pre>\n"
"class Group < ActiveLdap::Base\n"
"  ldap_mapping :classes => ['top', 'posixGroup'], :prefix => 'ou=Groups'\n"
"  has_many :members, :class_name => \"User\", :wrap => \"memberUid\"\n"
"  has_many :primary_members, :class_name => 'User', :foreign_key => 'gidNumber"
"', :primary_key => 'gidNumber'\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:645
msgid "Now, we can write some small scripts to do simple management tasks."
msgstr "これでシンプルな管理タスクのためのスクリプトを書けるようになりました。"

#: ../../doc/text/tutorial.textile:647
msgid "h4. Creating LDAP entries"
msgstr ""

#: ../../doc/text/tutorial.textile:651 ../../doc/text/tutorial.textile:704
#: ../../doc/text/tutorial.textile:754
msgid ""
"<pre>\n"
"#!/usr/bin/ruby -W0"
msgstr ""

#: ../../doc/text/tutorial.textile:654 ../../doc/text/tutorial.textile:707
#: ../../doc/text/tutorial.textile:757
msgid ""
"base = File.expand_path(File.join(File.dirname(__FILE__), \"..\"))\n"
"$LOAD_PATH << File.join(base, \"lib\")\n"
"$LOAD_PATH << File.join(base, \"examples\")"
msgstr ""

#: ../../doc/text/tutorial.textile:658 ../../doc/text/tutorial.textile:711
#: ../../doc/text/tutorial.textile:761
msgid ""
"require 'rubygems'\n"
"require 'active_ldap'\n"
"require 'objects/user'\n"
"require 'objects/group'"
msgstr ""

#: ../../doc/text/tutorial.textile:663 ../../doc/text/tutorial.textile:716
msgid ""
"argv, opts, options = ActiveLdap::Command.parse_options do |opts, options|\n"
"  opts.banner += \" USER_NAME CN UID\"\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:667 ../../doc/text/tutorial.textile:720
msgid ""
"if argv.size == 3\n"
"  name, cn, uid = argv\n"
"else\n"
"  $stderr.puts opts\n"
"  exit 1\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:674 ../../doc/text/tutorial.textile:727
#: ../../doc/text/tutorial.textile:777
msgid ""
"pwb = Proc.new do |user|\n"
"  ActiveLdap::Command.read_password(\"[#{user}] Password: \")\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:678 ../../doc/text/tutorial.textile:731
#: ../../doc/text/tutorial.textile:781
msgid ""
"ActiveLdap::Base.setup_connection(:password_block => pwb,\n"
"                                  :allow_anonymous => false)"
msgstr ""

#: ../../doc/text/tutorial.textile:678
#, fuzzy
msgid "Now let's create another dumb script for modifying users - ldapadmin/usermod:"
msgstr "次に、ユーザの属性変更スクリプト ldapadmin/usermod を作成します。"

#: ../../doc/text/tutorial.textile:681
msgid ""
"if User.exists?(name)\n"
"  $stderr.puts(\"User #{name} already exists.\")\n"
"  exit 1\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:686
msgid ""
"user = User.new(name)\n"
"user.add_class('shadowAccount')\n"
"user.cn = cn\n"
"user.uid_number = uid\n"
"user.gid_number = uid\n"
"user.home_directory = \"/home/#{name}\"\n"
"user.sn = \"somesn\"\n"
"unless user.save\n"
"  puts \"failed\"\n"
"  puts user.errors.full_messages\n"
"  exit 1\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:700
msgid "h4. Managing LDAP entries"
msgstr ""

#: ../../doc/text/tutorial.textile:728
#, fuzzy
msgid "Now let's create more one for deleting users - ldapadmin/userdel:"
msgstr "最後に、ユーザ削除のためのスクリプト ldapadmin/userdel を作成します。"

#: ../../doc/text/tutorial.textile:734 ../../doc/text/tutorial.textile:784
msgid ""
"unless User.exists?(name)\n"
"  $stderr.puts(\"User #{name} doesn't exist.\")\n"
"  exit 1\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:739
msgid ""
"user = User.find(name)\n"
"user.cn = cn\n"
"user.uid_number = uid\n"
"user.gid_number = uid\n"
"unless user.save\n"
"  puts \"failed\"\n"
"  puts user.errors.full_messages\n"
"  exit 1\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:750
msgid "h4. Removing LDAP entries"
msgstr ""

#: ../../doc/text/tutorial.textile:766
msgid ""
"argv, opts, options = ActiveLdap::Command.parse_options do |opts, options|\n"
"  opts.banner += \" USER_NAME\"\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:768
#, fuzzy
msgid "h3. Advanced Topics"
msgstr "高度な話題"

#: ../../doc/text/tutorial.textile:770
msgid ""
"if argv.size == 1\n"
"  name = argv.shift\n"
"else\n"
"  $stderr.puts opts\n"
"  exit 1\n"
"end"
msgstr ""

#: ../../doc/text/tutorial.textile:773
#, fuzzy
msgid "h4. Binary data and other subtypes"
msgstr "バイナリデータとサブタイプ"

#: ../../doc/text/tutorial.textile:775
#, fuzzy
msgid ""
"Sometimes, you may want to store attributes with language specifiers, or\n"
"perhaps in binary form.  This is (finally!) fully supported.  To do so,\n"
"follow the examples below:"
msgstr ""
"しばしば、あなたは属性に言語指定子を指定して値を格納したくなるでしょう。それにバイナリデータ形式で投入したいかもしれません。これは十分にサポートされています"
"。例を見てみましょう。"

#: ../../doc/text/tutorial.textile:789
msgid ""
"User.destroy(name)\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:793
#, fuzzy
msgid ""
"So that's a lot to take in. Here's what is going on. I just set the LDAP\n"
"object's cn to \"wad\" and cn:lang-en-us to [\"wad\", \"Will Drewry\"].\n"
"Anytime a LDAP subtype is required, you must encapsulate the data in a Hash."
msgstr ""
"この例には見るべき点が多くあります。順番に見てみましょう。例では、cn に\"wad\"と cn;lang-en-us に [\"wad\", \"Will Drew"
"ry\"] を追加しています。<placeholder-2/>属性のサブタイプが必要とされるとき、それらのデータは Hash で包む必要があります。"

#: ../../doc/text/tutorial.textile:794
msgid "Below are some situation tips and tricks to get the most out of ActiveLdap."
msgstr "以降では、ActiveLdap を最大限に生かすために、さまざまなシチュエーションで役立つテクニックを紹介していきます。"

#: ../../doc/text/tutorial.textile:797
#, fuzzy
msgid ""
"But wait a minute, I just read in a binary certificate without wrapping it up."
"\n"
"So any binary attribute _that requires ;binary subtyping_ will automagically\n"
"get wrapped in @{'binary' => value}@ if you don't do it. This keeps your #writ"
"es\n"
"from breaking, and my code from crying.  For correctness, I could have easily\n"
"done the following:"
msgstr ""
"一方で、上記の例では Hash に包まずに X.509 証明書を格納しました。バイナリデータを格納するいくつかのの属性は <placeholder-1/>が"
"必要です。これらの属性に対しては、プログラマがそうしなくても、自動で <placeholder-2/> の Hash で包まれます。これはコーディングの助け"
"になりますが、正確性のために明示的に Hash で包むことも可能です。"

#: ../../doc/text/tutorial.textile:803
msgid ""
"<pre>\n"
"irb> user = User.new('drewry')\n"
"=> ...\n"
"# This adds a cn entry in lang-en and whatever the server default is.\n"
"irb> user.cn = [ 'wad', {'lang-en' => ['wad', 'Will Drewry']} ]\n"
"=> ...\n"
"irb> user.cn\n"
"=> [\"wad\", {\"lang-en-us\" => [\"wad\", \"Will Drewry\"]}]\n"
"# Now let's add a binary X.509 certificate (assume objectClass is correct)\n"
"irb> user.user_certificate = File.read('example.der')\n"
"=> ...\n"
"irb> user.save\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:807
#, fuzzy
msgid ""
"You should note that some binary data does not use the binary subtype all the "
"time.\n"
"One example is jpegPhoto. You can use it as jpegPhoto;binary or just as jpegPh"
"oto.\n"
"Since the schema dictates that it is a binary value, ActiveLdap will write\n"
"it as binary, but the subtype will not be automatically appended as above. The"
"\n"
"use of the subtype on attributes like jpegPhoto is ultimately decided by the\n"
"LDAP site policy and not by any programmatic means."
msgstr ""
"バイナリデータを格納する場合であっても、必ずしも ;binary サブタイプを利用する訳ではないことに注意してください。例としては jpegPhoto があ"
"ります。あなたはjpegPhoto;binaryか jpegPhoto を利用することができます。スキーマがバイナリ値だと指示するので ActiveLdap"
" はバイナリ値として書き込むでしょうが、サブタイプは自動的には付与されません。jpegPhoto のような属性にサブタイプを利用するかどうかは、<place"
"holder-1/>のサイトポリシーによって決められることであって、プログラムが自動で判断できるものではありません。（訳注：userCertificate "
"属性については、RFC上で ;binary サブタイプを利用するよう指示されているため、自動的に ;binary 属性を付与できる一方、jpegPhoto "
"についてそのような言及が RFC 上にないために、そのような対応を自動的に行うことは難しい、ということのようです）"

#: ../../doc/text/tutorial.textile:814
#, fuzzy
msgid ""
"The only subtypes defined in LDAPv3 are lang-* and binary.  These can be neste"
"d\n"
"though:"
msgstr ""
"LDAPv3 で唯一定義されているサブタイプが lang-* と binary の組み合わせです。これらは以下のように Hash をネストさせることで実現で"
"きます。"

#: ../../doc/text/tutorial.textile:821
#, fuzzy
msgid ""
"As I understand it, OpenLDAP does not support nested subtypes, but some\n"
"documentation I've read suggests that Netscape's LDAP server does. I only\n"
"have access to OpenLDAP. If anyone tests this out, please let me know how it\n"
"goes!"
msgstr ""
"ネストされたサブタイプは OpenLDAP でサポートされていません。ですが、いくつかの文書を確認したところ、ネットスケープの <placeholder-1"
"/> サーバは対応しているようです。私がアクセスしたのは OpenLDAP のみなので、どなたかこの機能をテストしたなら、どのように動作したかを連絡してもら"
"えると助かります。"

#: ../../doc/text/tutorial.textile:827
msgid ""
"<pre>\n"
"irb> user.user_certificate = {'binary' => File.read('example.der')}\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:829
#, fuzzy
msgid "h4. Further integration with your environment aka namespacing"
msgstr "環境とのさらなる統合 - 別名 名前空間の構築"

#: ../../doc/text/tutorial.textile:831
#, fuzzy
msgid ""
"If you want this to cleanly integrate into your system-wide Ruby include path,"
"\n"
"you should put your extension classes inside a custom module."
msgstr "ActiveLdap を Ruby のインクルードパスに統合したいなら、拡張クラスをカスタムモジュールの中に統合するとよいでしょう。"

#: ../../doc/text/tutorial.textile:841
msgid ""
"<pre>\n"
"irb> user.cn = [{'lang-ja' => {'binary' => 'some Japanese'}}]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:851
msgid "And that pretty much wraps up this section."
msgstr "このセクションの他の項目についても同様です。どのように動作したか連絡もらえると助かります。"

#: ../../doc/text/tutorial.textile:859
msgid "Example:"
msgstr "例:"

#: ../../doc/text/tutorial.textile:861
msgid "./myldap.rb:"
msgstr ""

#: ../../doc/text/tutorial.textile:863
msgid ""
"<pre>\n"
"require 'active_ldap'\n"
"require 'myldap/user'\n"
"require 'myldap/group'\n"
"module MyLDAP\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:871
msgid "./myldap/user.rb:"
msgstr ""

#: ../../doc/text/tutorial.textile:873
msgid ""
"<pre>\n"
"module MyLDAP\n"
"  class User < ActiveLdap::Base\n"
"    ldap_mapping :dn_attribute => 'uid', :prefix => 'ou=People', :classes => ["
"'top', 'account', 'posixAccount']\n"
"    belongs_to :groups, :class_name => 'MyLDAP::Group', :many => 'memberUid'\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:882
msgid "./myldap/group.rb:"
msgstr ""

#: ../../doc/text/tutorial.textile:882
#, fuzzy
msgid "h4. force array results for single values"
msgstr "単一内容の属性に対する getter アクセスであっても、配列で返すようにする"

#: ../../doc/text/tutorial.textile:884
#, fuzzy
msgid ""
"Even though ActiveLdap attempts to maintain programmatic ease by\n"
"returning Array values only. By specifying 'true' as an argument to\n"
"any attribute method you will get back a Array if it is single value.\n"
"Here's an example:"
msgstr "属性メソッドの引数に true を渡すことで、その属性の中身が単一の内容であっても配列で返すように挙動を変更することができます。"

#: ../../doc/text/tutorial.textile:884
msgid ""
"<pre>\n"
"module MyLDAP\n"
"  class Group < ActiveLdap::Base\n"
"    ldap_mapping :classes => ['top', 'posixGroup'], :prefix => 'ou=Groups'\n"
"    has_many :members, :class_name => 'MyLDAP::User', :wrap => 'memberUid'\n"
"    has_many :primary_members, :class_name => 'MyLDAP::User', :foreign_key => "
"'gidNumber', :primary_key => 'gidNumber'\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:894
msgid "Now in your local applications, you can call"
msgstr "こうすれば、あなたのアプリケーションでは以下のように呼び出すことができます。"

#: ../../doc/text/tutorial.textile:896
#, fuzzy
msgid "h4. Dynamic attribute crawling"
msgstr "動的な属性のクローリング"

#: ../../doc/text/tutorial.textile:896
msgid ""
"<pre>\n"
"require 'myldap'"
msgstr ""

#: ../../doc/text/tutorial.textile:898
#, fuzzy
msgid ""
"If you use tab completion in irb, you'll notice that you /can/ tab complete th"
"e dynamic\n"
"attribute methods. You can still see which methods are for attributes using\n"
"Base#attribute_names:"
msgstr ""
"IRBでタブ補完機能を有効にしている場合、属性アクセサメソッドをタブ補完で呼び出すことができます。また、Base#attribute_names メソッドを"
"利用すれば属性アクセサメソッドの一覧を得ることが可能です。"

#: ../../doc/text/tutorial.textile:899
msgid ""
"MyLDAP::Group.new('foo')\n"
"...\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:903
msgid "and everything should work well."
msgstr "すべてのクラスは正しく動作するでしょう。"

#: ../../doc/text/tutorial.textile:910
#, fuzzy
msgid "h4. Juggling multiple LDAP connections"
msgstr "複数の <placeholder-1/> 接続の切り替え"

#: ../../doc/text/tutorial.textile:912
#, fuzzy
msgid ""
"In the same vein as the last tip, you can use multiple LDAP connections by\n"
"per class as follows:"
msgstr "最後に、クラスごとに別々の <placeholder-1/> コネクションを利用するには、以下のようにしてください。"

#: ../../doc/text/tutorial.textile:913
msgid ""
"<pre>\n"
"irb> user = User.new('drewry')\n"
"=> ...\n"
"irb> user.cn(true)\n"
"=> [\"Will Drewry\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:926
msgid ""
"<pre>\n"
"irb> d = Group.new('develop')\n"
"=> ...\n"
"irb> d.attribute_names\n"
"=> [\"gidNumber\", \"cn\", \"memberUid\", \"commonName\", \"description\", \"userPassword"
"\", \"objectClass\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:930
#, fuzzy
msgid ""
"If you have the Ruby/LDAP package with the SASL/GSSAPI patch from Ian\n"
"MacDonald's web site, you can use Kerberos to bind to your LDAP server. By\n"
"default, :try_sasl is false."
msgstr ":try_sasl を利用することによって <placeholder-4/> サーバとのバインドに Kerberos を利用することができます。"

#: ../../doc/text/tutorial.textile:934
#, fuzzy
msgid ""
"Also note that you must be using OpenLDAP 2.1.29 or higher to use SASL/GSSAPI\n"
"due to some bugs in older versions of OpenLDAP."
msgstr "またこの場合、OpenLDAP 2.1.29 かそれ以上が必要です。それ以前のバージョンには多数のバグが残っています。"

#: ../../doc/text/tutorial.textile:937
#, fuzzy
msgid "h4. Don't be afraid! [Internals]"
msgstr "こわがらないでください！"

#: ../../doc/text/tutorial.textile:939
msgid ""
"<pre>\n"
"irb> anon_class = Class.new(Base)\n"
"=> ...\n"
"irb> anon_class.setup_connection\n"
"=> ...\n"
"irb> auth_class = Class.new(Base)\n"
"=> ...\n"
"irb> auth_class.setup_connection(:password_block => lambda{'mypass'})\n"
"=> ...\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:939
#, fuzzy
msgid ""
"Don't be afraid to add more methods to the extensions classes and to\n"
"experiment. That's exactly how I ended up with this package. If you come up\n"
"with something cool, please share it!"
msgstr ""
"更にメソッドを追加することや、拡張クラスを定義することや、実験することを恐れないでください。私にとってこのパッケージの作成は一区切りつきましたが、もしクール"
"な何かをあなたが見つけたなら、それを共有させてください！"

#: ../../doc/text/tutorial.textile:943
#, fuzzy
msgid ""
"The internal structure of ActiveLdap::Base, and thus all its subclasses, is\n"
"still in flux. I've tried to minimize the changes to the overall API, but\n"
"the internals are still rough around the edges."
msgstr ""
"ActiveLdap::Base やそのサブクラスの構造は、まだ不安定です。外側の API については最小の変化で済ませてきましたが、内部についてはまだ荒削"
"りです。"

#: ../../doc/text/tutorial.textile:947
#, fuzzy
msgid "h5. Where's ldap_mapping data stored? How can I get to it?"
msgstr "ldap_mapping データはどこに保存されていますか？ それらはどうやって取得しますか？"

#: ../../doc/text/tutorial.textile:949
#, fuzzy
msgid ""
"When you call ldap_mapping, it overwrites several class methods inherited\n"
"from Base:\n"
"* Base.base()\n"
"* Base.required_classes()\n"
"* Base.dn_attribute()"
msgstr "ldap_mapping をコールしたとき、ActiveLdap::Base のいくつかのクラスメソッドがオーバーライドされます。以下のメソッドです。"

#: ../../doc/text/tutorial.textile:950
msgid "This can be useful for doing authentication tests and other such tricks."
msgstr "これは認証のテストなどに有効です。"

#: ../../doc/text/tutorial.textile:952
msgid "h4. :try_sasl"
msgstr ""

#: ../../doc/text/tutorial.textile:955
#, fuzzy
msgid ""
"You can access these from custom class methods by calling MyClass.base(),\n"
"or whatever. There are predefined instance methods for getting to these\n"
"from any new instance methods you define:\n"
"* Base#base()\n"
"* Base#required_classes()\n"
"* Base#dn_attribute()"
msgstr ""
"これらのクラスメソッドに MyClass.base() のようにアクセスすることができます。インスタンスからもこれらの情報を知るために、拡張クラスのインスタ"
"ンスメソッドに以下のような定義済みメソッドが用意されています。"

#: ../../doc/text/tutorial.textile:962
#, fuzzy
msgid "h5. What else?"
msgstr "その他の話題"

#: ../../doc/text/tutorial.textile:964
#, fuzzy
msgid ""
"Well if you want to use the LDAP connection for anything, I'd suggest still\n"
"calling Base.connection to get it. There really aren't many other internals\n"
"that need to be worried about.  You could get the LDAP schema with\n"
"Base.schema."
msgstr ""
"もしあなたが何らかの理由で <placeholder-1/> コネクションを扱いたいなら、それを取得するためにActiveLdap::Base.connec"
"tion メソッドをコールすることを今のところ提案します。他の内部機構で接続を扱うものは少ないです。スキーマの情報についてはActiveLdap::Base"
".schema メソッドにより取得できます。"

#: ../../doc/text/tutorial.textile:969
#, fuzzy
msgid ""
"The only other useful tricks are dereferencing and accessing the stored\n"
"data. Since LDAP attributes can have multiple names, e.g. cn or commonName,\n"
"any methods you write might need to figure it out. I'd suggest just\n"
"calling self[attribname] to get the value, but if that's not good enough,\n"
"you can call look up the stored name by #to_real_attribute_name as follows:"
msgstr ""
"残りの便利な機能は、格納されたデータをいろんな名前でアクセスできることです。<placeholder-1/>属性はcn / commonName のように複"
"数の名前を持つことができるるので、どの名前でも同じ値にアクセスすることになります。値を取得するときは self['どれかの属性名'] とすることをオススメし"
"ます。もし、これだけでは十分ではない場合は、本当の属性名を得るためにto_real_attribute_name プライベートメソッドを利用することができま"
"す。"

#: ../../doc/text/tutorial.textile:982
#, fuzzy
msgid ""
"This tells you the name the attribute is stored in behind the scenes (@data).\n"
"Again, self[attribname] should be enough for most extensions, but if not,\n"
"it's probably safe to dabble here."
msgstr ""
"このメソッドは背後（@data）で属性データが格納されている名前をあなたに教えます。再び、self[属性名] はほとんどの拡張に対して十分でなくてはなりませ"
"んが、そうでなくても、たぶんここでは問題にならないでしょう。"

#: ../../doc/text/tutorial.textile:986
#, fuzzy
msgid ""
"Also, if you like to look up all aliases for an attribute, you can call the\n"
"following:"
msgstr "また例えば、ユーザクラスの属性名のエイリアスを見つけるためには以下のようにするとよいでしょう。"

#: ../../doc/text/tutorial.textile:994
#, fuzzy
msgid "This is discovered automagically from the LDAP server's schema."
msgstr "これは<placeholder-1/> サーバのスキーマから自動的に発見します。"

#: ../../doc/text/tutorial.textile:996
#, fuzzy
msgid "h2. Limitations"
msgstr "制限"

#: ../../doc/text/tutorial.textile:998
#, fuzzy
msgid "h3. Speed"
msgstr "実行速度"

#: ../../doc/text/tutorial.textile:999
msgid ""
"<pre>\n"
"irb> User.find(:first).instance_eval do\n"
"irb>   to_real_attribute_name('commonName')\n"
"irb> end\n"
"=> 'cn'\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:1000
#, fuzzy
msgid ""
"Currently, ActiveLdap could be faster.  I have some recursive type\n"
"checking going on which slows object creation down, and I'm sure there\n"
"are many, many other places optimizations can be done.  Feel free\n"
"to send patches, or just hang in there until I can optimize away the\n"
"slowness."
msgstr ""
"今のところ、ActiveLdap はまだ高速にできます。いくつかの再帰的な型チェックをオブジェクト作成時に行っており、それらがオブジェクトの生成速度を落とし"
"ています。また、他のところでも多数の最適化が可能であることも認識しています。最適化できていない部分については私が最適化できるようになるまで我慢してもらうか、"
"または気軽にパッチを送ってください。"

#: ../../doc/text/tutorial.textile:1006
#, fuzzy
msgid "h2. Feedback"
msgstr "フィードバック"

#: ../../doc/text/tutorial.textile:1008
#, fuzzy
msgid ""
"Any and all feedback and patches are welcome. I am very excited about this\n"
"package, and I'd like to see it prove helpful to more people than just myself."
msgstr ""
"どんなものでも、またすべてのフィードバックやパッチを歓迎します。私はこのパッケージについて興奮しています。また、私以上に、人々の助けになることを見たいと思っ"
"ています。"

#: ../../doc/text/tutorial.textile:1013
msgid ""
"<pre>\n"
"irb> User.schema.attribute_type 'cn', 'NAME'\n"
"=> [\"cn\", \"commonName\"]\n"
"</pre>"
msgstr ""

#: ../../lib/active_ldap/acts/tree.rb:20
msgid "Returns list of ancestors, starting from parent until root."
msgstr ""

# ActiveLdap::Acts::Tree#ancestors
#: ../../lib/active_ldap/acts/tree.rb:22
msgid "  subchild1.ancestors # => [child1, root]"
msgstr ""

#: ../../lib/active_ldap/acts/tree.rb:29
msgid "Returns the root node of the tree."
msgstr ""

#: ../../lib/active_ldap/acts/tree.rb:36
msgid "Returns all siblings of the current node."
msgstr ""

# ActiveLdap::Acts::Tree#siblings
#: ../../lib/active_ldap/acts/tree.rb:38
msgid "  subchild1.siblings # => [subchild2]"
msgstr ""

#: ../../lib/active_ldap/acts/tree.rb:43
msgid "Returns all siblings and a reference to the current node."
msgstr ""

# ActiveLdap::Acts::Tree#self_and_siblings
#: ../../lib/active_ldap/acts/tree.rb:45
msgid "  subchild1.self_and_siblings # => [subchild1, subchild2]"
msgstr ""

# @return [Base]
#: ../../lib/active_ldap/adapter/base.rb:23 ../../lib/active_ldap/base.rb:671
msgid "a new instance of Base"
msgstr ""

#: ../../lib/active_ldap/adapter/base.rb:23
msgid "Returns the value of attribute runtime"
msgstr ""

# ActiveLdap::Adapter::Base#reconnect
#: ../../lib/active_ldap/adapter/base.rb:567
msgid ""
"Attempts to reconnect up to the number of times allowed\n"
"If forced, try once then fail with ConnectionError if not connected."
msgstr ""

# ActiveLdap::Adapter::Base#can_reconnect?
#: ../../lib/active_ldap/adapter/base.rb:618
msgid ""
"Determine if we have exceed the retry limit or not.\n"
"True is reconnecting is allowed - False if not."
msgstr ""

#: ../../lib/active_ldap/adapter/jndi_connection.rb:50
msgid "Returns the value of attribute values"
msgstr ""

#: ../../lib/active_ldap/adapter/jndi_connection.rb:50
#: ../../lib/active_ldap/base.rb:254 ../../lib/active_ldap/schema.rb:288
msgid "Returns the value of attribute name"
msgstr ""

# @return [ModifyRecord]
#: ../../lib/active_ldap/adapter/jndi_connection.rb:50
#: ../../lib/active_ldap/ldif.rb:838
msgid "a new instance of ModifyRecord"
msgstr ""

#: ../../lib/active_ldap/adapter/jndi_connection.rb:50
#: ../../lib/active_ldap/ldif.rb:718 ../../lib/active_ldap/ldif.rb:872
msgid "Returns the value of attribute type"
msgstr ""

# @return [JndiConnection]
#: ../../lib/active_ldap/adapter/jndi_connection.rb:76
msgid "a new instance of JndiConnection"
msgstr ""

# @return [Mod]
#: ../../lib/active_ldap/adapter/ldap_ext.rb:19
msgid "a new instance of Mod"
msgstr ""

# @return [Entry]
#: ../../lib/active_ldap/adapter/net_ldap_ext.rb:7
#: ../../lib/active_ldap/schema.rb:288
msgid "a new instance of Entry"
msgstr ""

# @return [Proxy]
#: ../../lib/active_ldap/association/proxy.rb:8
msgid "a new instance of Proxy"
msgstr ""

#: ../../lib/active_ldap/associations.rb:8
msgid "Associations"
msgstr ""

# ActiveLdap::Associations
#: ../../lib/active_ldap/associations.rb:10
msgid ""
"Associations provides the class methods needed for\n"
"the extension classes to create methods using\n"
"belongs_to and has_many"
msgstr ""

#: ../../lib/active_ldap/associations.rb:31
msgid "belongs_to"
msgstr ""

# ActiveLdap::Associations::ClassMethods#belongs_to
#: ../../lib/active_ldap/associations.rb:33
msgid ""
"This defines a method for an extension class map its DN key\n"
"attribute value on to multiple items which reference it by\n"
"|:foreign_key| in the other LDAP entry covered by class\n"
"|:class_name|."
msgstr ""

# ActiveLdap::Associations::ClassMethods#belongs_to
#: ../../lib/active_ldap/associations.rb:38
msgid ""
"Example:\n"
" belongs_to :groups, :class_name => \"Group\",\n"
"            :many => \"memberUid\" # Group#memberUid\n"
"            # :primary_key => \"uid\" # User#uid\n"
"            ## deprecated since 1.1.0. Use :primary_key instead.\n"
"            ## :foreign_key => \"uid\" # User#uid\n"
"            # dn attribute value is used by default\n"
" belongs_to :primary_group, :class_name => \"Group\",\n"
"            :foreign_key => \"gidNumber\", # User#gidNumber\n"
"            :primary_key => \"gidNumber\"  # Group#gidNumber"
msgstr ""

#: ../../lib/active_ldap/associations.rb:96
msgid "has_many"
msgstr ""

# ActiveLdap::Associations::ClassMethods#has_many
#: ../../lib/active_ldap/associations.rb:98
msgid ""
"This defines a method for an extension class expand an\n"
"existing multi-element attribute into ActiveLdap objects.\n"
"This discards any calls which result in entries that\n"
"don't exist in LDAP!"
msgstr ""

# ActiveLdap::Associations::ClassMethods#has_many
#: ../../lib/active_ldap/associations.rb:103
msgid ""
"Example:\n"
"  has_many :primary_members, :class_name => \"User\",\n"
"           :primary_key => \"gidNumber\", # Group#gidNumber\n"
"           :foreign_key => \"gidNumber\"  # User#gidNumber\n"
"           ## deprecated since 1.1.0. Those options\n"
"           ## are inverted.\n"
"           # :primary_key => \"gidNumber\", # User#gidNumber\n"
"           # :foreign_key => \"gidNumber\"  # Group#gidNumber\n"
"  has_many :members, :class_name => \"User\",\n"
"           :wrap => \"memberUid\" # Group#memberUid"
msgstr ""

# ActiveLdap::AttributeMethods#attribute_method?
#: ../../lib/active_ldap/attribute_methods.rb:19
msgid "overiding ActiveModel::AttributeMethods"
msgstr ""

# ActiveLdap::AttributeMethods::Dirty#save
#: ../../lib/active_ldap/attribute_methods/dirty.rb:9
msgid "Attempts to +save+ the record and clears changed attributes if successful."
msgstr ""

# ActiveLdap::AttributeMethods::Dirty#save!
#: ../../lib/active_ldap/attribute_methods/dirty.rb:19
msgid ""
"Attempts to <tt>save!</tt> the record and clears changed attributes if success"
"ful."
msgstr ""

# ActiveLdap::AttributeMethods::Dirty#reload
#: ../../lib/active_ldap/attribute_methods/dirty.rb:27
msgid "<tt>reload</tt> the record and clears changed attributes."
msgstr ""

#: ../../lib/active_ldap/attribute_methods/read.rb:12
msgid "get_attribute"
msgstr ""

# ActiveLdap::AttributeMethods::Read#get_attribute
#: ../../lib/active_ldap/attribute_methods/read.rb:14
msgid "Return the value of the attribute called by method_missing?"
msgstr ""

#: ../../lib/active_ldap/attribute_methods/write.rb:16
msgid "set_attribute"
msgstr ""

# ActiveLdap::AttributeMethods::Write#set_attribute
#: ../../lib/active_ldap/attribute_methods/write.rb:18
msgid "Set the value of the attribute called by method_missing?"
msgstr ""

# ActiveLdap::Attributes::Normalizable#normalize_attribute
#: ../../lib/active_ldap/attributes.rb:67
msgid ""
"Enforce typing:\n"
"Hashes are for subtypes\n"
"Arrays are for multiple entries"
msgstr ""

#: ../../lib/active_ldap/attributes.rb:110
msgid "normalize_attribute_options"
msgstr ""

# ActiveLdap::Attributes::Normalizable#normalize_attribute_options
#: ../../lib/active_ldap/attributes.rb:112
msgid ""
"Makes the Hashized value from the full attribute name\n"
"e.g. userCertificate;binary => \"some_bin\"\n"
"     becomes userCertificate => {\"binary\" => \"some_bin\"}"
msgstr ""

#: ../../lib/active_ldap/attributes.rb:123
msgid "unnormalize_attribute_options"
msgstr ""

# ActiveLdap::Attributes::Normalizable#unnormalize_attribute_options
#: ../../lib/active_ldap/attributes.rb:125
msgid ""
"Unnormalizes all of the subtypes from a given set of nested hashes\n"
"and returns the attribute suffix and the final true value"
msgstr ""

#: ../../lib/active_ldap/base.rb:71
msgid "ConfigurationError"
msgstr ""

#: ../../lib/active_ldap/base.rb:73
msgid "An exception raised when there is a problem with Base.connect arguments"
msgstr ""

#: ../../lib/active_ldap/base.rb:77
msgid "DeleteError"
msgstr ""

#: ../../lib/active_ldap/base.rb:79
msgid "An exception raised when an ActiveLdap delete action fails"
msgstr ""

#: ../../lib/active_ldap/base.rb:83
msgid "SaveError"
msgstr ""

#: ../../lib/active_ldap/base.rb:85
msgid "An exception raised when an ActiveLdap save action failes"
msgstr ""

#: ../../lib/active_ldap/base.rb:89
msgid "AuthenticationError"
msgstr ""

#: ../../lib/active_ldap/base.rb:91
msgid "An exception raised when user authentication fails"
msgstr ""

#: ../../lib/active_ldap/base.rb:95
msgid "ConnectionError"
msgstr ""

#: ../../lib/active_ldap/base.rb:97
msgid "An exception raised when the LDAP conenction fails"
msgstr ""

#: ../../lib/active_ldap/base.rb:101
msgid "ObjectClassError"
msgstr ""

#: ../../lib/active_ldap/base.rb:103
msgid "An exception raised when an objectClass is not defined in the schema"
msgstr ""

#: ../../lib/active_ldap/base.rb:107
msgid "AttributeAssignmentError"
msgstr ""

# ActiveLdap::AttributeAssignmentError
#: ../../lib/active_ldap/base.rb:109
msgid ""
"An exception raised when there is an issue assigning a value to\n"
"an attribute"
msgstr ""

#: ../../lib/active_ldap/base.rb:114
msgid "TimeoutError"
msgstr ""

#: ../../lib/active_ldap/base.rb:116
msgid "An exception raised when a connection action fails due to a timeout"
msgstr ""

# @return [DistinguishedNameInputInvalid]
#: ../../lib/active_ldap/base.rb:130
msgid "a new instance of DistinguishedNameInputInvalid"
msgstr ""

#: ../../lib/active_ldap/base.rb:130
msgid "Returns the value of attribute input"
msgstr ""

#: ../../lib/active_ldap/base.rb:138
#: ../../lib/active_ldap/distinguished_name.rb:11
#: ../../lib/active_ldap/ldif.rb:632
msgid "Returns the value of attribute dn"
msgstr ""

#: ../../lib/active_ldap/base.rb:138 ../../lib/active_ldap/base.rb:155
msgid "Returns the value of attribute reason"
msgstr ""

# @return [DistinguishedNameInvalid]
#: ../../lib/active_ldap/base.rb:138
msgid "a new instance of DistinguishedNameInvalid"
msgstr ""

#: ../../lib/active_ldap/base.rb:155 ../../lib/active_ldap/ldif.rb:96
msgid "Returns the value of attribute ldif"
msgstr ""

# @return [LdifInvalid]
#: ../../lib/active_ldap/base.rb:155
msgid "a new instance of LdifInvalid"
msgstr ""

#: ../../lib/active_ldap/base.rb:155
msgid "Returns the value of attribute column"
msgstr ""

#: ../../lib/active_ldap/base.rb:155
msgid "Returns the value of attribute nearest"
msgstr ""

#: ../../lib/active_ldap/base.rb:155
msgid "Returns the value of attribute line"
msgstr ""

# @return [EntryInvalid]
#: ../../lib/active_ldap/base.rb:228
msgid "a new instance of EntryInvalid"
msgstr ""

#: ../../lib/active_ldap/base.rb:228
msgid "Returns the value of attribute entry"
msgstr ""

#: ../../lib/active_ldap/base.rb:246
msgid "Returns the value of attribute adapter"
msgstr ""

# @return [AdapterNotFound]
#: ../../lib/active_ldap/base.rb:246
msgid "a new instance of AdapterNotFound"
msgstr ""

# @return [UnknownAttribute]
#: ../../lib/active_ldap/base.rb:254
msgid "a new instance of UnknownAttribute"
msgstr ""

# @return [AttributeValueInvalid]
#: ../../lib/active_ldap/base.rb:262
msgid "a new instance of AttributeValueInvalid"
msgstr ""

#: ../../lib/active_ldap/base.rb:262 ../../lib/active_ldap/ldif.rb:718
msgid "Returns the value of attribute value"
msgstr ""

#: ../../lib/active_ldap/base.rb:262 ../../lib/active_ldap/ldif.rb:872
msgid "Returns the value of attribute attribute"
msgstr ""

# @return [NotImplemented]
#: ../../lib/active_ldap/base.rb:271
msgid "a new instance of NotImplemented"
msgstr ""

#: ../../lib/active_ldap/base.rb:271
msgid "Returns the value of attribute target"
msgstr ""

#: ../../lib/active_ldap/base.rb:278
msgid "Base"
msgstr ""

# ActiveLdap::Base
#: ../../lib/active_ldap/base.rb:280
msgid ""
"Base is the primary class which contains all of the core\n"
"ActiveLdap functionality. It is meant to only ever be subclassed\n"
"by extension classes."
msgstr ""

# ActiveLdap::Base.setup_connection
#: ../../lib/active_ldap/base.rb:349
msgid ""
"Set LDAP connection configuration up. It doesn't connect\n"
"and bind to LDAP server. A connection to LDAP server is\n"
"created when it's needed."
msgstr ""

# ActiveLdap::Base.setup_connection
#: ../../lib/active_ldap/base.rb:353
msgid ""
"== +config+\n"
"+config+ must be a hash that may contain any of the following fields:\n"
":password_block, :logger, :host, :port, :base, :bind_dn,\n"
":try_sasl, :allow_anonymous\n"
":bind_dn specifies the DN to bind with.\n"
":password_block specifies a Proc object that will yield a String to\n"
"  be used as the password when called.\n"
":logger specifies a logger object (Logger, Log4r::Logger and s on)\n"
":host sets the LDAP server hostname\n"
":port sets the LDAP server port\n"
":base overwrites Base.base - this affects EVERYTHING\n"
":try_sasl indicates that a SASL bind should be attempted when binding\n"
"  to the server (default: false)\n"
":sasl_mechanisms is an array of SASL mechanism to try\n"
"  (default: [\"GSSAPI\", \"CRAM-MD5\", \"EXTERNAL\"])\n"
":allow_anonymous indicates that a true anonymous bind is allowed when\n"
"  trying to bind to the server (default: true)\n"
":retries - indicates the number of attempts to reconnect that will be\n"
"  undertaken when a stale connection occurs. -1 means infinite.\n"
":sasl_quiet - if true, sets @sasl_quiet on the Ruby/LDAP connection\n"
":method - whether to use :ssl, :tls, or :plain (unencrypted)\n"
":retry_wait - seconds to wait before retrying a connection\n"
":scope - dictates how to find objects. ONELEVEL by default to\n"
"  avoid dn_attr collisions across OUs. Think before changing.\n"
":timeout - time in seconds - defaults to disabled. This CAN interrupt\n"
"  search() requests. Be warned.\n"
":retry_on_timeout - whether to reconnect when timeouts occur. Defaults\n"
"  to true\n"
"See lib/active_ldap/configuration.rb for defaults for each option"
msgstr ""

# ActiveLdap::Base.establish_connection
#: ../../lib/active_ldap/base.rb:388
msgid ""
"establish_connection is deprecated since 1.1.0. Please use\n"
"setup_connection() instead."
msgstr ""

# ActiveLdap::Base.ldap_mapping
#: ../../lib/active_ldap/base.rb:409
msgid ""
"This class function is used to setup all mappings between the subclass\n"
"and ldap for use in activeldap"
msgstr ""

# ActiveLdap::Base.ldap_mapping
#: ../../lib/active_ldap/base.rb:412
msgid ""
"Example:\n"
"  ldap_mapping :dn_attribute => 'uid', :prefix => 'ou=People',\n"
"               :classes => ['top', 'posixAccount'],\n"
"               :scope => :sub"
msgstr ""

#: ../../lib/active_ldap/base.rb:433 ../../lib/active_ldap/base.rb:446
msgid "Base.base"
msgstr ""

# ActiveLdap::Base.base
# ActiveLdap::Base.parsed_base
#: ../../lib/active_ldap/base.rb:435 ../../lib/active_ldap/base.rb:448
msgid ""
"This method when included into Base provides\n"
"an inheritable, overwritable configuration setting"
msgstr ""

# ActiveLdap::Base.base
#: ../../lib/active_ldap/base.rb:438
msgid ""
"This should be a string with the base of the\n"
"ldap server such as 'dc=example,dc=com', and\n"
"it should be overwritten by including\n"
"configuration.rb into this class.\n"
"When subclassing, the specified prefix will be concatenated."
msgstr ""

# ActiveLdap::Base.parsed_base
#: ../../lib/active_ldap/base.rb:451
msgid ""
"This should be a string with the base of the\n"
"ldap server such as 'dc=example,dc=com', and\n"
"it should be overwritten by including\n"
"configuration.rb into this class.\n"
"When subclassing, the specified prefix will be concatenated.\n"
"for backward compatibility"
msgstr ""

# @param
#: ../../lib/active_ldap/base.rb:514
msgid "tag|param|value"
msgstr ""

# @param value
#: ../../lib/active_ldap/base.rb:514
msgid "the value to set the attribute abstract_class to."
msgstr ""

# ActiveLdap::Base.abstract_class=
#: ../../lib/active_ldap/base.rb:515
msgid "Sets the attribute abstract_class"
msgstr ""

#: ../../lib/active_ldap/base.rb:515
msgid "Returns the value of attribute abstract_class"
msgstr ""

#: ../../lib/active_ldap/base.rb:667
msgid "new"
msgstr ""

# ActiveLdap::Base#initialize
#: ../../lib/active_ldap/base.rb:669
msgid ""
"Creates a new instance of Base initializing all class and all\n"
"initialization.  Defines local defaults. See examples If multiple values\n"
"exist for dn_attribute, the first one put here will be authoritative"
msgstr ""

# @yieldparam [ActiveLdap::Base]
#: ../../lib/active_ldap/base.rb:671 ../../lib/active_ldap/base.rb:1069
msgid "tag|yieldparam|_self"
msgstr ""

#: ../../lib/active_ldap/base.rb:671 ../../lib/active_ldap/base.rb:1069
msgid "the object that the method was called on"
msgstr ""

# ActiveLdap::Base#==
#: ../../lib/active_ldap/base.rb:696
msgid ""
"Returns true if the +comparison_object+ is the same object, or is of\n"
"the same type and has the same dn."
msgstr ""

# ActiveLdap::Base#eql?
#: ../../lib/active_ldap/base.rb:705
msgid "Delegates to =="
msgstr ""

# ActiveLdap::Base#hash
#: ../../lib/active_ldap/base.rb:710
msgid ""
"Delegates to id in order to allow two records of the same type and id\n"
"to work with something like:\n"
"  [ User.find(\"a\"), User.find(\"b\"), User.find(\"c\") ] &\n"
"    [ User.find(\"a\"), User.find(\"d\") ] # => [ User.find(\"a\") ]"
msgstr ""

#: ../../lib/active_ldap/base.rb:736
msgid "attributes"
msgstr ""

# ActiveLdap::Base#attribute_names
#: ../../lib/active_ldap/base.rb:738
msgid ""
"Return attribute methods so that a program can determine available\n"
"attributes dynamically without schema awareness"
msgstr ""

#: ../../lib/active_ldap/base.rb:749 ../../lib/active_ldap/base.rb:755
msgid "exist?"
msgstr ""

# ActiveLdap::Base#exist?
# ActiveLdap::Base#exists?
#: ../../lib/active_ldap/base.rb:751 ../../lib/active_ldap/base.rb:757
msgid "Return whether the entry exists in LDAP or not"
msgstr ""

#: ../../lib/active_ldap/base.rb:757
msgid "dn"
msgstr ""

# ActiveLdap::Base#dn
#: ../../lib/active_ldap/base.rb:759
msgid "Return the authoritative dn"
msgstr ""

# ActiveLdap::Base#to_key
#: ../../lib/active_ldap/base.rb:772
msgid ""
"Returns this entity’s dn wrapped in an Array or nil if the entity' s dn is not"
" set."
msgstr ""

# ActiveLdap::Base#update_attribute
#: ../../lib/active_ldap/base.rb:795
msgid "Updates a given attribute and saves immediately"
msgstr ""

# ActiveLdap::Base#update_attributes
#: ../../lib/active_ldap/base.rb:801
msgid ""
"This performs a bulk update of attributes and immediately\n"
"calls #save."
msgstr ""

# ActiveLdap::Base#attributes
#: ../../lib/active_ldap/base.rb:813
msgid ""
"This returns the key value pairs in @data with all values\n"
"cloned"
msgstr ""

# ActiveLdap::Base#attributes=
#: ../../lib/active_ldap/base.rb:820
msgid ""
"This allows a bulk update to the attributes of a record\n"
"without forcing an immediate save or validation."
msgstr ""

# ActiveLdap::Base#attributes=
#: ../../lib/active_ldap/base.rb:823
msgid ""
"It is unwise to attempt objectClass updates this way.\n"
"Also be sure to only pass in key-value pairs of your choosing.\n"
"Do not let URL/form hackers supply the keys."
msgstr ""

# ActiveLdap::Base#enforce_type
#: ../../lib/active_ldap/base.rb:1130
msgid "enforce_type"
msgstr ""

# ActiveLdap::Base#enforce_type
#: ../../lib/active_ldap/base.rb:1132
msgid ""
"enforce_type applies your changes without attempting to write to LDAP.\n"
"This means that if you set userCertificate to somebinary value, it will\n"
"wrap it up correctly."
msgstr ""

# ActiveLdap::Base#array_of
#: ../../lib/active_ldap/base.rb:1280
msgid "array_of"
msgstr ""

# ActiveLdap::Base#array_of
#: ../../lib/active_ldap/base.rb:1282
msgid ""
"Returns the array form of a value, or not an array if\n"
"false is passed in."
msgstr ""

#: ../../lib/active_ldap/callbacks.rb:46 ../../lib/active_ldap/callbacks.rb:50
#: ../../lib/active_ldap/callbacks.rb:56 ../../lib/active_ldap/callbacks.rb:60
#: ../../lib/active_ldap/callbacks.rb:64 ../../lib/active_ldap/connection.rb:26
#: ../../lib/active_ldap/railties/controller_runtime.rb:7
msgid ":nodoc:"
msgstr ""

#: ../../lib/active_ldap/configuration.rb:15
msgid "Configuration"
msgstr ""

# ActiveLdap::Configuration
#: ../../lib/active_ldap/configuration.rb:17
msgid ""
"Configuration provides the default settings required for\n"
"ActiveLdap to work with your LDAP server. All of these\n"
"settings can be passed in at initialization time."
msgstr ""

#: ../../lib/active_ldap/connection.rb:164
msgid "Return the schema object"
msgstr ""

# @return [Parser]
#: ../../lib/active_ldap/distinguished_name.rb:11
#: ../../lib/active_ldap/get_text/parser.rb:9 ../../lib/active_ldap/ldif.rb:96
msgid "a new instance of Parser"
msgstr ""

# @return [DistinguishedName]
#: ../../lib/active_ldap/distinguished_name.rb:171
msgid "a new instance of DistinguishedName"
msgstr ""

#: ../../lib/active_ldap/distinguished_name.rb:171
msgid "Returns the value of attribute rdns"
msgstr ""

# ActiveLdap::DistinguishedName#to_str
#: ../../lib/active_ldap/distinguished_name.rb:261
msgid "for backward compatibility"
msgstr ""

#: ../../lib/active_ldap/entry_attribute.rb:8
msgid "Returns the value of attribute may"
msgstr ""

#: ../../lib/active_ldap/entry_attribute.rb:8
msgid "Returns the value of attribute object_classes"
msgstr ""

# @return [EntryAttribute]
#: ../../lib/active_ldap/entry_attribute.rb:8
msgid "a new instance of EntryAttribute"
msgstr ""

#: ../../lib/active_ldap/entry_attribute.rb:8
msgid "Returns the value of attribute schemata"
msgstr ""

#: ../../lib/active_ldap/entry_attribute.rb:8
msgid "Returns the value of attribute must"
msgstr ""

#: ../../lib/active_ldap/entry_attribute.rb:68
msgid "register"
msgstr ""

# ActiveLdap::EntryAttribute#register
#: ../../lib/active_ldap/entry_attribute.rb:70
msgid ""
"Make a method entry for _every_ alias of a valid attribute and map it\n"
"onto the first attribute passed in."
msgstr ""

# @return [Scanner]
#: ../../lib/active_ldap/ldif.rb:501
msgid "a new instance of Scanner"
msgstr ""

# @return [Ldif]
#: ../../lib/active_ldap/ldif.rb:602
msgid "a new instance of Ldif"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:602
msgid "Returns the value of attribute records"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:602
msgid "Returns the value of attribute version"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:632 ../../lib/active_ldap/ldif.rb:872
msgid "Returns the value of attribute attributes"
msgstr ""

# @return [Record]
#: ../../lib/active_ldap/ldif.rb:632
msgid "a new instance of Record"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:669
msgid "Returns the value of attribute controls"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:669
msgid "Returns the value of attribute change_type"
msgstr ""

# @return [ChangeRecord]
#: ../../lib/active_ldap/ldif.rb:669
msgid "a new instance of ChangeRecord"
msgstr ""

# @return [Control]
#: ../../lib/active_ldap/ldif.rb:718
msgid "a new instance of Control"
msgstr ""

# @return [AddRecord]
#: ../../lib/active_ldap/ldif.rb:773
msgid "a new instance of AddRecord"
msgstr ""

# @return [DeleteRecord]
#: ../../lib/active_ldap/ldif.rb:779
msgid "a new instance of DeleteRecord"
msgstr ""

# @return [ModifyNameRecord]
#: ../../lib/active_ldap/ldif.rb:786
msgid "a new instance of ModifyNameRecord"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:786
msgid "Returns the value of attribute new_rdn"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:786
msgid "Returns the value of attribute new_superior"
msgstr ""

# @return [ModifyDNRecord]
#: ../../lib/active_ldap/ldif.rb:823
msgid "a new instance of ModifyDNRecord"
msgstr ""

# @return [ModifyRDNRecord]
#: ../../lib/active_ldap/ldif.rb:829
msgid "a new instance of ModifyRDNRecord"
msgstr ""

#: ../../lib/active_ldap/ldif.rb:838
msgid "Returns the value of attribute operations"
msgstr ""

# @return [Operation]
#: ../../lib/active_ldap/ldif.rb:872
msgid "a new instance of Operation"
msgstr ""

# ActiveLdap::Ldif::ModifyRecord::Operation#options
#: ../../lib/active_ldap/ldif.rb:872
msgid "Returns the value of attribute options"
msgstr ""

# @return [AddOperation]
#: ../../lib/active_ldap/ldif.rb:910
msgid "a new instance of AddOperation"
msgstr ""

# @return [DeleteOperation]
#: ../../lib/active_ldap/ldif.rb:916
msgid "a new instance of DeleteOperation"
msgstr ""

# @return [ReplaceOperation]
#: ../../lib/active_ldap/ldif.rb:922
msgid "a new instance of ReplaceOperation"
msgstr ""

# @return [LogSubscriber]
#: ../../lib/active_ldap/log_subscriber.rb:16
msgid "a new instance of LogSubscriber"
msgstr ""

#: ../../lib/active_ldap/operations.rb:220
msgid "find"
msgstr ""

# ActiveLdap::Operations::Find#find
#: ../../lib/active_ldap/operations.rb:222
msgid ""
"Finds the first match for value where |value| is the value of some\n"
"|field|, or the wildcard match. This is only useful for derived classes.\n"
"usage: Subclass.find(:all, :attribute => \"cn\", :value => \"some*val\")\n"
"       Subclass.find(:all, 'some*val')"
msgstr ""

# ActiveLdap::Operations::Find#first
#: ../../lib/active_ldap/operations.rb:244
msgid ""
"A convenience wrapper for <tt>find(:first,\n"
"*args)</tt>. You can pass in all the same arguments\n"
"to this method as you can to <tt>find(:first)</tt>."
msgstr ""

# ActiveLdap::Operations::Find#last
#: ../../lib/active_ldap/operations.rb:251
msgid ""
"A convenience wrapper for <tt>find(:last,\n"
"*args)</tt>. You can pass in all the same arguments\n"
"to this method as you can to <tt>find(:last)</tt>."
msgstr ""

# ActiveLdap::Operations::Find#all
#: ../../lib/active_ldap/operations.rb:258
msgid ""
"This is an alias for find(:all).  You can pass in\n"
"all the same arguments to this method as you can\n"
"to find(:all)"
msgstr ""

#: ../../lib/active_ldap/persistence.rb:4
msgid "new_entry?"
msgstr ""

#: ../../lib/active_ldap/persistence.rb:6
msgid "Return whether the entry is new entry in LDAP or not"
msgstr ""

#: ../../lib/active_ldap/persistence.rb:11
msgid "Return whether the entry is saved entry or not."
msgstr ""

#: ../../lib/active_ldap/persistence.rb:16
msgid "destroy"
msgstr ""

#: ../../lib/active_ldap/persistence.rb:18
msgid "Delete this entry from LDAP"
msgstr ""

#: ../../lib/active_ldap/persistence.rb:35
msgid "save"
msgstr ""

# ActiveLdap::Persistence#save
#: ../../lib/active_ldap/persistence.rb:37
msgid ""
"Save and validate this object into LDAP\n"
"either adding or replacing attributes\n"
"TODO: Relative DN support"
msgstr ""

# @return [Schema]
#: ../../lib/active_ldap/schema.rb:5
msgid "a new instance of Schema"
msgstr ""

#: ../../lib/active_ldap/schema.rb:32 ../../lib/active_ldap/schema.rb:45
msgid "fetch"
msgstr ""

# ActiveLdap::Schema#[]
# ActiveLdap::Schema#fetch
#: ../../lib/active_ldap/schema.rb:34 ../../lib/active_ldap/schema.rb:47
msgid ""
"This is just like LDAP::Schema#attribute except that it allows\n"
"look up in any of the given keys.\n"
"e.g.\n"
" fetch('attributeTypes', 'cn', 'DESC')\n"
" fetch('ldapSyntaxes', '1.3.6.1.4.1.1466.115.121.1.5', 'DESC')"
msgstr ""

# ActiveLdap::Schema::Entry#description
#: ../../lib/active_ldap/schema.rb:288
msgid "Returns the value of attribute description"
msgstr ""

# ActiveLdap::Schema::Entry#id
#: ../../lib/active_ldap/schema.rb:288
msgid "Returns the value of attribute id"
msgstr ""

# ActiveLdap::Schema::Entry#aliases
#: ../../lib/active_ldap/schema.rb:288
msgid "Returns the value of attribute aliases"
msgstr ""

# ActiveLdap::Schema::Syntax#length
#: ../../lib/active_ldap/schema.rb:318
msgid "Returns the value of attribute length"
msgstr ""

# @return [Syntax]
#: ../../lib/active_ldap/schema.rb:318
msgid "a new instance of Syntax"
msgstr ""

# ActiveLdap::Schema::Attribute#super_attribute
#: ../../lib/active_ldap/schema.rb:398
msgid "Returns the value of attribute super_attribute"
msgstr ""

# @return [Attribute]
#: ../../lib/active_ldap/schema.rb:398
msgid "a new instance of Attribute"
msgstr ""

# ActiveLdap::Schema::Attribute#read_only?
#: ../../lib/active_ldap/schema.rb:403
msgid "read_only?"
msgstr ""

# ActiveLdap::Schema::Attribute#read_only?
#: ../../lib/active_ldap/schema.rb:405
msgid ""
"Returns true if an attribute is read-only\n"
"NO-USER-MODIFICATION"
msgstr ""

#: ../../lib/active_ldap/schema.rb:411
msgid "single_value?"
msgstr ""

# ActiveLdap::Schema::Attribute#single_value?
#: ../../lib/active_ldap/schema.rb:413
msgid ""
"Returns true if an attribute can only have one\n"
"value defined\n"
"SINGLE-VALUE"
msgstr ""

#: ../../lib/active_ldap/schema.rb:420
msgid "binary?"
msgstr ""

# ActiveLdap::Schema::Attribute#binary?
#: ../../lib/active_ldap/schema.rb:422
msgid ""
"Returns true if the given attribute's syntax is binary syntax,\n"
"X-NOT-HUMAN-READABLE or X-BINARY-TRANSFER-REQUIRED"
msgstr ""

# ActiveLdap::Schema::Attribute#apply_encoding
#: ../../lib/active_ldap/schema.rb:428
msgid ""
"Sets binary encoding to value if the given attribute's syntax\n"
"is binary syntax. Does nothing otherwise."
msgstr ""

# ActiveLdap::Schema::Attribute#binary_required?
#: ../../lib/active_ldap/schema.rb:448
msgid "binary_required?"
msgstr ""

# ActiveLdap::Schema::Attribute#binary_required?
#: ../../lib/active_ldap/schema.rb:450
msgid "Returns true if the value MUST be transferred in binary"
msgstr ""

# ActiveLdap::Schema::Attribute#directory_operation?
#: ../../lib/active_ldap/schema.rb:455
msgid "directory_operation?"
msgstr ""

# ActiveLdap::Schema::Attribute#directory_operation?
#: ../../lib/active_ldap/schema.rb:457
msgid ""
"Returns true if an attribute is directory operation.\n"
"It means that USAGE contains directoryOperation."
msgstr ""

# ActiveLdap::Schema::ObjectClass#super_classes
#: ../../lib/active_ldap/schema.rb:648
msgid "Returns the value of attribute super_classes"
msgstr ""

# @return [ObjectClass]
#: ../../lib/active_ldap/schema.rb:648
msgid "a new instance of ObjectClass"
msgstr ""

#: ../../lib/active_ldap/timeout.rb:5 ../../lib/active_ldap/timeout_stub.rb:5
msgid "STUB"
msgstr ""

# ActiveLdap::Validations#validate_required_ldap_values
#: ../../lib/active_ldap/validations.rb:130
msgid "validate_required_ldap_values"
msgstr ""

# ActiveLdap::Validations#validate_required_ldap_values
#: ../../lib/active_ldap/validations.rb:132
msgid ""
"Basic validation:\n"
"- Verify that every 'MUST' specified in the schema has a value defined"
msgstr ""

# @return [Serializer]
#: ../../lib/active_ldap/xml.rb:11
msgid "a new instance of Serializer"
msgstr ""

# @return [Xml]
#: ../../lib/active_ldap/xml.rb:127
msgid "a new instance of Xml"
msgstr ""

#: ../../README.textile:48
#, fuzzy
#~ msgid "See \"Rails\":doc/text/rails.textile page for Rails integration."
#~ msgstr "Railsと一緒に使う方法は<placeholder-1/>ページを見てください。"

#~ msgid "File: news &mdash; ActiveLdap"
#~ msgstr "ファイル: お知らせ &mdash; ActiveLdap"
#~ msgid "Index"
#~ msgstr "索引"
#~ msgid "File: news"
#~ msgstr "ファイル: お知らせ"
#~ msgid "no frames"
#~ msgstr "フレーム無し"
#~ msgid "Class List"
#~ msgstr "クラス一覧"
#~ msgid "Method List"
#~ msgstr "メソッド一覧"
#~ msgid "File List"
#~ msgstr "ファイル一覧"
#~ msgid "News"
#~ msgstr "お知らせ"
#~ msgid "Supported entry creation by direct ActiveLdap::Base use. [Reported by Craig White]"
#~ msgstr "直接ActiveLdap::Baseを使ったエントリ作成をサポート。 [Craig Whiteさんが報告]"
#~ msgid "Started to use Travis CI."
#~ msgstr "Travis CIを使い始めた。"
#~ msgid "Thanks"
#~ msgstr "感謝"
#~ msgid "Craig White"
#~ msgstr "Craig Whiteさん"
#~ msgid "Fixed a bug that ActiveLdap::Base#delete doesn’t work. [Reported by Craig White]"
#~ msgstr "ActiveLdap::Base#deleteが動かない問題を修正。 [Craig Whiteさんが報告]"
#~ msgid "[GitHub:#39] Supported Rails 3.2.8. [Reported by Ben Langfeld]"
#~ msgstr "[GitHub:#39] 3.2.8対応 [Ben Langfeldさんが報告]"
#~ msgid "[GitHub:#13] Don’t use deprecated Gem.available?. [Patch by sailesh]"
#~ msgstr "[GitHub:#13] 非推奨のGem.available?を使わないようにした。 [saileshさんがパッチ提供]"
#~ msgid "[GitHub:#19] Supported new entry by <placeholder-1/>. [Patch by Alex Tomlins]"
#~ msgstr "[GitHub:#19] <placeholder-1/>で新しいエントリを追加できるようにした。 [Alex Tomlinsさんがパッチ提供]"
#~ msgid "Supported <placeholder-1/> option in <placeholder-2/> output."
#~ msgstr "<placeholder-2/>出力で<placeholder-1/>オプションを使えるようにした。"
#~ msgid "[GitHub:#14] Supported nil as single value. [Reported by n3llyb0y]"
#~ msgstr "[GitHub:#14] single valueな値にnilを使えるようにした。 [n3llyb0yさんが報告]"
#~ msgid "[GitHub:#20] Supported ActiveModel::MassAssignmentSecurity. [Reported by mihu]"
#~ msgstr "[GitHub:#20] ActiveModel::MassAssignmentSecurity対応。 [mihuさんが報告]"
#~ msgid "[GitHub:#24] Supported Ruby 1.9 style Hash syntax in generator. [Patch by ursm]"
#~ msgstr "[GitHub:#24] ジェネレーターでRuby 1.9スタイルのHashの構文を使えるようにした。 [ursmさんがパッチ提供]"
#~ msgid "[GitHub:#25][GitHub:#39] Supported ActiveModel::Dirty. [Patch by mihu][Reported by Ben Langfeld]"
#~ msgstr "[GitHub:#25][GitHub:#39] ActiveModel::Dirty対応。 [mihuさんがパッチ提供][Ben Langfeldさんが報告]"
#~ msgid "[GitHub:#26] Improved speed for dirty. [Patch by mihu]"
#~ msgstr "[GitHub:#26] dirtyを高速化した。 [mihuさんがパッチ提供]"
#~ msgid "[GitHub:#28] Improved speed for initialization. [Patch by mihu]"
#~ msgstr "[GitHub:#28] 初期化処理を高速化した。 [mihuさんがパッチ提供]"
#~ msgid "[GitHub:#29] Added .gemspec. [Suggested by mklappstuhl]"
#~ msgstr "[GitHub:#29] .gemspecを追加した。 [mklappstuhlさんが提案]"
#~ msgid "[GitHub:#34] Removed an unused method. [Patch by mihu]"
#~ msgstr "[GitHub:#34] 使っていないメソッドを削除した。 [mihuさんがパッチ提供]"
#~ msgid "[GitHub:#37] Improved will_paginate support. [Patch by Craig White]"
#~ msgstr "[GitHub:#37] will_paginateサポートを強化した。 [Craig Whiteさんがパッチ提供]"
#~ msgid "[GitHub:#40] Added missing test files to .gemspec. [Reported by Vít Ondruch]"
#~ msgstr "[GitHub:#40] .gemspecにテストファイルを追加した。 [Vít Ondruchさんが報告]"
#~ msgid "[GitHub:#41] Improved speed for find. [Patch by unixmechanic]"
#~ msgstr "[GitHub:#41] findを高速化した。 [unixmechanicさんがパッチ提供]"
#~ msgid "Changed i18n backend to gettext from fast_gettext again."
#~ msgstr "国際化のバックエンドをfast_gettextからgettextにした。"
#~ msgid "[GitHub:#42] Fixed a bug that optional second is required for GeneralizedTime. [Reported by masche842]"
#~ msgstr "[GitHub:#42] GeneralizedTimeで省略可能な秒の値を必須の値として扱っていた問題を修正した。 [masche842さんが報告]"
#~ msgid "sailesh"
#~ msgstr "saileshさん"
#~ msgid "Alex Tomlins"
#~ msgstr "Alex Tomlinsさん"
#~ msgid "n3llyb0y"
#~ msgstr "n3llyb0yさん"
#~ msgid "mihu"
#~ msgstr "mihuさん"
#~ msgid "ursm"
#~ msgstr "ursmさん"
#~ msgid "Ben Langfeld"
#~ msgstr "Ben Langfeldさん"
#~ msgid "mklappstuhl"
#~ msgstr "mklappstuhlさん"
#~ msgid "Vít Ondruch"
#~ msgstr "Vít Ondruchさん"
#~ msgid "unixmechanic"
#~ msgstr "unixmechanicさん"
#~ msgid "masche842"
#~ msgstr "masche842さん"
#~ msgid "Supported Rails 3.1.1."
#~ msgstr "Rails 3.1.1対応。"
#~ msgid "[GitHub:#9] Fixed a typo in document. [warden]"
#~ msgstr "[GitHub:#9] ドキュメント中の誤字を修正。 [wardenさん]"
#~ msgid "[GitHub:#11] Added persisted?. [bklier]"
#~ msgstr "[GitHub:#11] persisted?メソッドを追加。 [bklierさん]"
#~ msgid "[GitHub:#16] Supported 4 or more bytes salt for <placeholder-1/> and SMD5. [Alex Tomlins]"
#~ msgstr "[GitHub:#16] <placeholder-1/>とSMD5における4バイト以上のsaltに対応。 [Alex Tomlinsさん]"
#~ msgid "warden"
#~ msgstr "wardenさん"
#~ msgid "bklier"
#~ msgstr "bklierさん"
#~ msgid "Supported Rails 3.1.0.rc4. [Ryan Tandy, Narihiro Nakamura, Hidetoshi Yoshimoto]"
#~ msgstr "Rails 3.1.0.rc4対応。 [Ryan Tandy, Narihiro Nakamura, Hidetoshi Yoshimoto]"
#~ msgid "Removed ActiveRecord dependency and added ActiveModel dependency."
#~ msgstr "ActiveRecord依存をなくしてActiveModelに依存するようにした。"
#~ msgid "Used <placeholder-1/> instead of RDoc as documentation sysytem."
#~ msgstr "ドキュメントシステムとしてRDocの代わりに<placeholder-1/>を使うようにした。"
#~ msgid "File: development &mdash; ActiveLdap"
#~ msgstr "ファイル: 開発 &mdash; ActiveLdap"
#~ msgid "File: development"
#~ msgstr "ファイル: 開発"
#~ msgid "Development"
#~ msgstr "開発"
#~ msgid "Repository"
#~ msgstr "リポジトリ"
#~ msgid "git repository on GitHub"
#~ msgstr "GitHub上のgitリポジトリ"
#~ msgid "ActiveLdap uses <placeholder-1/>. Here is a list to get each source code."
#~ msgstr "ActiveLdapは<placeholder-1/>を利用しています。ソースコードは以下のように取得できます。"
#~ msgid "Issues"
#~ msgstr "不具合・要望"
#~ msgid "Issues on GitHub"
#~ msgstr "GitHub上のIssues"
#~ msgid "ActiveLdap uses <placeholder-1/> for issue tracking. Please submit a issue when you find an issue."
#~ msgstr "ActiveLdapは不具合・要望の管理に<placeholder-1/>を利用しています。もし、なにか気付いたことがあったらここに登録してください。"
#~ msgid "Rails 3 support"
#~ msgstr "Rails 3対応"
#~ msgid "must"
#~ msgstr "必ずやる"
#~ msgid "may"
#~ msgstr "やれるといいな"
#~ msgid "We support Warden."
#~ msgstr "Warden対応。"
#~ msgid "We support Devise"
#~ msgstr "Devise対応。"
#~ msgid "We support OmniAuth. (instead of Warden)"
#~ msgstr "（Wardenの代わりに）OmniAuth対応。"
#~ msgid "DONE"
#~ msgstr "完了"
#~ msgid "We don’t support Rails 3.0.×."
#~ msgstr "Rails 3.0.xは対応しない。"
#~ msgid "We provide active_ldap/railtie to initialize ActiveLdap."
#~ msgstr "ActiveLdapの初期化用にactive_ldap/railtieを作る。"
#~ msgid "We remove ActiveRecord dependency."
#~ msgstr "ActiveRecordの依存をなくす。"
#~ msgid "We depend on ActiveModel instead of ActiveRecord."
#~ msgstr "ActiveRecordの代わりにActiveModelを使う。"
#~ msgid "We target to Rails 3.1.0. (Yes, it’s not released yet but it will be released before we support Rails 3.×.)"
#~ msgstr "Rails 3.1.0をターゲットにする。（3.1.0はまだリリースされていないけど、ActiveLdapがRails 3に対応するまでにリリースされるだろうから。）"
#~ msgid "We update the documentation and ensure that the procedure for including ActiveLdap in a Rails 3 project is correct."
#~ msgstr "ドキュメントを更新して、Rails 3を使ったプロジェクトでActiveLdapを使う手順が正しく動くことを確認する。"
#~ msgid "Top Level Namespace &mdash; ActiveLdap"
#~ msgstr "トップレベルネームスペース &mdash; ActiveLdap"
#~ msgid "Top Level Namespace"
#~ msgstr "トップレベルネームスペース"
#~ msgid "Modules:"
#~ msgstr "モジュール:"
#~ msgid "Classes"
#~ msgstr "クラス一覧"
#~ msgid "Methods"
#~ msgstr "メソッド一覧"
#~ msgid "Files"
#~ msgstr "ファイル一覧"
#~ msgid "Search: <input type=\"text\"/>"
#~ msgstr "検索: <input type=\"text\"/>"
#~ msgid "File: README &mdash; ActiveLdap"
#~ msgstr "ファイル: はじめに &mdash; ActiveLdap"
#~ msgid "File: README"
#~ msgstr "ファイル: はじめに"
#~ msgid "A ruby library for object-oriented <placeholder-1/> interface."
#~ msgstr "Ruby用オブジェクト指向<placeholder-1/>インターフェイス。"
#~ msgid "Description"
#~ msgstr "説明"
#~ msgid "‘ActiveLdap’ is a ruby library which provides a clean objected oriented interface to <placeholder-1/> library. It was inspired by ActivRecord. This is not nearly as clean or as flexible as ActiveRecord, but it is still trivial to define new objects and manipulate them with minimal difficulty."
#~ msgstr "‘ActiveLdap’は<placeholder-1/>ライブラリをきれいなオブジェクト指向APIで利用するためのライブラリです。ActiveRecordにインスパイアされています。ActiveRecordほどきれいさや柔軟性がないかもしれませんが、ほとんど同じように新しいオブジェクトを作ったり操作したりできます。"
#~ msgid "document"
#~ msgstr "ドキュメント"
#~ msgid "For example and usage – read the <placeholder-1/>."
#~ msgstr "例と使い方は<placeholder-1/>を読んでください。"
#~ msgid "Prerequisites"
#~ msgstr "必要なもの"
#~ msgid "Ruby intepreter"
#~ msgstr "Rubyインタプリタ"
#~ msgid "One of them:"
#~ msgstr "以下のいずれか:"
#~ msgid "<placeholder-1/> (1.8.x or 1.9.x)"
#~ msgstr "<placeholder-1/> (1.8.xまたは1.9.X)"
#~ msgid "See the above links for installation."
#~ msgstr "インストール方法はリンク先を参照してください。"
#~ msgid "<placeholder-1/> client"
#~ msgstr "<placeholder-1/>クライアント"
#~ msgid "JRuby doesn’t need to install new library because JRuby has builtin <placeholder-1/> support. Ruby users need one of them:"
#~ msgstr "JRubyは組み込みで<placeholder-1/>をサポートしているので、ライブラリを追加インストールする必要はありません。Rubyを使う場合は以下のいずれかが必要です:"
#~ msgid "A toolkit for building modeling frameworks like Active Record and Active Resource."
#~ msgstr "Active RecordやActive Resoruceなどモデルフレームワークを作るためのツールキット。"
#~ msgid "Notes"
#~ msgstr "注意"
#~ msgid "Only <placeholder-1/> <placeholder-2/> support exists due to Ruby/<placeholder-3/> limitations"
#~ msgstr "Ruby/<placeholder-3/>の制限のため、<placeholder-1/> <placeholder-2/>のみサポートしています。"
#~ msgid "See <placeholder-1/> page for Rails integration."
#~ msgstr "Railsと一緒に使う方法は<placeholder-1/>ページを見てください。"
#~ msgid "Licence"
#~ msgstr "ライセンス"
#~ msgid "Please see the file <placeholder-1/> for the terms of the licence."
#~ msgstr "ライセンス条項については<placeholder-1/>ファイルを見てください。"
#~ msgid "This list may not be correct. If you notice mistakes of this list, please point out."
#~ msgstr "このリストには抜けがあるかもしれません。もし、このリストの間違いに気付いたら教えてください。"
#~ msgid "Nobody: Bug reports and <placeholder-1/> improveent ideas."
#~ msgstr "Nobody: バグレポートと<placeholder-1/>を改良するアイディア。"
#~ msgid "James Hughes: Bug reports and advices and documentations."
#~ msgstr "James Hughes: バグレポートとドキュメントのアドバイス。"
#~ msgid "Buzz Chopra: Documentations."
#~ msgstr "Buzz Chopra: ドキュメント。"
#~ msgid "Bug reports."
#~ msgstr "バグレポート。"
#~ msgid "Tell us character escape syntax."
#~ msgstr "文字のエスケープ構文について教えてくれました。"
#~ msgid "Jeff Hall: Bug reports."
#~ msgstr "Jeff Hall: バグレポート。"
#~ msgid "Ernie Miller: Bug reports and advices."
#~ msgstr "Ernie Miller: バグレポートとアドバイス。"
#~ msgid "Daniel Pfile: Patches."
#~ msgstr "Daniel Pfile: パッチ。"
#~ msgid "Jacob Wilkins: Bug reports."
#~ msgstr "Jacob Wilkins: バグレポート。"
#~ msgid "Nederlands translations."
#~ msgstr "オランダ語への翻訳。"
#~ msgid "Iain Pople: Bug reports and <placeholder-1/> improvement ideas."
#~ msgstr "Iain Pople: バグレポートと<placeholder-1/>を改良するアイディア。"
#~ msgid "Kevin McCarthy: Patches."
#~ msgstr "Kevin McCarthy: パッチ。"
#~ msgid "Perry Smith: Patches, bug reports and indications."
#~ msgstr "Perry Smith: パッチとバグレポート。"
#~ msgid "Marc Dequènes: <placeholder-1/> suggestions."
#~ msgstr "<placeholder-1/>の提案。"
#~ msgid "Jeremy Pruitt: Bug reports."
#~ msgstr "Jeremy Pruitt: バグレポート。"
#~ msgid "A suggestion for behavior on simple bind with empty password."
#~ msgstr "空のパスワードで簡易認証した時の挙動についての提案。"
#~ msgid "Naoto Morishima: Bug reports."
#~ msgstr "Naoto Morishima: バグレポート。"
#~ msgid "An <placeholder-1/> improvement idea."
#~ msgstr "<placeholder-1/>を改良するアイディア。"
#~ msgid "Lennon Day-Reynolds: Bug reports."
#~ msgstr "Lennon Day-Reynolds: バグレポート。"
#~ msgid "Tilo: A bug report."
#~ msgstr "Tilo: バグレポート。"
#~ msgid "Matt Mencel: Bug reports."
#~ msgstr "Matt Mencel: バグレポート。"
#~ msgid "Bug fixes."
#~ msgstr "バグ修正。"
#~ msgid "gwarf12: A bug report."
#~ msgstr "gwarf12: バグレポート。"
#~ msgid "Baptiste Grenier: <placeholder-1/> improvement ideas."
#~ msgstr "Baptiste Grenier: <placeholder-1/>を改良するアイディア。"
#~ msgid "Richard 3 Nicholas: <placeholder-1/> improvement ideas."
#~ msgstr "Richard 3 Nicholas: <placeholder-1/>を改良するアイディア。"
#~ msgid "Kazuhiro <placeholder-1/>: A bug report."
#~ msgstr "Kazuhiro <placeholder-1/>: バグレポート。"
#~ msgid "Grzegorz Marszałek: A bug report."
#~ msgstr "Grzegorz Marszałek: バグレポート。"
#~ msgid "しまさわらさん: A suggesetion."
#~ msgstr "しまさわらさん: 提案。"
#~ msgid "Ted Lepich: A suggestion."
#~ msgstr "Ted Lepich: 提案。"
#~ msgid "michael.j.konopka: Bug reports."
#~ msgstr "michael.j.konopka: バグレポート。"
#~ msgid "ingersoll: A suggestion."
#~ msgstr "ingersoll: 提案。"
#~ msgid "Alexey.Chebotar: Bug reports."
#~ msgstr "Alexey.Chebotar: バグレポート。"
#~ msgid "ery.lee: A bug report."
#~ msgstr "ery.lee: バグレポート。"
#~ msgid "id:dicdak: A bug report."
#~ msgstr "id:dicdak: バグレポート。"
#~ msgid "Raiko Mitsu: A bug report."
#~ msgstr "Raiko Mitsu: バグレポート。"
#~ msgid "Kazuaki Takase: Documents in Japanese."
#~ msgstr "Kazuaki Takase: 日本語ドキュメント。"
#~ msgid "Tim Hermans: A bug report."
#~ msgstr "Tim Hermans: バグレポート。"
#~ msgid "Tiago Fernandes: Bug reports."
#~ msgstr "Tiago Fernandes: バグレポート。"
#~ msgid "achemze: A suggestion."
#~ msgstr "achemze: 提案。"
#~ msgid "George Montana Harkin: A suggestion."
#~ msgstr "George Montana Harkin: 提案。"
#~ msgid "Marc Dequènes: Bug reports."
#~ msgstr "Marc Dequènes: バグレポート。"
#~ msgid "brad@lucky-dip.net: A bug report."
#~ msgstr "brad@lucky-dip.net: バグレポート。"
#~ msgid "Hideyuki Yasuda: Bug reports."
#~ msgstr "Hideyuki Yasuda: バグレポート。"
#~ msgid "zachwily: A bug report."
#~ msgstr "zachwily: バグレポート。"
#~ msgid "syrius.ml@no-log.org: A bug report."
#~ msgstr "syrius.ml@no-log.org: バグレポート。"
#~ msgid "Anthony M. Martinez: Helped <placeholder-1/> options support"
#~ msgstr "Anthony M. Martinez: <placeholder-1/>オプションサポートのお手伝い。"
#~ msgid "ilusi0n.x: A bug report."
#~ msgstr "ilusi0n.x: バグレポート。"
#~ msgid "projekttabla: A suggestion."
#~ msgstr "projekttabla: 提案。"
#~ msgid "christian.pennaforte: A bug report."
#~ msgstr "christian.pennaforte: バグレポート。"
#~ msgid "planetmcd: A bug report."
#~ msgstr "planetmcd: バグレポート。"
#~ msgid "spoidar: Rails 3 support."
#~ msgstr "spoidar: Rails 3対応。"
#~ msgid "Kris Wehner: Rails 2.3.8 support."
#~ msgstr "Kris Wehner: Rails 2.3.8対応。"
#~ msgid "A test bug fix."
#~ msgstr "テストのバグ修正。"
#~ msgid "Rails 3 support."
#~ msgstr "Rails 3対応"
#~ msgid "rbq: A bug report."
#~ msgstr "rbq: バグレポート。"
#~ msgid "Narihiro Nakamura: Rails 3 support."
#~ msgstr "Narihiro Nakamura: Rails 3対応。"
#~ msgid "Hidetoshi Yoshimoto: Rails 3 support."
#~ msgstr "Hidetoshi Yoshimoto: Rails 3対応。"
#~ msgid "warden: A bug report."
#~ msgstr "warden: バグレポート。"
#~ msgid "bklier: A bug fix."
#~ msgstr "bklier: バグ修正。"
#~ msgid "Craig White: Bug reports."
#~ msgstr "Craig White: バグレポート。"
#~ msgid "LDAP|Description|Syntax|"
#~ msgstr "構文"
#~ msgid "File: tutorial &mdash; ActiveLdap"
#~ msgstr "ファイル: チュートリアル &mdash; ActiveLdap"
#~ msgid "File: tutorial"
#~ msgstr "ファイル: チュートリアル"
#~ msgid "Tutorial"
#~ msgstr "チュートリアル"
#~ msgid "Introduction"
#~ msgstr "はじめに"
#~ msgid "ActiveLdap is a novel way of interacting with <placeholder-1/>. Most interaction with <placeholder-2/> is done using clunky LDIFs, web interfaces, or with painful APIs that required a thick reference manual nearby. ActiveLdap aims to fix that. Inspired by <placeholder-3/>, ActiveLdap provides an object oriented interface to <placeholder-4/> entries."
#~ msgstr ""
#~ "ActiveLdap は <placeholder-1/> を操作する今までにない方法です。大半の<placeholder-2/>操作は難しいLDIFを扱うか、ウェブインターフェースを利用するか、説明の省かれたリファレンスマニュアルを参照しながら、難解なAPIを利用しなければなりませんでした。\n"
#~ "\n"
#~ "ActiveLdap はこの解決を目指します。<placeholder-3/> によって着想した ActiveLdap は、<placeholder-4/> エントリに対するオブジェクト指向のインターフェースを提供します。"
#~ msgid "The target audience is system administrators and <placeholder-1/> users everywhere that need quick, clean access to <placeholder-2/> in Ruby."
#~ msgstr "対象読者はシステム管理者やLDAPユーザであって、手軽かつきれいなLDAPアクセスの方法を求めるすべての人です。"
#~ msgid "What’s <placeholder-1/>?"
#~ msgstr "<placeholder-1/>とは何か"
#~ msgid "<placeholder-1/> stands for “Lightweight Directory Access Protocol.” Basically this means that it is the protocol used for accessing <placeholder-2/> servers. <placeholder-3/> servers lightweight directories. An <placeholder-4/> server can contain anything from a simple digital phonebook to user accounts for computer systems. More and more frequently, it is being used for the latter. My examples in this text will assume some familiarity with using <placeholder-5/> as a centralized authentication and authorization server for Unix systems. (Unfortunately, I’ve yet to try this against Microsoft’s ActiveDirectory, despite what the name implies.)"
#~ msgstr ""
#~ "<placeholder-1/> は”軽量ディレクトリアクセスプロトコル”のことです。これは基本的に<placeholder-2/>サーバと対話するためのプロトコルを意味します。<placeholder-3/>サーバは軽量のディレクトリサーバです。<placeholder-4/>サーバはシンプルな電話帳からコンピュータ上のユーザアカウントのリストまで、幅広い情報を格納することができますが、大抵の場合後者のために使われます。\n"
#~ "\n"
#~ "このテキストでの各例は、読者が <placeholder-5/> サーバを Unix 系システムのための中央認証・認可サーバとして利用することを熟知しているものと仮定して記載しています。（残念なことに、私はまだMicrsoft ActiveDirectoryに対して ActiveLdap を試していません。名前に \"Directory\" が含まれていはいるのですが。）"
#~ msgid "Further reading:"
#~ msgstr "より理解するために："
#~ msgid "<placeholder-1/> – Lightweight Directory Access Protocol"
#~ msgstr "<placeholder-1/> – 軽量ディレクトリアクセスプロトコル"
#~ msgid "So why use ActiveLdap?"
#~ msgstr "では何故 ActiveLdap なのか？"
#~ msgid "Using <placeholder-1/> directly (even with the excellent Ruby/<placeholder-2/>), leaves you bound to the world of the predefined <placeholder-3/> <placeholder-4/>. While this <placeholder-5/> is important for many reasons, having to extract code out of <placeholder-6/> search blocks and create huge arrays of <placeholder-7/>.mod entries make code harder to read, less intuitive, and just less fun to write. Hopefully, ActiveLdap will remedy all of these problems!"
#~ msgstr "<placeholder-2/>を直接扱うさいには（たとえ素晴らしい Ruby/<placeholder-2/> ライブラリを用いても）、既存の <placeholder-3/> <placeholder-4/> に拘束されることになります。この<placeholder-5/>は巨大な配列を生成し、コードを読みづらく、また楽しくないものにしてしまいます。もしあなたがあなたのコードに<placeholder-6/>を統合するためのきれいな方法を欲するなら、ActiveLdap を使う理由になるでしょう。"
#~ msgid "Getting Started"
#~ msgstr "利用準備"
#~ msgid "Requirements"
#~ msgstr "動作条件"
#~ msgid "A Ruby implementation: <placeholder-1/> 1.8.x, 1.9.1 or <placeholder-2/>"
#~ msgstr "Ruby実装: <placeholder-1/> 1.8.x または 1.9.1 または <placeholder-2/>"
#~ msgid "A <placeholder-1/> library: <placeholder-2/> (for Ruby), <placeholder-3/> (for Ruby or JRuby) or <placeholder-4/> (for JRuby)"
#~ msgstr "<placeholder-1/>ライブラリ: <placeholder-2/> (Ruby の場合) または <placeholder-3/> (Ruby か JRuby の場合) または <placeholder-4/> (JRuby の場合)"
#~ msgid "Your <placeholder-1/> server must allow root_dse queries to allow for schema queries"
#~ msgstr "利用する <placeholder-1/> サーバはスキーマクエリのために root_dse クエリを許可していなければなりません"
#~ msgid "A <placeholder-1/> server: <placeholder-2/>, etc <ul><placeholder-3/></ul>"
#~ msgstr "<placeholder-1/> サーバ: <placeholder-2/> など <ul><placeholder-3/></ul>"
#~ msgid "Installation"
#~ msgstr "インストール"
#~ msgid "If the require returns false or an exception is raised, there has been a problem with the installation. You may need to customize what setup.rb does on install."
#~ msgstr "もし require が false を返したり例外を発生させたら、インストールに失敗しています。動作条件を満たしているかなどを確認してみてください。"
#~ msgid "Usage"
#~ msgstr "利用方法"
#~ msgid "This section covers using ActiveLdap from writing extension classes to writing applications that use them."
#~ msgstr "この章では ActiveLdap 拡張クラスをコーディングし、アプリケーションを記述し、それらを利用するまでを記載します。"
#~ msgid "Just to give a taste of what’s to come, here is a quick example using irb:"
#~ msgstr "何を得られるかざっくりつかむために、irb を利用して簡単な例を紹介しましょう。まずActiveLdap を require します。"
#~ msgid "Call setup_connection method for connect to <placeholder-1/> server. In this case, <placeholder-2/> server is localhost, and base of <placeholder-3/> tree is “dc=dataspill,dc=org”."
#~ msgstr "<placeholder-1/> サーバとの接続を確立します。ここでは最も基本的なメソッドであるsetup_connection を利用します。サンプルとして、接続先は localhost、base を \"dc=dataspill,dc=org\" とします。"
#~ msgid "Here’s an extension class that maps to the <placeholder-1/> Group objects:"
#~ msgstr "次に、ActiveLdap::Base のサブクラスを作成します。これを拡張クラスと呼びます。この拡張クラスを、 base 以下に存在する <placeholder-1/> の Group オブジェクト群とマッピングしてみましょう。"
#~ msgid "In the above code, Group class handles sub tree of ou=Groups tha is :base value specified by setup_connection. A instance of Group class represents a <placeholder-1/> object under ou=Gruops."
#~ msgstr "簡単に説明しましょう。上記のコードでは Group クラスが setup_connection でした:base 以下の ou=Groups 以下のオブジェクト群全体を取り扱うようになります。Groupクラスのインスタンスは、ou=Groups 以下にある個々の <placeholder-1/> オブジェクトを表現します。"
#~ msgid "That’s it! No let’s get back in to it."
#~ msgstr "ほら！ もう元には戻れないでしょう？"
#~ msgid "Extension Classes"
#~ msgstr "ActiveLdap 拡張クラス"
#~ msgid "Extension classes are classes that are subclassed from ActiveLdap::Base. They are used to represent objects in your <placeholder-1/> server abstractly."
#~ msgstr "ActiveLdap 拡張クラスは ActiveLdap::Base のサブクラスです。これらは <placeholder-1/> サーバ内のオブジェクトを抽象的に表現するために使われます。"
#~ msgid "Why do I need them?"
#~ msgstr "どうしてこれが必要なのか？"
#~ msgid "Extension classes are what make ActiveLdap “active”! They do all the background work to make easy-to-use objects by mapping the <placeholder-1/> object’s attributes on to a Ruby class."
#~ msgstr "拡張クラスは <placeholder-1/> オブジェクト群の属性情報を Ruby クラスに自動的にマッピングすることで、オブジェクトの取り扱いを容易かつ便利にします。"
#~ msgid "Special Methods"
#~ msgstr "拡張クラス定義用メソッド"
#~ msgid "I will briefly talk about each of the methods you can use when defining an extension class. In the above example, I only made one special method call inside the Group class. More than likely, you will want to more than that."
#~ msgstr "LDAP オブジェクトが正しく Ruby オブジェクトにマッピングされるために、ActiveLdapのクラスメソッドを利用してマッピングのための情報を定義します。上記の例ではそれらのうち、Group クラスを定義する中で ldap_mapping だけを利用していました。必要に応じて更に多くのメソッドを利用することができます。"
#~ msgid "ldap_mapping is the only required method to setup an extension class for use with ActiveLdap. It must be called inside of a subclass as shown above."
#~ msgstr "ldap_mapping は ActiveLdap とともに拡張クラスを利用するにあたって必須とされる唯一のメソッドです。"
#~ msgid "As you can see, this method is used for defining how this class maps in to <placeholder-1/>. Let’s say that my <placeholder-2/> tree looks something like this:"
#~ msgstr ""
#~ "Group クラスをどのようにして <placeholder-1/> とマッピングとするかを定義するために、ldap_mapping メソッドが使われていることが見てとれるでしょう。\n"
#~ "\n"
#~ "私たちが扱う <placeholder-1/> ツリーが以下のようなものであるとします。"
#~ msgid "Under ou=People I store user objects, and under ou=Groups, I store group objects. What |ldap_mapping| has done is mapped the class in to the <placeholder-1/> tree abstractly. With the given :dn_attributes and :prefix, it will only work for entries under ou=Groups,dc=dataspill,dc=org using the primary attribute ‘cn’ as the beginning of the distinguished name."
#~ msgstr ""
#~ "ou=People 以下にはユーザオブジェクトを格納し、ou=Groups 以下にはグループオブジェクトを格納するものとします。\n"
#~ "\n"
#~ "ldap_mapping は <placeholder-1/> ツリーを抽象化して拡張クラスにマッピングします。以下では、先の Group クラスの例をとって説明します。\n"
#~ "\n"
#~ ":prefix によって、このクラスはou=Groups,dc=dataspill,dc=org 以下のみを扱うようになっています。\n"
#~ "\n"
#~ ":dn_attributeにより 'cn' がこのクラスにとってのプライマリ属性となります。つまり、Group クラスが取り扱う LDAPオブジェクト(ou=Groups,dc=dataspill,dc=org 以下のLDAPオブジェクト)について、DN はcn から始まるものとして扱われます。"
#~ msgid "Just for clarity, here’s how the arguments map out:"
#~ msgstr "より理解をはっきりさせるために、図にしてみましょう。各引数は図のようにマッピングされます。"
#~ msgid ":scope tells ActiveLdap to only search under ou=Groups, and not to look deeper for dn_attribute matches. (e.g. cn=develop,ou=DevGroups,ou=Groups,dc=dataspill,dc=org) You can choose value from between :sub, :one and :base."
#~ msgstr "他にも :scope, :classes, :dn_attribute といったオプションの引数があります。:scope は ou=Groups 以下の検索について、より深い階層までを検索するかどうかを指示します（cn=develop,ou=DevGroups,ou=Groups,dc=dataspill,dc=org のような LDAP オブジェクトのこと）。"
#~ msgid "Something’s missing: :classes. :classes is used to tell ActiveLdap what the minimum requirement is when creating a new object. <placeholder-1/> uses objectClasses to define what attributes a <placeholder-2/> object may have. ActiveLdap needs to know what classes are required when creating a new object. Of course, you can leave that field out to default to [‘top’] only. Then you can let each application choose what objectClasses their objects should have by calling the method e.g. Group#add_class(*values)."
#~ msgstr ":classes は ActiveLdap に対して、新しいオブジェクトを生成するのに必要な最低条件を指定します。<placeholder-1/> はオブジェクトクラスを利用して、<placeholder-2/>オブジェクトがどのような属性を持ち得るかを定義します。ActiveLdap はこれを :classes 引数によって知ることになります。デフォルトは 'top' のみです。このままにすることもできますし、add_class メソッドなどによって追加することも可能です。"
#~ msgid "Note that is can be very important to define the default :classes value. Due to implementation choices with most <placeholder-1/> servers, once an object is created, its structural objectclasses may not be removed (or replaced). Setting a sane default may help avoid programmer error later."
#~ msgstr "デフォルトの :classes の値はとても重要です。ほとんどの <placeholder-1/> サーバは一度オブジェクトが造られると structual な objectClass は削除（または変更）されることはないでしょう。健全なデフォルトを設定しておくことは、後々バグを作り込むことを回避する助けになるかもしれません。"
#~ msgid ":classes isn’t the only optional argument. If :dn_attribute is left off, it defaults to super class’s value or ‘cn’. If :prefix is left off, it will default to ‘ou=PluralizedClassName’. In this case, it would be ‘ou=Groups’."
#~ msgstr ""
#~ ":classes だけがオプションの引数ではありません。:dn_attribute が無い場合、このデフォルトはスーパークラスと同じ値か、cn に設定されます。\n"
#~ "\n"
#~ ":prefixが無い場合、このデフォルトは'ou=クラス名の複数形’に設定されます。この場合は'ou=Groups'になります。"
#~ msgid ":classes should be an Array. :dn_attribute should be a String and so should :prefix."
#~ msgstr ":classes は配列でなくてはなりません。:dn_attribute と :prefix は文字列である必要があります。"
#~ msgid "This method allows an extension class to make use of other extension classes tying objects together across the <placeholder-1/> tree. Often, user objects will be members of, or belong_to, Group objects."
#~ msgstr "このメソッドはLDAPツリーを横断して他の拡張クラスとの関連付けを行い、所属の表現を行います。しばしば User オブジェクトは Group オブジェクトのメンバになったり、所属したりします。"
#~ msgid "In the above tree, one such example would be user ‘drewry’ who is a part of the group ‘develop’. You can see this by looking at the ‘memberUid’ field of ‘develop’."
#~ msgstr "上記のようなLDAPツリーでは、'drewry'ユーザは　'develop' グループの一員であるとします。この場合、'develop' グループの 'memberUid' フィールドを見ることで、それを確認できます。"
#~ msgid "If we look at the <placeholder-1/> entry for ‘drewry’, we do not see any references to group ‘develop’. In order to remedy that, we can use belongs_to"
#~ msgstr "しかし、'drewry' のエントリを見た時に 'develop' グループと関連している事は判らないでしょう。これを解決するために belongs_to を利用します。"
#~ msgid "Now, class User will have a method called ‘groups’ which will retrieve all Group objects that a user is in."
#~ msgstr "これで User クラスは 'groups' メソッドを利用できるようになります。このメソッドはユーザが所属するすべての Group オブジェクトを取得することができます。"
#~ msgid "TIP"
#~ msgstr "豆知識"
#~ msgid "<placeholder-1/>: If you weren’t sure what the distinguished name attribute was for Group, you could also do the following:"
#~ msgstr "<placeholder-1/>: 上記では Group の Distinguished name が cn であると仮定しています。もしGroup の Distinguished name の属性名を知らなければ、以下のようにすれば（Distinguished name がなんであれ）Distinguished name の属性を取得できます。"
#~ msgid "Now let’s talk about the arguments of belongs_to. We use the following code that extends Group group a bit for explain:"
#~ msgstr "belongs_to の引数について説明します。理解の助けのため、先ほどの Group クラスを少し拡張した以下のコードを例にとって説明します。"
#~ msgid ":foreign_key tells belongs_to what attribute Group objects have that match the related object’s attribute. If :foreign_key is left off of the argument list, it is assumed to be the dn_attribute."
#~ msgstr ":foreign_key には、関連のキー値を持つ、自身の属性名を指定します。:foreign_keyに何も設定しないと、自動的に ldap_mapping で指定した :dn_attribute の属性名が利用されます。"
#~ msgid "ActiveLdap uses :foreign_key as “own attribute name”. So it may not be “foreign key”. You can consider :foreign_key just as a relation key."
#~ msgstr "ActiveLdapでの :foreign_key には \"自身の属性名を指定する”という規約があります。このため、必ずしも名前通りの”外部キー”とはならない場合があります。belongs_toにおける :foreign_key は、単に所属の関連性を示すためのキーにすぎないと考えた方が良いかも知れません。"
#~ msgid ":primary_key is treated as “related object’s attribute name” as we discussed later."
#~ msgstr "後述する :primary_key も同様に”相手先の属性名を指定する”という規約が適用されています。"
#~ msgid ":class_name should be a string that has the name of a class you’ve already included. If your class is inside of a module, be sure to put the whole name, e.g. <placeholder-1/>."
#~ msgstr ":class_name キーには、所属先となるオブジェクトの拡張クラス名を、 String で指定します。もし拡張クラスがモジュールやクラスの中に定義されている場合、<placeholder-1/>.のようにトップレベルから全ての名前を記載してください。この例では \"Group\" クラスを指定しています。"
#~ msgid "Relation is resolved by searching entries of :class_name class with :foreign_key attribute value. Search target attribute for it is :primary_key or :many. primary_group method in the above example searches Group objects with User object’s gidNumber value as Group object’s gidNumber value. Matched Group objects are belonged objects."
#~ msgstr "所属の関連付けは、:foreign_key に指定した属性の値を用い、 :class_name に指定の拡張クラス配下のオブジェクト群を検索することによって行われます。この際の検索対象属性が :primary_key または :many に指定の属性です。例で定義した parimary_group メソッドで言えば、User オブジェクトの gidNumber の値で、 Groupオブジェクト群の属性gidNumber を検索します。マッチした Group オブジェクトが所属先となります。"
#~ msgid "This method is the opposite of belongs_to. Instead of checking other objects in other parts of the <placeholder-1/> tree to see if you belong to them, you have multiple objects from other trees listed in your object. To show this, we can just invert the example from above:"
#~ msgstr "このメソッドは belongs_to と対のものです。特定のオブジェクトに所属しているエントリを、所属されているオブジェクトからリスト可能にします。これを行うにはbelongs_toとは逆のことをします。"
#~ msgid "# Associate with primary belonged users"
#~ msgstr "# プライマリで所属しているユーザ群と関連付け"
#~ msgid "# Associate with all belonged users"
#~ msgstr "# 所属しているユーザ全てと関連付け"
#~ msgid "Now we can see that group develop has user ‘drewry’ as a member, and it can even return all responses in object form just like belongs_to methods."
#~ msgstr "これで develop グループが 'drewry' ユーザをメンバーとして見ることができます。belongs_to のように、メンバーのリストを members メソッドによって取得することができます。"
#~ msgid "The arguments for has_many follow the exact same idea that belongs_to’s arguments followed. :wrap’s contents are used to search for matching :primary_key content. If :primary_key is not specified, it defaults to the dn_attribute of the specified :class_name."
#~ msgstr ""
#~ "has_many の引数は belongs_to とまったく同じ形式をとります。つまり第一引数に実装するメソッド名を Symbol で渡し、続く引数は Hash です。\n"
#~ "\n"
#~ ":class_name、:parimary_key の意味合いも belongs_to と同様で、相手先の拡張クラス名と参照先の属性名を指定します。相手先が所有先になるだけです。尚、 has_many に:many キーはありません。\n"
#~ "\n"
#~ "belonsg_to と違う点は、自身の関連性のキー属性を指定するオプションが二つあることです。:foreign_key か :wrap のいずれかで指定します。\n"
#~ "\n"
#~ ":foreign_key で属性名を指定した場合、has_many は単純に :class_name のクラスに対して検索を行い、マッチしたオブジェクト群を所有オブジェクト群として扱います。\n"
#~ "\n"
#~ ":wrap で指定した場合は挙動が変わります。:wrap の概念は”:wrap に指定した属性に保持する値をオブジェクト化する”ことです。\n"
#~ "\n"
#~ ":wrap に指定する属性は、memberUid のように一つ以上の値を持つことを想定しています。この属性に保持する全ての値で検索し、マッチする全てのオブジェクトを返します。マッチしない値がある場合、:class_name に指定の拡張クラスで new され、所有対象のリストに含まれます。"
#~ msgid "Using these new classes"
#~ msgstr "拡張クラスの利用法"
#~ msgid "These new classes have many method calls. Many of them are automatically generated to provide access to the <placeholder-1/> object’s attributes. Other were defined during class creation by special methods like belongs_to. There are a few other methods that do not fall in to these categories."
#~ msgstr "作成した拡張クラスは多くのメソッドコールを持ちます。それらのうちの多数は LDAPオブジェクトに対するアクセスを提供するために自動的に作成されています。他のメソッドはクラス定義時、belongs_to のような特別なメソッドによって作成されます。以下ではそれら以外のメソッドについて記載します。"
#~ msgid ".find is a class method that is accessible from any subclass of Base that has ‘ldap_mapping’ called. When called .first(:first) returns the first match of the given class."
#~ msgstr ".find は ldap_mapping をコール済みの拡張クラスのクラスメソッドです。ActiveRecordのようにLDAPオブジェクトを検索可能です。"
#~ msgid "In this simple example, Group.find took the search string of ‘deve*’ and searched for the first match in Group where the dn_attribute matched the query. This is the simplest example of .find."
#~ msgstr "文字列を与えると、dn_attribute をキーにして最初にマッチするオブジェクトを返します。"
#~ msgid "Here .find(:all) returns all matches to the same query. Both .find(:first) and .find(:all) also can take more expressive arguments:"
#~ msgstr "最初のキーに :all を与えると全てのオブジェクトを返します。"
#~ msgid "So it is pretty clear what :attribute and :value do – they are used to query as :attribute=:value."
#~ msgstr ":attribute と :value によって特定のキーについて検索することも可能です。"
#~ msgid "It is also possible to override :attribute and :value by specifying :filter. This argument allows the direct specification of a <placeholder-1/> filter to retrieve objects by."
#~ msgstr ":filter によって<placeholder-1/>フィルタを直接指定することも可能です。"
#~ msgid ".search is a class method that is accessible from any subclass of Base, and Base. It lets the user perform an arbitrary search against the current <placeholder-1/> connection irrespetive of <placeholder-2/> mapping data. This is meant to be useful as a utility method to cover 80% of the cases where a user would want to use Base.connection directly."
#~ msgstr ".search は ActiveLdap::Base か、そのサブクラスから呼び出し可能なクラスメソッドです。拡張クラスと LDAPツリーとのマッピングを無視して検索することができます。直接Base.connection を利用してもよいですが、このメソッドを利用すれば8割の目的は達成できるでしょう。"
#~ msgid "You can specify the :filter, :base, :scope, and :attributes, but they all have defaults —"
#~ msgstr ":filter, :base, :scope, :attributes の各キーを指定できます。それぞれにデフォルトの値を持っています。"
#~ msgid ":filter defaults to objectClass=* – usually this isn’t what you want"
#~ msgstr ":filter のデフォルトは \"objectClass=*\" です。たいていの場合、変更する必要があるでしょう"
#~ msgid ":base defaults to the base of the class this is executed from (as set in ldap_mapping)"
#~ msgstr ":base のデフォルトはこのメソッドを実行したクラスの :base です。これは ldap_mapping によって設定されているものです"
#~ msgid ":scope defaults to :sub. Usually you won’t need to change it (You can choose value also from between :one and :base)"
#~ msgstr ":scope は :sub に設定されています。"
#~ msgid ":attributes defaults to [] and is the list of attributes you want back. Empty means all of them."
#~ msgstr ":attributes のデフォルトは [] です。これはあなたが欲しい属性名のリストを指定してください。空の場合はすべての属性を取得します"
#~ msgid "valid? is a method that verifies that all attributes that are required by the objects current objectClasses are populated."
#~ msgstr "valid? はインスタンスメソッドです。オブジェクトクラスで必要とされる属性が備わっているか検査します。真偽値を返します。"
#~ msgid "save is a method that writes any changes to an object back to the <placeholder-1/> server. It automatically handles the addition of new objects, and the modification of existing ones."
#~ msgstr "save は <placeholder-1/> オブジェクトの変更を保存するためのインスタンスメソッドです。実行すると、レシーバのオブジェクトに加えられていた変更が LDAP サーバに反映されます。新しいオブジェクトか、既存のオブジェクトかを自動判別し、新規オブジェクトならLDAPサーバに追加します。既存のものならば更新します。"
#~ msgid "exists? is a simple method which returns true is the current object exists in <placeholder-1/>, or false if it does not."
#~ msgstr "exists? はシンプルなクラスメソッドです。ある :dn_attribute を持つオブジェクトが存在するか検査したい時に利用します。"
#~ msgid "ActiveLdap::Base has come up a number of times in the examples above. Every time, it was being used as the super class for the wrapper objects. While this is it’s main purpose, it also handles quite a bit more in the background."
#~ msgstr "ActiveLdap::Base はこれまでの例の中で何回か登場してきました。主な目的としてLDAPオブジェクトをラップするために拡張クラスのスーパークラスとして活用しましたが、もう少しその背景を記載します。"
#~ msgid "What is it?"
#~ msgstr "これは何か"
#~ msgid "ActiveLdap::Base is the heart of ActiveLdap. It does all the schema parsing for validation and attribute-to-method mangling as well as manage the connection to <placeholder-1/>."
#~ msgstr "ActiveLdap::Base は ActiveLdap の心臓部です。属性を setter/getter にマッピングしたり、バリデーションを行うためのスキーマ解析を行います。同時に、LDAPサーバとの接続の管理も行います。"
#~ msgid "Base.setup_connection takes many (optional) arguments and is used to connect to the <placeholder-1/> server. Sometimes you will want to connect anonymously and other times over <placeholder-2/> with user credentials. Base.setup_connection is here to do all of that for you."
#~ msgstr "Base.setup_connection は <placeholder-1/> サーバとの接続のために多くの引数をとります。多くはオプションの引数です。時に匿名接続を行いたいでしょうし、時にはユーザ証明とともにTLSを利用した接続をしたいでしょう。Base.setup_connection はそれらを実現します。"
#~ msgid "By default, if you call any subclass of Base, such as Group, it will call Base.setup_connection() if these is no active <placeholder-1/> connection. If your server allows anonymous binding, and you only want to access data in a read-only fashion, you won’t need to call Base.setup_connection. Here is a fully parameterized call:"
#~ msgstr "Group のような、Base を親に持つサブクラスをコールした際、まだ接続が確立していなければ、Base.setup_connection で設定した情報をもとに接続しようと試みます。あなたのサーバが匿名バインドを許していて、かつ読み取り専用でのアクセスを行いたいのなら、多くを設定する必要はないでしょう。以下にパラメータつきの setup_connection の例を示します。"
#~ msgid "There are quite a few arguments, but luckily many of them have safe defaults:"
#~ msgstr "多くの引数がありますが、そのうちの多くには安全なデフォルト値が設定設定されています。"
#~ msgid ":host defaults to “127.0.0.1”."
#~ msgstr ":host のデフォルト値は '127.0.0.1' です"
#~ msgid ":port defaults to nil. 389 is applied if not specified."
#~ msgstr ":port は nil です。何も設定しない場合は 389 が利用されます"
#~ msgid ":bind_dn defaults to nil. anonymous binding is applied if not specified."
#~ msgstr ":bind_dn は nil です。何も設定しない場合、匿名アクセスとなります。"
#~ msgid ":logger defaults to a Logger object that prints fatal messages to stderr"
#~ msgstr ":logger はロガーオブジェクトを設定します。デフォルトでは Logger オブジェクトです。"
#~ msgid ":password_block defaults to nil"
#~ msgstr ":password_block のデフォルトは nil です。"
#~ msgid ":allow_anonymous defaults to true"
#~ msgstr ":allow_anonymous のデフォルトは true です。"
#~ msgid ":try_sasl defaults to false – see Advanced Topics for more on this one."
#~ msgstr ":try_sasl のデフォルトは false になっています。このオプションについては後述の \"高度な話題\" をご覧ください。"
#~ msgid "Most of these are obvious, but I’ll step through them for completeness:"
#~ msgstr "実際に利用可能な引数のリストを示します。"
#~ msgid ":host defines the <placeholder-1/> server hostname to connect to."
#~ msgstr ":host は接続先LDAPサーバのホスト名を指定します"
#~ msgid ":port defines the <placeholder-1/> server port to connect to."
#~ msgstr ":port は接続先LDAPサーバのポートを指定します"
#~ msgid ":method defines the type of connection – :tls, :ssl, :plain"
#~ msgstr ":method は接続方法を指定します。 :tls, :ssl, :plain が指定可能です"
#~ msgid ":base specifies the <placeholder-1/> search base to use with the prefixes defined in all subclasses."
#~ msgstr ":base は <placeholder-1/>の検索開始位置を指定します。これは Base のサブクラスで :prefix とともに利用されます"
#~ msgid ":bind_dn specifies what your server expects when attempting to bind with credentials."
#~ msgstr ":bind_dn はユーザ認証を伴った接続をする際に指定します。バインドする dn を指定します。"
#~ msgid ":logger accepts a custom logger object to integrate with any other logging your application uses."
#~ msgstr ":logger はカスタマイズしたロガーオブジェクトを指定します。あなたが利用したいロガーを渡すことができます。"
#~ msgid ":password_block, if defined, give the Proc block for acquiring the password"
#~ msgstr ":password_block には Proc オブジェクトを渡します。このブロックを実行した結果の戻り値がパスワードとして利用されます"
#~ msgid ":password, if defined, give the user’s password as a String"
#~ msgstr ":password にはパスワードの文字列を指定します"
#~ msgid ":store_password indicates whether the password should be stored, or if used whether the :password_block should be called on each reconnect."
#~ msgstr ":store_password には真偽値を設定します。再接続の際に :password_block で指定したブロックを再実行するかどうかが決定されます。このキーが存在する場合、password_block の実行結果は保存され、ブロックが再実行されることはありません"
#~ msgid ":allow_anonymous determines whether anonymous binding is allowed if other bind methods fail"
#~ msgstr ":allow_anonymous は接続の際、バインドに失敗した場合、匿名で接続することを許可します"
#~ msgid ":try_sasl, when true, tells ActiveLdap to attempt a <placeholder-1/>-<placeholder-2/> bind"
#~ msgstr ":try_sasl が true の場合、<placeholder-1/>-<placeholder-2/> バインドを試みます"
#~ msgid ":sasl_quiet, when true, tells the <placeholder-1/> libraries to not spew messages to <placeholder-2/>"
#~ msgstr ":sasl_quiet が true の場合、<placeholder-1/> ライブラリが <placeholder-2/> にメッセージを吐かないよう指示します"
#~ msgid ":sasl_options, if defined, should be a hash of options to pass through. This currently only works with the ruby-ldap adapter, which currently only supports :realm, :authcid, and :authzid."
#~ msgstr ":sasl_options はHashで指定します。指定したオプションはそのままLDAPライブラリに渡されます。今のところ、このオプションはRuby/LDAPでしかサポートされていません。現在サポートされているオプションのキーは:realmと:authcidと:authzidです。"
#~ msgid ":retry_limit – indicates the number of attempts to reconnect that will be undertaken when a stale connection occurs. -1 means infinite."
#~ msgstr ":retry_limit は接続失敗時に、何回再接続を試みるかを数値で指定します。-1 を指定すると無限に再接続を試みます"
#~ msgid ":retry_wait – seconds to wait before retrying a connection"
#~ msgstr ":retry_wait は再接続するまえに何秒待つかを指定します"
#~ msgid ":scope – dictates how to find objects. (Default: :one)"
#~ msgstr ":scope はLDAPオブジェクトの検索方式を指定します。デフォルトは :one です"
#~ msgid ":timeout – time in seconds – defaults to disabled. This <placeholder-1/> interrupt search() requests. Be warned."
#~ msgstr ":timeout は検索のタイムアウト秒数を指定します。デフォルトでは無効になっています。search() リクエストもインターラプトされるため、注意してください"
#~ msgid ":retry_on_timeout – whether to reconnect when timeouts occur. Defaults to true See lib/configuration.rb(ActiveLdap::Configuration::DEFAULT_CONFIG) for defaults for each option"
#~ msgstr ":retry_on_timeout タイムアウトが発生した場合に再接続を行うかどうかを指定します。デフォルトは true です"
#~ msgid "Base.setup_connection just setups connection configuration. A connection is connected and bound when it is needed. It follows roughly the following approach:"
#~ msgstr "Base.setup_connection は接続の設定のみを行います。実際にLDAPサーバに接続しバインドするプロセスは必要になったときに一度に実施されます。だいたい、以下のようなアプローチを取ります"
#~ msgid "Connect to host:port using :method"
#~ msgstr "host:port にたいして、:method での接続を行います"
#~ msgid "If bind_dn and password_block/password, attempt to bind with credentials."
#~ msgstr "もし bind_dn と password_block か password が与えられていれば、ユーザ認証を行いバインドしようとします"
#~ msgid "If that fails or no password_block and anonymous allowed, attempt to bind anonymously."
#~ msgstr "もし認証が失敗するか、パスワードが与えられていない場合、匿名アクセスが許可されていれば、匿名バインドを行います"
#~ msgid "If that fails, error out."
#~ msgstr "匿名バインドも失敗すれば、エラー終了します"
#~ msgid "On connect, the configuration options passed in are stored in an internal class variable which is used to cache the information without ditching the defaults passed in from configuration.rb"
#~ msgstr "接続の際、渡された設定オプションはクラス変数の中に格納されます。このさい、指定されていないオプションはデフォルト値が適用されます。"
#~ msgid "Exceptions"
#~ msgstr "例外クラス"
#~ msgid "This exception is raised when #delete fails. It will include <placeholder-1/> error information that was passed up during the error."
#~ msgstr "LDAPオブジェクトの削除に失敗した際、この例外が発生します。エラー発生時の <placeholder-1/> エラーメッセージが含まれます。"
#~ msgid "This exception is raised when there is a problem in #save updating or creating an <placeholder-1/> entry. Often the error messages are cryptic. Looking at the server logs or doing an <placeholder-2/> dump of the connection will often provide better insight."
#~ msgstr "<placeholder-1/> オブジェクトの追加または更新に問題があった場合に発生する例外です。LDAPサーバのログや <placeholder-2/> などによる通信解析によってより詳しい情報が得られるかもしれません。"
#~ msgid "This exception is raised during Base.setup_connection if no valid authentication methods succeeded."
#~ msgstr "この例外は setup_connection で :method による指定された認証が成功しなかった場合に発生します。"
#~ msgid "This exception is raised during Base.setup_connection if no valid connection to the <placeholder-1/> server could be created. Check you Base.setup_connection arguments, and network connectivity! Also check your <placeholder-2/> server logs to see if it ever saw the request."
#~ msgstr "この例外は setup_connection で指定された接続が確立できなかった場合に発生します。setup_connection のパラメータや、ネットワークの導通を確認してみてください。ちゃんとリクエストが投げられている場合、<placeholder-2/>サーバのログも確認してみてください。"
#~ msgid "This exception is raised when an object class is used that is not defined in the schema."
#~ msgstr "この例外は、LDAPサーバのスキーマ上で定義されていないオブジェクトクラスを利用した場合に発生します。"
#~ msgid "Others"
#~ msgstr "その他"
#~ msgid "Other exceptions may be raised by the Ruby/<placeholder-1/> module, or by other subsystems. If you get one of these exceptions and think it should be wrapped, write me an email and let me know where it is and what you expected. For faster results, email a patch!"
#~ msgstr "その他の例外は Ruby/<placeholder-1/> モジュールか、さらに別のサブシステムから発生します。もしあなたがそれらの例外を受け取り、ActiveLdap の例外によりラップされるべきだと考えたら、あなたが何を期待しているかをメールで教えてください。早く結果を出したい場合、メールにパッチを添付してください。"
#~ msgid "Putting it all together"
#~ msgstr "実際に動作するサンプルコード"
#~ msgid "Now that all of the components of ActiveLdap have been covered, it’s time to put it all together! The rest of this section will show the steps to setup example user and group management scripts for use with the <placeholder-1/> tree described above."
#~ msgstr "ここまでで ActiveLdap のすべてのコンポーネントについて記述しました。さあ、実際に動作するコードを配置するときです！ 以降では、いままで例に挙げてきた <placeholder-1/> ツリー上の、ユーザとグループを管理するためのスクリプトを順番にセットアップしてきます。"
#~ msgid "All of the scripts here are in the package’s examples/ directory."
#~ msgstr "以下に示すサンプルコードは、ActiveLdap ライブラリの examples/ ディレクトリにも配置されています。"
#~ msgid "Setting up"
#~ msgstr "準備"
#~ msgid "Creating <placeholder-1/> entries"
#~ msgstr "<placeholder-1/>エントリの作成"
#~ msgid "Now let’s create a really dumb script for adding users – ldapadmin/useradd:"
#~ msgstr "早速ユーザを追加するための ldapadmin/useradd スクリプトを作成しましょう。"
#~ msgid "Managing <placeholder-1/> entries"
#~ msgstr "<placeholder-1/>エントリの管理"
#~ msgid "Now let’s create another dumb script for modifying users – ldapadmin/usermod:"
#~ msgstr "次に、ユーザの属性変更スクリプト ldapadmin/usermod を作成します。"
#~ msgid "Removing <placeholder-1/> entries"
#~ msgstr "<placeholder-1/>エントリの削除"
#~ msgid "Now let’s create more one for deleting users – ldapadmin/userdel:"
#~ msgstr "最後に、ユーザ削除のためのスクリプト ldapadmin/userdel を作成します。"
#~ msgid "Advanced Topics"
#~ msgstr "高度な話題"
#~ msgid "Binary data and other subtypes"
#~ msgstr "バイナリデータとサブタイプ"
#~ msgid "Sometimes, you may want to store attributes with language specifiers, or perhaps in binary form. This is (finally!) fully supported. To do so, follow the examples below:"
#~ msgstr "しばしば、あなたは属性に言語指定子を指定して値を格納したくなるでしょう。それにバイナリデータ形式で投入したいかもしれません。これは十分にサポートされています。例を見てみましょう。"
#~ msgid "So that’s a lot to take in. Here’s what is going on. I just set the <placeholder-1/> object’s cn to “wad” and cn:lang-en-us to [“wad”, “Will Drewry”]. Anytime a <placeholder-2/> subtype is required, you must encapsulate the data in a Hash."
#~ msgstr "この例には見るべき点が多くあります。順番に見てみましょう。例では、cn に\"wad\"と cn;lang-en-us に [\"wad\", \"Will Drewry\"] を追加しています。<placeholder-2/>属性のサブタイプが必要とされるとき、それらのデータは Hash で包む必要があります。"
#~ msgid "that requires ;binary subtyping"
#~ msgstr ";binary サブタイプが必要"
#~ msgid "But wait a minute, I just read in a binary certificate without wrapping it up. So any binary attribute <placeholder-1/> will automagically get wrapped in <placeholder-2/> if you don’t do it. This keeps your #writes from breaking, and my code from crying. For correctness, I could have easily done the following:"
#~ msgstr "一方で、上記の例では Hash に包まずに X.509 証明書を格納しました。バイナリデータを格納するいくつかのの属性は <placeholder-1/>が必要です。これらの属性に対しては、プログラマがそうしなくても、自動で <placeholder-2/> の Hash で包まれます。これはコーディングの助けになりますが、正確性のために明示的に Hash で包むことも可能です。"
#~ msgid "You should note that some binary data does not use the binary subtype all the time. One example is jpegPhoto. You can use it as jpegPhoto;binary or just as jpegPhoto. Since the schema dictates that it is a binary value, ActiveLdap will write it as binary, but the subtype will not be automatically appended as above. The use of the subtype on attributes like jpegPhoto is ultimately decided by the <placeholder-1/> site policy and not by any programmatic means."
#~ msgstr "バイナリデータを格納する場合であっても、必ずしも ;binary サブタイプを利用する訳ではないことに注意してください。例としては jpegPhoto があります。あなたはjpegPhoto;binaryか jpegPhoto を利用することができます。スキーマがバイナリ値だと指示するので ActiveLdap はバイナリ値として書き込むでしょうが、サブタイプは自動的には付与されません。jpegPhoto のような属性にサブタイプを利用するかどうかは、<placeholder-1/>のサイトポリシーによって決められることであって、プログラムが自動で判断できるものではありません。（訳注：userCertificate 属性については、RFC上で ;binary サブタイプを利用するよう指示されているため、自動的に ;binary 属性を付与できる一方、jpegPhoto についてそのような言及が RFC 上にないために、そのような対応を自動的に行うことは難しい、ということのようです）"
#~ msgid "The only subtypes defined in LDAPv3 are lang-* and binary. These can be nested though:"
#~ msgstr "LDAPv3 で唯一定義されているサブタイプが lang-* と binary の組み合わせです。これらは以下のように Hash をネストさせることで実現できます。"
#~ msgid "As I understand it, OpenLDAP does not support nested subtypes, but some documentation I’ve read suggests that Netscape’s <placeholder-1/> server does. I only have access to OpenLDAP. If anyone tests this out, please let me know how it goes!"
#~ msgstr "ネストされたサブタイプは OpenLDAP でサポートされていません。ですが、いくつかの文書を確認したところ、ネットスケープの <placeholder-1/> サーバは対応しているようです。私がアクセスしたのは OpenLDAP のみなので、どなたかこの機能をテストしたなら、どのように動作したかを連絡してもらえると助かります。"
#~ msgid "Further integration with your environment aka namespacing"
#~ msgstr "環境とのさらなる統合 - 別名 名前空間の構築"
#~ msgid "If you want this to cleanly integrate into your system-wide Ruby include path, you should put your extension classes inside a custom module."
#~ msgstr "ActiveLdap を Ruby のインクルードパスに統合したいなら、拡張クラスをカスタムモジュールの中に統合するとよいでしょう。"
#~ msgid "force array results for single values"
#~ msgstr "単一内容の属性に対する getter アクセスであっても、配列で返すようにする"
#~ msgid "Even though ActiveLdap attempts to maintain programmatic ease by returning Array values only. By specifying ‘true’ as an argument to any attribute method you will get back a Array if it is single value. Here’s an example:"
#~ msgstr "属性メソッドの引数に true を渡すことで、その属性の中身が単一の内容であっても配列で返すように挙動を変更することができます。"
#~ msgid "Dynamic attribute crawling"
#~ msgstr "動的な属性のクローリング"
#~ msgid "If you use tab completion in irb, you’ll notice that you /can/ tab complete the dynamic attribute methods. You can still see which methods are for attributes using Base#attribute_names:"
#~ msgstr "IRBでタブ補完機能を有効にしている場合、属性アクセサメソッドをタブ補完で呼び出すことができます。また、Base#attribute_names メソッドを利用すれば属性アクセサメソッドの一覧を得ることが可能です。"
#~ msgid "Juggling multiple <placeholder-1/> connections"
#~ msgstr "複数の <placeholder-1/> 接続の切り替え"
#~ msgid "In the same vein as the last tip, you can use multiple <placeholder-1/> connections by per class as follows:"
#~ msgstr "最後に、クラスごとに別々の <placeholder-1/> コネクションを利用するには、以下のようにしてください。"
#~ msgid "If you have the Ruby/<placeholder-1/> package with the <placeholder-2/>/<placeholder-3/> patch from Ian MacDonald’s web site, you can use Kerberos to bind to your <placeholder-4/> server. By default, :try_sasl is false."
#~ msgstr ":try_sasl を利用することによって <placeholder-4/> サーバとのバインドに Kerberos を利用することができます。"
#~ msgid "Also note that you must be using OpenLDAP 2.1.29 or higher to use <placeholder-1/>/<placeholder-2/> due to some bugs in older versions of OpenLDAP."
#~ msgstr "またこの場合、OpenLDAP 2.1.29 かそれ以上が必要です。それ以前のバージョンには多数のバグが残っています。"
#~ msgid "Don’t be afraid! [Internals]"
#~ msgstr "こわがらないでください！"
#~ msgid "Don’t be afraid to add more methods to the extensions classes and to experiment. That’s exactly how I ended up with this package. If you come up with something cool, please share it!"
#~ msgstr "更にメソッドを追加することや、拡張クラスを定義することや、実験することを恐れないでください。私にとってこのパッケージの作成は一区切りつきましたが、もしクールな何かをあなたが見つけたなら、それを共有させてください！"
#~ msgid "The internal structure of ActiveLdap::Base, and thus all its subclasses, is still in flux. I’ve tried to minimize the changes to the overall <placeholder-1/>, but the internals are still rough around the edges."
#~ msgstr "ActiveLdap::Base やそのサブクラスの構造は、まだ不安定です。外側の API については最小の変化で済ませてきましたが、内部についてはまだ荒削りです。"
#~ msgid "Where’s ldap_mapping data stored? How can I get to it?"
#~ msgstr "ldap_mapping データはどこに保存されていますか？ それらはどうやって取得しますか？"
#~ msgid "When you call ldap_mapping, it overwrites several class methods inherited from Base:"
#~ msgstr "ldap_mapping をコールしたとき、ActiveLdap::Base のいくつかのクラスメソッドがオーバーライドされます。以下のメソッドです。"
#~ msgid "You can access these from custom class methods by calling MyClass.base(), or whatever. There are predefined instance methods for getting to these from any new instance methods you define:"
#~ msgstr "これらのクラスメソッドに MyClass.base() のようにアクセスすることができます。インスタンスからもこれらの情報を知るために、拡張クラスのインスタンスメソッドに以下のような定義済みメソッドが用意されています。"
#~ msgid "What else?"
#~ msgstr "その他の話題"
#~ msgid "Well if you want to use the <placeholder-1/> connection for anything, I’d suggest still calling Base.connection to get it. There really aren’t many other internals that need to be worried about. You could get the <placeholder-2/> schema with Base.schema."
#~ msgstr "もしあなたが何らかの理由で <placeholder-1/> コネクションを扱いたいなら、それを取得するためにActiveLdap::Base.connection メソッドをコールすることを今のところ提案します。他の内部機構で接続を扱うものは少ないです。スキーマの情報についてはActiveLdap::Base.schema メソッドにより取得できます。"
#~ msgid "The only other useful tricks are dereferencing and accessing the stored data. Since <placeholder-1/> attributes can have multiple names, e.g. cn or commonName, any methods you write might need to figure it out. I’d suggest just calling self[attribname] to get the value, but if that’s not good enough, you can call look up the stored name by #to_real_attribute_name as follows:"
#~ msgstr "残りの便利な機能は、格納されたデータをいろんな名前でアクセスできることです。<placeholder-1/>属性はcn / commonName のように複数の名前を持つことができるるので、どの名前でも同じ値にアクセスすることになります。値を取得するときは self['どれかの属性名'] とすることをオススメします。もし、これだけでは十分ではない場合は、本当の属性名を得るためにto_real_attribute_name プライベートメソッドを利用することができます。"
#~ msgid "This tells you the name the attribute is stored in behind the scenes (@data). Again, self[attribname] should be enough for most extensions, but if not, it’s probably safe to dabble here."
#~ msgstr "このメソッドは背後（@data）で属性データが格納されている名前をあなたに教えます。再び、self[属性名] はほとんどの拡張に対して十分でなくてはなりませんが、そうでなくても、たぶんここでは問題にならないでしょう。"
#~ msgid "Also, if you like to look up all aliases for an attribute, you can call the following:"
#~ msgstr "また例えば、ユーザクラスの属性名のエイリアスを見つけるためには以下のようにするとよいでしょう。"
#~ msgid "This is discovered automagically from the <placeholder-1/> server’s schema."
#~ msgstr "これは<placeholder-1/> サーバのスキーマから自動的に発見します。"
#~ msgid "Limitations"
#~ msgstr "制限"
#~ msgid "Speed"
#~ msgstr "実行速度"
#~ msgid "Currently, ActiveLdap could be faster. I have some recursive type checking going on which slows object creation down, and I’m sure there are many, many other places optimizations can be done. Feel free to send patches, or just hang in there until I can optimize away the slowness."
#~ msgstr "今のところ、ActiveLdap はまだ高速にできます。いくつかの再帰的な型チェックをオブジェクト作成時に行っており、それらがオブジェクトの生成速度を落としています。また、他のところでも多数の最適化が可能であることも認識しています。最適化できていない部分については私が最適化できるようになるまで我慢してもらうか、または気軽にパッチを送ってください。"
#~ msgid "Feedback"
#~ msgstr "フィードバック"
#~ msgid "Any and all feedback and patches are welcome. I am very excited about this package, and I’d like to see it prove helpful to more people than just myself."
#~ msgstr "どんなものでも、またすべてのフィードバックやパッチを歓迎します。私はこのパッケージについて興奮しています。また、私以上に、人々の助けになることを見たいと思っています。"
#~ msgid "File: rails &mdash; ActiveLdap"
#~ msgstr "ファイル: Rails &mdash; ActiveLdap"
#~ msgid "File: rails"
#~ msgstr "ファイル: Rails"
#~ msgid "Install"
#~ msgstr "インストール"
#~ msgid "You should also depend on an <placeholder-1/> adapter such as Net::<placeholder-2/> or Ruby/<placeholder-3/>. The following example uses Ruby/<placeholder-4/>:"
#~ msgstr "Net::<placeholder-2/>またはRuby/<placeholder-3/>など<placeholder-1/>アダプタもインストールしなければいけません。以下の例ではRuby/<placeholder-4/>を使っています:"
#~ msgid "Bundler will install the gems automatically when you run ‘bundle install’."
#~ msgstr "‘bundle install’を実行するとBundlerが自動的にgemをインストールします。"
#~ msgid "You also need to include the ActiveLdap railtie in config/application.rb, after the other railties:"
#~ msgstr "config/application.rbの他のrailtieの後にActiveLdapのrailtieも追加する必要があります:"
#~ msgid "You can use a <placeholder-1/> configuration per environment. They are in a file named ‘ldap.yml’ in the config directory of your rails app. This file has a similar function to the ‘database.yml’ file that allows you to set your database connection configurations per environment. Similarly, the ldap.yml file allows configurations to be set for development, test, and production environments."
#~ msgstr "環境毎に異なる<placeholder-1/>の設定を利用できます。設定はRailsアプリケーションの設定ディレクトリ内の‘ldap.yml’というファイルに保存します。このファイルは環境毎のデータベース接続設定を保存する‘database.yml’ファイルと似た役割です。database.ymlと同様にldap.ymlファイルにはdevelopment, test, production環境用の設定を保存します。"
#~ msgid "You can generate ‘config/ldap.yml’ by the follwoing command:"
#~ msgstr "以下のコマンドで‘config/ldap.yml’を生成できます:"
#~ msgid "You need to modify ‘config/ldap.yml’ generated by active_ldap:scaffold. For instance, the development entry would look something like the following:"
#~ msgstr "active_ldap:scaffoldで生成された‘config/ldap.yml’を編集する必要があります。例えば、development環境の設定は以下のようになるでしょう:"
#~ msgid "When your application starts up, ActiveLdap::Base.setup_connection will be called with the parameters specified for your current environment."
#~ msgstr "アプリケーション起動時、現在の環境のパラメータを使ってActiveLdap::Base.setup_connectionが自動的に実行されます。"
#~ msgid "You can generate a User model that represents entries under ou=Users by the following command:"
#~ msgstr "ou=Users以下のエントリを表現するUserモデルを以下のコマンドで生成できます:"
#~ msgid "Alphabetic Index"
#~ msgstr "アルファベット順の索引"
#~ msgid "File Listing"
#~ msgstr "ファイル一覧"
#~ msgid "Namespace Listing A-Z"
#~ msgstr "A-Z順のネームスペース一覧"
